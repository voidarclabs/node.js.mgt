{"version":3,"file":"ProxyGraph.js","sourceRoot":"src/","sources":["ProxyGraph.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,OAAO,EACL,MAAM,EACN,kBAAkB,EAElB,YAAY,EACZ,mBAAmB,EACnB,gBAAgB,EACjB,MAAM,mCAAmC,CAAC;AAC3C,OAAO,EAAE,KAAK,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAChE,OAAO,EAAE,oBAAoB,EAAE,MAAM,4DAA4D,CAAC;AAClG,OAAO,EAAE,eAAe,EAAE,MAAM,+CAA+C,CAAC;AAChF,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAElE;;;;;;GAMG;AACH,MAAM,OAAO,UAAW,SAAQ,KAAK;IACnC,YAAY,OAAe,EAAE,gBAAwC;QACnE,MAAM,UAAU,GAAiB;YAC/B,IAAI,YAAY,CAAC,IAAI,mBAAmB,EAAE,CAAC;YAC3C,IAAI,gBAAgB,EAAE;YACtB,IAAI,oBAAoB,CAAC,eAAe,CAAC;YACzC,IAAI,sBAAsB,CAAC,gBAAgB,CAAC;YAC5C,IAAI,kBAAkB,EAAE;SACzB,CAAC;QAEF,KAAK,CACH,MAAM,CAAC,kBAAkB,CAAC;YACxB,OAAO;YACP,UAAU,EAAE,eAAe,CAAC,GAAG,UAAU,CAAC;YAC1C,WAAW,EAAE,IAAI,GAAG,CAAS,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC;SAC1D,CAAC,CACH,CAAC;IACJ,CAAC;CACF","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  Client,\n  HTTPMessageHandler,\n  Middleware,\n  RetryHandler,\n  RetryHandlerOptions,\n  TelemetryHandler\n} from '@microsoft/microsoft-graph-client';\nimport { Graph, chainMiddleware } from '@microsoft/mgt-element';\nimport { SdkVersionMiddleware } from '@microsoft/mgt-element/dist/es6/utils/SdkVersionMiddleware';\nimport { PACKAGE_VERSION } from '@microsoft/mgt-element/dist/es6/utils/version';\nimport { CustomHeaderMiddleware } from './CustomHeaderMiddleware';\n\n/**\n * ProxyGraph Instance\n *\n * @export\n * @class ProxyGraph\n * @extends {Graph}\n */\nexport class ProxyGraph extends Graph {\n  constructor(baseUrl: string, getCustomHeaders?: () => Promise<object>) {\n    const middleware: Middleware[] = [\n      new RetryHandler(new RetryHandlerOptions()),\n      new TelemetryHandler(),\n      new SdkVersionMiddleware(PACKAGE_VERSION),\n      new CustomHeaderMiddleware(getCustomHeaders),\n      new HTTPMessageHandler()\n    ];\n\n    super(\n      Client.initWithMiddleware({\n        baseUrl,\n        middleware: chainMiddleware(...middleware),\n        customHosts: new Set<string>([new URL(baseUrl).hostname])\n      })\n    );\n  }\n}\n"]}