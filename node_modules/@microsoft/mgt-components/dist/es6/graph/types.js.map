{"version":3,"file":"types.js","sourceRoot":"src/","sources":["graph/types.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAoCH;;;;;GAKG;AACH,MAAM,CAAN,IAAY,QAyBX;AAzBD,WAAY,QAAQ;IAClB;;OAEG;IACH,yCAAS,CAAA;IAET;;OAEG;IACH,6CAAW,CAAA;IAEX;;OAEG;IACH,+CAAY,CAAA;IAEZ;;OAEG;IACH,mDAAc,CAAA;IAEd;;OAEG;IACH,iDAAa,CAAA;AACf,CAAC,EAzBW,QAAQ,KAAR,QAAQ,QAyBnB","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n\n/**\n * IDynamicPerson describes the person object we use throughout mgt-person,\n * which can be one of three similar Graph types.\n *\n * In addition, this custom type also defines the optional `personImage` property,\n * which is used to pass the image around to other components as part of the person object.\n */\nexport type IUser = MicrosoftGraph.User | MicrosoftGraph.Person;\nexport type IContact = MicrosoftGraph.Contact;\nexport type IGroup = MicrosoftGraph.Group;\n\nexport type IDynamicPerson = (IUser | IContact | IGroup) & {\n  /**\n   * personDetails.personImage is a toolkit injected property to pass image between components\n   * an optimization to avoid fetching the image when unnecessary.\n   *\n   * @type {string}\n   */\n  personImage?: string;\n};\n\n/**\n * avatarSize describes the enum strings that can be passed in to determine\n * size of avatar.\n */\nexport type AvatarSize = 'small' | 'large' | 'auto';\n\n/**\n * Insight string types used to retrive OneDrive files\n */\nexport type OfficeGraphInsightString = 'trending' | 'used' | 'shared';\n\n/**\n * Enumeration to define what parts of the person component render\n *\n * @export\n * @enum {number}\n */\nexport enum ViewType {\n  /**\n   * Render only the avatar\n   */\n  image = 2,\n\n  /**\n   * Render the avatar and one line of text\n   */\n  oneline = 3,\n\n  /**\n   * Render the avatar and two lines of text\n   */\n  twolines = 4,\n\n  /**\n   * Render the avatar and three lines of text\n   */\n  threelines = 5,\n\n  /**\n   * Render the avatar and four lines of text\n   */\n  fourlines = 6\n}\n\n/**\n * Postion describes the position of the dropdown\n */\nexport type Position = 'above' | 'below';\n"]}