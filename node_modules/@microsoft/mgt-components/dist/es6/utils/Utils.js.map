{"version":3,"file":"Utils.js","sourceRoot":"src/","sources":["utils/Utils.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { CacheService } from '@microsoft/mgt-element';\n\nexport const getRelativeDisplayDate = (date: Date): string => {\n  const now = new Date();\n\n  // Today -> 5:23 PM\n  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  if (date >= today) {\n    return date.toLocaleString('default', {\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n  }\n\n  // This week -> Sun 3:04 PM\n  const sunday = new Date(today);\n  sunday.setDate(now.getDate() - now.getDay());\n  if (date >= sunday) {\n    return date.toLocaleString('default', {\n      hour: 'numeric',\n      minute: 'numeric',\n      weekday: 'short'\n    });\n  }\n\n  // Last two week -> Sun 8/2\n  const lastTwoWeeks = new Date(sunday);\n  lastTwoWeeks.setDate(sunday.getDate() - 7);\n  if (date >= lastTwoWeeks) {\n    return date.toLocaleString('default', {\n      day: 'numeric',\n      month: 'numeric',\n      weekday: 'short'\n    });\n  }\n\n  // More than two weeks ago -> 8/1/2020\n  return date.toLocaleString('default', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric'\n  });\n};\n\n/**\n * returns day, month and year\n *\n * @export\n * @param {Date} date\n * @returns\n */\nexport const getDateString = (date: Date) => {\n  const month = date.getMonth();\n  const day = date.getDate();\n  const year = date.getFullYear();\n\n  return `${day} / ${month} / ${year}`;\n};\n\n/**\n * returns month and day\n *\n * @export\n * @param {Date} date\n * @returns\n */\nexport const getShortDateString = (date: Date) => {\n  const month = date.getMonth();\n  const day = date.getDate();\n\n  return `${getMonthString(month)} ${day}`;\n};\n\n/**\n * returns month string based on number\n *\n * @export\n * @param {number} month\n * @returns {string}\n */\nexport const getMonthString = (month: number): string => {\n  switch (month) {\n    case 0:\n      return 'January';\n    case 1:\n      return 'February';\n    case 2:\n      return 'March';\n    case 3:\n      return 'April';\n    case 4:\n      return 'May';\n    case 5:\n      return 'June';\n    case 6:\n      return 'July';\n    case 7:\n      return 'August';\n    case 8:\n      return 'September';\n    case 9:\n      return 'October';\n    case 10:\n      return 'November';\n    case 11:\n      return 'December';\n    default:\n      return 'Month';\n  }\n};\n\n/**\n * returns day of week string based on number\n * where 0 === Sunday\n *\n * @export\n * @param {number} day\n * @returns {string}\n */\nexport const getDayOfWeekString = (day: number): string => {\n  switch (day) {\n    case 0:\n      return 'Sunday';\n    case 1:\n      return 'Monday';\n    case 2:\n      return 'Tuesday';\n    case 3:\n      return 'Wednesday';\n    case 4:\n      return 'Thursday';\n    case 5:\n      return 'Friday';\n    case 6:\n      return 'Saturday';\n    default:\n      return 'Day';\n  }\n};\n\n/**\n * retrieve the days in the month provided by number\n *\n * @export\n * @param {number} monthNum\n * @returns {number}\n */\nexport const getDaysInMonth = (monthNum: number): number => {\n  switch (monthNum) {\n    case 1:\n      return 28;\n\n    case 3:\n    case 5:\n    case 8:\n    case 10:\n    default:\n      return 30;\n\n    case 0:\n    case 2:\n    case 4:\n    case 6:\n    case 7:\n    case 9:\n    case 11:\n      return 31;\n  }\n};\n\n/**\n * returns serialized date from month number and year number\n *\n * @export\n * @param {number} month\n * @param {number} year\n * @returns\n */\nexport const getDateFromMonthYear = (month: number, year: number) => {\n  const yearStr = `${year}`;\n\n  let monthStr = `${month}`;\n  if (monthStr.length < 2) {\n    monthStr = '0' + monthStr;\n  }\n\n  return new Date(`${yearStr}-${monthStr}-1T12:00:00-${new Date().getTimezoneOffset() / 60}`);\n};\n\n/**\n * ensures one call at a time\n *\n * @export\n * @param {*} func\n * @param {*} time\n * @returns\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const debounce = (func: Function, time: number) => {\n  let timeout: number;\n\n  return function () {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, prefer-rest-params\n    const functionCall = () => func.apply(this, arguments);\n\n    window.clearTimeout(timeout);\n    timeout = window.setTimeout(functionCall, time);\n  };\n};\n\n/**\n * converts a blob to base64 encoding\n *\n * @param {Blob} blob\n * @returns {Promise<string>}\n */\nexport const blobToBase64 = (blob: Blob): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = reject;\n    reader.onload = () => {\n      resolve(reader.result as string);\n    };\n    reader.readAsDataURL(blob);\n  });\n};\n\n/**\n * extracts an email address from a string\n *\n * @param {string} emailString\n * @returns {string}\n */\nexport const extractEmailAddress = (emailString: string): string => {\n  if (emailString.startsWith('[')) {\n    return emailString.match(/([a-zA-Z0-9+._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/gi).toString();\n  } else return emailString;\n};\n\n/**\n * checks if the email string is a valid email\n *\n * @param {string} emailString\n * @returns {boolean}\n */\nexport const isValidEmail = (emailString: string): boolean => {\n  const emailRx =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return emailRx.test(emailString);\n};\n\n/**\n * Convert bytes to human readable.\n *\n * @param bytes\n * @param decimals\n * @returns\n */\nexport const formatBytes = (bytes: number, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n};\n\n/**\n * Formats the a provided summary to valid html\n *\n * @param summary\n * @returns string\n */\nexport const sanitizeSummary = (summary: string) => {\n  if (summary) {\n    summary = summary?.replace(/<ddd\\/>/gi, '...');\n    summary = summary?.replace(/<c0>/gi, '<b>');\n    summary = summary?.replace(/<\\/c0>/gi, '</b>');\n  }\n\n  return summary;\n};\n\n/**\n * Trims the file extension from a file name\n *\n * @param fileName\n * @returns\n */\nexport const trimFileExtension = (fileName: string) => {\n  return fileName?.replace(/\\.[^/.]+$/, '');\n};\n\n/**\n * Get the name of a piece of content from the url\n *\n * @param webUrl\n * @returns\n */\nexport const getNameFromUrl = (webUrl: string) => {\n  const url = new URL(webUrl);\n  const name = url.pathname.split('/').pop();\n  return name.replace(/-/g, ' ');\n};\n\n/**\n * Defines the expiration time\n *\n * @param currentInvalidationPeriod\n * @returns number\n */\nexport const getResponseInvalidationTime = (currentInvalidationPeriod: number) => {\n  return (\n    currentInvalidationPeriod ||\n    CacheService.config.response.invalidationPeriod ||\n    CacheService.config.defaultInvalidationPeriod\n  );\n};\n\n/**\n * Whether the response store is enabled\n *\n * @returns boolean\n */\nexport const getIsResponseCacheEnabled = () => {\n  return CacheService.config.response.isEnabled && CacheService.config.isEnabled;\n};\n"]}