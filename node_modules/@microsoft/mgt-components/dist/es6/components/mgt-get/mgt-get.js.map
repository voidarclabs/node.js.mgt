{"version":3,"file":"mgt-get.js","sourceRoot":"src/","sources":["components/mgt-get/mgt-get.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport {\n  CacheService,\n  CacheStore,\n  equals,\n  MgtTemplatedComponent,\n  prepScopes,\n  Providers,\n  ProviderState,\n  customElement,\n  CollectionResponse\n} from '@microsoft/mgt-element';\n\nimport { getPhotoForResource } from '../../graph/graph.photos';\nimport { getDocumentThumbnail } from '../../graph/graph.files';\nimport { schemas } from '../../graph/cacheStores';\nimport { CacheResponse } from '../CacheResponse';\nimport { Entity } from '@microsoft/microsoft-graph-types';\n\n/**\n * Simple holder type for an image\n */\ninterface ImageValue {\n  image: string;\n}\n\n/**\n * A type guard to check if a value is a collection response\n *\n * @param value {*} the value to check\n * @returns {boolean} true if the value is a collection response\n */\nexport const isCollectionResponse = (value: unknown): value is CollectionResponse<unknown> =>\n  Array.isArray((value as CollectionResponse<unknown>)?.value);\n\n/**\n * Enumeration to define what types of query are available\n *\n * @export\n * @enum {string}\n */\nexport enum ResponseType {\n  /**\n   * Fetches a call as JSON\n   */\n  json = 'json',\n\n  /**\n   * Fetches a call as image\n   */\n  image = 'image'\n}\n\n/**\n * Defines the expiration time\n */\nconst getResponseInvalidationTime = (currentInvalidationPeriod: number): number =>\n  currentInvalidationPeriod ||\n  CacheService.config.response.invalidationPeriod ||\n  CacheService.config.defaultInvalidationPeriod;\n\n/**\n * Whether the response store is enabled\n */\nconst getIsResponseCacheEnabled = (): boolean =>\n  CacheService.config.response.isEnabled && CacheService.config.isEnabled;\n\n/**\n * Holder type emitted with the dataChange event\n */\nexport interface DataChangedDetail {\n  response?: CollectionResponse<Entity>;\n  error?: object;\n}\n\n/**\n * Custom element for making Microsoft Graph get queries\n *\n * @fires {CustomEvent<DataChangedDetail>} dataChange - Fired when data changes\n *\n * @export\n * @class mgt-get\n * @extends {MgtTemplatedComponent}\n */\n@customElement('get')\nexport class MgtGet extends MgtTemplatedComponent {\n  /**\n   * The resource to get\n   *\n   * @type {string}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'resource',\n    reflect: true,\n    type: String\n  })\n  public resource: string;\n\n  /**\n   * The scopes to request\n   *\n   * @type {string[]}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'scopes',\n    converter: (value, _type) => {\n      return value ? value.toLowerCase().split(',') : null;\n    },\n    reflect: true\n  })\n  public scopes: string[] = [];\n\n  /**\n   * Api version to use for request\n   *\n   * @type {string}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'version',\n    reflect: true,\n    type: String\n  })\n  public version = 'v1.0';\n\n  /**\n   * Type of response\n   * Default = json\n   * Supported values = json, image\n   *\n   * @type {ResponseType}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'type',\n    reflect: true,\n    type: ResponseType\n  })\n  public type: ResponseType = ResponseType.json;\n\n  /**\n   * Maximum number of pages to get for the resource\n   * default = 3\n   * if <= 0, all pages will be fetched\n   *\n   * @type {number}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'max-pages',\n    reflect: true,\n    type: Number\n  })\n  public maxPages = 3;\n\n  /**\n   * Number of milliseconds to poll the delta API and\n   * update the response. Set to positive value to enable\n   *\n   * @type {number}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'polling-rate',\n    reflect: true,\n    type: Number\n  })\n  public pollingRate = 0;\n\n  /**\n   * Enables cache on the response from the specified resource\n   * default = false\n   *\n   * @type {boolean}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'cache-enabled',\n    reflect: true,\n    type: Boolean\n  })\n  public cacheEnabled = false;\n\n  /**\n   * Invalidation period of the cache for the responses in milliseconds\n   *\n   * @type {number}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'cache-invalidation-period',\n    type: Number\n  })\n  public cacheInvalidationPeriod = 0;\n\n  /**\n   * Gets or sets the response of the request\n   *\n   * @type any\n   * @memberof MgtGet\n   */\n  @property({ attribute: false }) public response: CollectionResponse<Entity> | Entity | ImageValue;\n\n  /**\n   *\n   * Gets or sets the error (if any) of the request\n   *\n   * @type any\n   * @memberof MgtGet\n   */\n  @property({ attribute: false }) public error: object;\n\n  private isPolling = false;\n  private isRefreshing = false;\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * @param {*} name\n   * @param {*} oldValue\n   * @param {*} newValue\n   * @memberof MgtPersonCard\n   */\n  public attributeChangedCallback(name, oldval, newval) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    super.attributeChangedCallback(name, oldval, newval);\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Refresh the data\n   *\n   * @param {boolean} [hardRefresh=false]\n   * if false (default), the component will only update if the data changed\n   * if true, the data will be first cleared and reloaded completely\n   * @memberof MgtGet\n   */\n  public refresh(hardRefresh = false) {\n    this.isRefreshing = true;\n    if (hardRefresh) {\n      this.clearState();\n    }\n    void this.requestStateUpdate(hardRefresh);\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtGet\n   */\n  protected clearState(): void {\n    this.response = null;\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    if (this.isLoadingState && !this.response) {\n      return this.renderTemplate('loading', null);\n    } else if (this.error) {\n      return this.renderTemplate('error', this.error);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/dot-notation\n    } else if (this.hasTemplate('value') && isCollectionResponse(this.response)) {\n      let valueContent: TemplateResult;\n\n      if (isCollectionResponse(this.response)) {\n        let loading = null;\n        if (this.isLoadingState && !this.isPolling) {\n          loading = this.renderTemplate('loading', null);\n        }\n        valueContent = html`\n          ${this.response.value.map(v => this.renderTemplate('value', v, v.id))} ${loading}\n        `;\n      } else {\n        valueContent = this.renderTemplate('value', this.response);\n      }\n\n      if (this.hasTemplate('default')) {\n        const defaultContent = this.renderTemplate('default', this.response);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/dot-notation\n        if (this.templates['value'].templateOrder > this.templates['default'].templateOrder) {\n          return html`\n            ${defaultContent}${valueContent}\n          `;\n        } else {\n          return html`\n            ${valueContent}${defaultContent}\n          `;\n        }\n      } else {\n        return valueContent;\n      }\n    } else if (this.response) {\n      return this.renderTemplate('default', this.response) || html``;\n    } else if (this.hasTemplate('no-data')) {\n      return this.renderTemplate('no-data', null);\n    } else {\n      return html``;\n    }\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtGet\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n\n    this.error = null;\n\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return;\n    }\n\n    if (this.resource) {\n      try {\n        let cache: CacheStore<CacheResponse>;\n        const key = `${this.version}${this.resource}`;\n        let response: Entity | CollectionResponse<Entity> | ImageValue = null;\n\n        if (this.shouldRetrieveCache()) {\n          cache = CacheService.getCache<CacheResponse>(schemas.get, schemas.get.stores.responses);\n          const result: CacheResponse = getIsResponseCacheEnabled() ? await cache.getValue(key) : null;\n          if (result && getResponseInvalidationTime(this.cacheInvalidationPeriod) > Date.now() - result.timeCached) {\n            response = JSON.parse(result.response) as CollectionResponse<Entity>;\n          }\n        }\n\n        if (!response) {\n          let uri = this.resource;\n          let isDeltaLink = false;\n\n          // if we had a response earlier with a delta link, use it instead\n          if (this.response?.['@odata.deltaLink']) {\n            uri = this.response['@odata.deltaLink'] as string;\n            isDeltaLink = true;\n          } else {\n            // TODO: Check this against the base url for the cloud in use.\n            isDeltaLink = new URL(uri, 'https://graph.microsoft.com').pathname.endsWith('delta');\n          }\n\n          const graph = provider.graph.forComponent(this);\n          let request = graph.api(uri).version(this.version);\n\n          if (this.scopes?.length) {\n            request = request.middlewareOptions(prepScopes(...this.scopes));\n          }\n\n          if (this.type === ResponseType.json) {\n            response = (await request.get()) as CollectionResponse<Entity> | Entity;\n\n            if (isDeltaLink && isCollectionResponse(this.response) && isCollectionResponse(response)) {\n              const responseValues: Entity[] = response.value;\n              response.value = this.response.value.concat(responseValues);\n            }\n\n            if (!this.isPolling && !equals(this.response, response)) {\n              this.response = response;\n            }\n\n            // get more pages if there are available\n            if (isCollectionResponse(response) && response['@odata.nextLink']) {\n              let pageCount = 1;\n              let page = response;\n\n              while (\n                (pageCount < this.maxPages || this.maxPages <= 0 || (isDeltaLink && this.pollingRate)) &&\n                page?.['@odata.nextLink']\n              ) {\n                pageCount++;\n                const nextResource = (page['@odata.nextLink'] as string).split(this.version)[1];\n                page = (await graph.client.api(nextResource).version(this.version).get()) as CollectionResponse<Entity>;\n                if (page?.value?.length) {\n                  page.value = response.value.concat(page.value);\n                  response = page;\n                  if (!this.isPolling) {\n                    this.response = response;\n                  }\n                }\n              }\n            }\n          } else {\n            if (this.resource.indexOf('/photo/$value') === -1 && this.resource.indexOf('/thumbnails/') === -1) {\n              throw new Error('Only /photo/$value and /thumbnails/ endpoints support the image type');\n            }\n\n            let image: string;\n            if (this.resource.indexOf('/photo/$value') > -1) {\n              // Sanitizing the resource to ensure getPhotoForResource gets the right format\n              const sanitizedResource = this.resource.replace('/photo/$value', '');\n              const photoResponse = await getPhotoForResource(graph, sanitizedResource, this.scopes);\n              if (photoResponse) {\n                image = photoResponse.photo;\n              }\n            } else if (this.resource.indexOf('/thumbnails/') > -1) {\n              const imageResponse = await getDocumentThumbnail(graph, this.resource, this.scopes);\n              if (imageResponse) {\n                image = imageResponse.thumbnail;\n              }\n            }\n\n            if (image) {\n              response = {\n                image\n              };\n            }\n          }\n\n          if (this.shouldUpdateCache() && response) {\n            cache = CacheService.getCache<CacheResponse>(schemas.get, schemas.get.stores.responses);\n            await cache.putValue(key, { response: JSON.stringify(response) });\n          }\n        }\n\n        if (!equals(this.response, response)) {\n          this.response = response;\n        }\n      } catch (e: unknown) {\n        this.error = e as object;\n      }\n\n      if (this.response) {\n        this.error = null;\n\n        if (this.pollingRate) {\n          setTimeout(() => {\n            this.isPolling = true;\n            void this.loadState().finally(() => {\n              this.isPolling = false;\n            });\n          }, this.pollingRate);\n        }\n      }\n    } else {\n      this.response = null;\n    }\n    this.isRefreshing = false;\n    this.fireCustomEvent('dataChange', { response: this.response, error: this.error });\n  }\n\n  private shouldRetrieveCache(): boolean {\n    return getIsResponseCacheEnabled() && this.cacheEnabled && !(this.isRefreshing || this.isPolling);\n  }\n\n  private shouldUpdateCache(): boolean {\n    return getIsResponseCacheEnabled() && this.cacheEnabled;\n  }\n}\n"]}