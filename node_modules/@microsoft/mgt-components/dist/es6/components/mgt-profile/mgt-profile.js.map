{"version":3,"file":"mgt-profile.js","sourceRoot":"src/","sources":["components/mgt-profile/mgt-profile.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  EducationalActivity,\n  PersonAnnualEvent,\n  PersonInterest,\n  PhysicalAddress,\n  Profile\n} from '@microsoft/microsoft-graph-types-beta';\nimport { html, TemplateResult, nothing } from 'lit';\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { styles } from './mgt-profile-css';\nimport { strings } from './strings';\nimport { customElement } from '@microsoft/mgt-element';\n\n/**\n * The user profile subsection of the person card\n *\n * @export\n * @class MgtProfile\n * @extends {MgtTemplatedComponent}\n *\n * @cssprop --token-overflow-color - {Color} Color of the text showing more undisplayed values i.e. +3 more\n */\n@customElement('profile')\nexport class MgtProfile extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtProfile\n   */\n  public get displayName(): string {\n    return this.strings.SkillsAndExperienceSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get cardTitle(): string {\n    return this.strings.AboutCompactSectionTitle;\n  }\n\n  /**\n   * Returns true if the profile contains data\n   * that can be rendered\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberof MgtProfile\n   */\n  public get hasData(): boolean {\n    if (!this.profile) {\n      return false;\n    }\n\n    const { languages, skills, positions, educationalActivities } = this.profile;\n\n    return (\n      [\n        this._birthdayAnniversary,\n        this._personalInterests?.length,\n        this._professionalInterests?.length,\n        languages?.length,\n        skills?.length,\n        positions?.length,\n        educationalActivities?.length\n      ].filter(v => !!v).length > 0\n    );\n  }\n\n  /**\n   * The user's profile metadata\n   *\n   * @protected\n   * @type {IProfile}\n   * @memberof MgtProfile\n   */\n  protected get profile(): Profile {\n    return this._profile;\n  }\n  protected set profile(value: Profile) {\n    if (value === this._profile) {\n      return;\n    }\n\n    this._profile = value;\n    this._birthdayAnniversary = value?.anniversaries ? value.anniversaries.find(this.isBirthdayAnniversary) : null;\n    this._personalInterests = value?.interests ? value.interests.filter(this.isPersonalInterest) : null;\n    this._professionalInterests = value?.interests ? value.interests.filter(this.isProfessionalInterest) : null;\n  }\n\n  private _profile: Profile;\n  private _personalInterests: PersonInterest[];\n  private _professionalInterests: PersonInterest[];\n  private _birthdayAnniversary: PersonAnnualEvent;\n\n  constructor(profile: Profile) {\n    super();\n\n    this.profile = profile;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Profile);\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtProfile\n   */\n  public clearState(): void {\n    super.clearState();\n    this.profile = null;\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderCompactView(): TemplateResult {\n    return html`\n       <div class=\"root compact\" dir=${this.direction}>\n         ${this.renderSubSections().slice(0, 2)}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns\n   * @memberof MgtProfile\n   */\n  protected renderFullView() {\n    this.initPostRenderOperations();\n\n    return html`\n       <div class=\"root\" dir=${this.direction}>\n         ${this.renderSubSections()}\n       </div>\n     `;\n  }\n\n  /**\n   * Renders all subSections of the profile\n   * Defines order of how they render\n   *\n   * @protected\n   * @return {*}\n   * @memberof MgtProfile\n   */\n  protected renderSubSections() {\n    const subSections = [\n      this.renderSkills(),\n      this.renderBirthday(),\n      this.renderLanguages(),\n      this.renderWorkExperience(),\n      this.renderEducation(),\n      this.renderProfessionalInterests(),\n      this.renderPersonalInterests()\n    ];\n\n    return subSections.filter(s => !!s);\n  }\n\n  /**\n   * Render the user's known languages\n   *\n   * @protected\n   * @returns\n   * @memberof MgtProfile\n   */\n  protected renderLanguages(): TemplateResult {\n    const { languages } = this._profile;\n    if (!languages?.length) {\n      return null;\n    }\n\n    const languageItems: TemplateResult[] = [];\n    for (const language of languages) {\n      let proficiency = null;\n      if (language.proficiency?.length) {\n        proficiency = html`\n           <span class=\"language__proficiency\" tabindex=\"0\">\n             &nbsp;(${language.proficiency})\n           </span>\n         `;\n      }\n\n      languageItems.push(html`\n         <div class=\"token-list__item language\">\n           <span class=\"language__title\" tabindex=\"0\">${language.displayName}</span>\n           ${proficiency}\n         </div>\n       `);\n    }\n\n    const languageTitle = languageItems.length ? this.strings.LanguagesSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${languageTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${languageItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's skills\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderSkills(): TemplateResult {\n    const { skills } = this._profile;\n\n    if (!skills?.length) {\n      return null;\n    }\n\n    const skillItems: TemplateResult[] = [];\n    for (const skill of skills) {\n      skillItems.push(html`\n         <div class=\"token-list__item skill\" tabindex=\"0\">\n           ${skill.displayName}\n         </div>\n       `);\n    }\n\n    const skillsTitle = skillItems.length ? this.strings.SkillsSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${skillsTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${skillItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's work experience timeline\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderWorkExperience(): TemplateResult {\n    const { positions } = this._profile;\n\n    if (!positions?.length) {\n      return null;\n    }\n\n    const positionItems: TemplateResult[] = [];\n    for (const position of this._profile.positions) {\n      if (position.detail.description || position.detail.jobTitle !== '') {\n        positionItems.push(html`\n           <div class=\"data-list__item work-position\">\n             <div class=\"data-list__item__header\">\n               <div class=\"data-list__item__title\" tabindex=\"0\">${position.detail?.jobTitle}</div>\n               <div class=\"data-list__item__date-range\" tabindex=\"0\">\n                 ${this.getDisplayDateRange(position.detail)}\n               </div>\n             </div>\n             <div class=\"data-list__item__content\">\n               <div class=\"work-position__company\" tabindex=\"0\">\n                 ${position?.detail?.company?.displayName}\n               </div>\n               <div class=\"work-position__location\" tabindex=\"0\">\n                 ${this.displayLocation(position?.detail?.company?.address)}\n               </div>\n             </div>\n           </div>\n         `);\n      }\n    }\n    const workExperienceTitle = positionItems.length ? this.strings.WorkExperienceSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${workExperienceTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"data-list\">\n             ${positionItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's education timeline\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderEducation(): TemplateResult {\n    const { educationalActivities } = this._profile;\n\n    if (!educationalActivities?.length) {\n      return null;\n    }\n\n    const positionItems: TemplateResult[] = [];\n    for (const educationalActivity of educationalActivities) {\n      positionItems.push(html`\n         <div class=\"data-list__item educational-activity\">\n           <div class=\"data-list__item__header\">\n             <div class=\"data-list__item__title\" tabindex=\"0\">${educationalActivity.institution.displayName}</div>\n             <div class=\"data-list__item__date-range\" tabindex=\"0\">\n               ${this.getDisplayDateRange(educationalActivity)}\n             </div>\n           </div>\n           ${\n             educationalActivity.program.displayName\n               ? html`<div class=\"data-list__item__content\">\n                  <div class=\"educational-activity__degree\" tabindex=\"0\">\n                  ${educationalActivity.program.displayName}\n                </div>`\n               : nothing\n           }\n         </div>\n       `);\n    }\n\n    const educationTitle = positionItems.length ? this.strings.EducationSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${educationTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"data-list\">\n             ${positionItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's professional interests\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderProfessionalInterests(): TemplateResult {\n    if (!this._professionalInterests?.length) {\n      return null;\n    }\n\n    const interestItems: TemplateResult[] = [];\n    for (const interest of this._professionalInterests) {\n      interestItems.push(html`\n         <div class=\"token-list__item interest interest--professional\" tabindex=\"0\">\n           ${interest.displayName}\n         </div>\n       `);\n    }\n\n    const professionalInterests = interestItems.length ? this.strings.professionalInterestsSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${professionalInterests}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${interestItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's personal interests\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderPersonalInterests(): TemplateResult {\n    if (!this._personalInterests?.length) {\n      return null;\n    }\n\n    const interestItems: TemplateResult[] = [];\n    for (const interest of this._personalInterests) {\n      interestItems.push(html`\n         <div class=\"token-list__item interest interest--personal\" tabindex=\"0\">\n           ${interest.displayName}\n         </div>\n       `);\n    }\n\n    const personalInterests = interestItems.length ? this.strings.personalInterestsSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${personalInterests}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${interestItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's birthday\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderBirthday(): TemplateResult {\n    if (!this._birthdayAnniversary?.date) {\n      return null;\n    }\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">Birthday</div>\n         <div class=\"section__content\">\n           <div class=\"birthday\">\n             <div class=\"birthday__icon\">\n               ${getSvg(SvgIcon.Birthday)}\n             </div>\n             <div class=\"birthday__date\" tabindex=\"0\">\n               ${this.getDisplayDate(new Date(this._birthdayAnniversary.date))}\n             </div>\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  private readonly isPersonalInterest = (interest: PersonInterest): boolean => {\n    return interest.categories?.includes('personal');\n  };\n\n  private readonly isProfessionalInterest = (interest: PersonInterest): boolean => {\n    return interest.categories?.includes('professional');\n  };\n\n  private readonly isBirthdayAnniversary = (anniversary: PersonAnnualEvent): boolean => {\n    return anniversary.type === 'birthday';\n  };\n\n  private getDisplayDate(date: Date): string {\n    return date.toLocaleString('default', {\n      day: 'numeric',\n      month: 'long'\n    });\n  }\n\n  private getDisplayDateRange(event: EducationalActivity): string | symbol {\n    // if startMonthYear is not defined, we do not show the date range (otherwise it will always start with 1970)\n    if (!event.startMonthYear) {\n      return nothing;\n    }\n\n    const start = new Date(event.startMonthYear).getFullYear();\n    // if the start year is 0 or 1 - it's probably an error or a strange \"undefined\"-value\n    if (start === 0 || start === 1) {\n      return nothing;\n    }\n\n    const end = event.endMonthYear ? new Date(event.endMonthYear).getFullYear() : this.strings.currentYearSubtitle;\n    return `${start} — ${end}`;\n  }\n\n  private displayLocation(address: PhysicalAddress | undefined): string | symbol {\n    if (address?.city) {\n      if (address.state) {\n        return `${address.city}, ${address.state}`;\n      }\n      return address.city;\n    }\n    return nothing;\n  }\n\n  private initPostRenderOperations(): void {\n    setTimeout(() => {\n      try {\n        const sections = this.shadowRoot.querySelectorAll('section');\n        sections.forEach(section => {\n          // Perform post render operations per section\n          this.handleTokenOverflow(section);\n        });\n      } catch {\n        // An exception may occur if the component is suddenly removed during post render operations.\n      }\n    }, 0);\n  }\n\n  private handleTokenOverflow(section: HTMLElement): void {\n    const tokenLists = section.querySelectorAll('.token-list');\n    if (!tokenLists?.length) {\n      return;\n    }\n\n    for (const tokenList of Array.from(tokenLists)) {\n      const items = tokenList.querySelectorAll('.token-list__item');\n      if (!items?.length) {\n        continue;\n      }\n\n      let overflowItems: Element[] = null;\n      let itemRect = items[0].getBoundingClientRect();\n      const tokenListRect = tokenList.getBoundingClientRect();\n      const maxtop = itemRect.height * 2 + tokenListRect.top;\n\n      // Use (items.length - 1) to prevent [+1 more] from appearing.\n      for (let i = 0; i < items.length - 1; i++) {\n        itemRect = items[i].getBoundingClientRect();\n        if (itemRect.top > maxtop) {\n          overflowItems = Array.from(items).slice(i, items.length);\n          break;\n        }\n      }\n\n      if (overflowItems) {\n        overflowItems.forEach(i => i.classList.add('overflow'));\n\n        const overflowToken = document.createElement('div');\n        overflowToken.classList.add('token-list__item');\n        overflowToken.classList.add('token-list__item--show-overflow');\n        overflowToken.tabIndex = 0;\n        overflowToken.innerText = `+ ${overflowItems.length} more`;\n\n        // On click or enter(accessibility), remove [+n more] token and reveal the hidden overflow tokens.\n        const revealOverflow = () => {\n          overflowToken.remove();\n          overflowItems.forEach(i => i.classList.remove('overflow'));\n        };\n        overflowToken.addEventListener('click', () => {\n          revealOverflow();\n        });\n        overflowToken.addEventListener('keydown', (e: KeyboardEvent) => {\n          if (e.code === 'Enter') {\n            revealOverflow();\n          }\n        });\n        tokenList.appendChild(overflowToken);\n      }\n    }\n  }\n}\n"]}