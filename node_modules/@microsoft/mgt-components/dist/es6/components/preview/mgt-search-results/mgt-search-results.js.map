{"version":3,"file":"mgt-search-results.js","sourceRoot":"src/","sources":["components/preview/mgt-search-results/mgt-search-results.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, HTMLTemplateResult, nothing, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport {\n  CacheService,\n  CacheStore,\n  equals,\n  MgtTemplatedComponent,\n  prepScopes,\n  Providers,\n  ProviderState,\n  customElement,\n  mgtHtml,\n  BetaGraph,\n  BatchResponse,\n  CollectionResponse\n} from '@microsoft/mgt-element';\n\nimport { schemas } from '../../../graph/cacheStores';\nimport { strings } from './strings';\nimport { styles } from './mgt-search-results-css';\nimport {\n  DirectoryObject,\n  Drive,\n  DriveItem,\n  EntityType,\n  List,\n  ListItem,\n  Message,\n  SearchHit,\n  SearchHitsContainer,\n  SearchRequest,\n  SearchResponse,\n  Site\n} from '@microsoft/microsoft-graph-types';\nimport { SearchRequest as BetaSearchRequest } from '@microsoft/microsoft-graph-types-beta';\nimport {\n  getIsResponseCacheEnabled,\n  getNameFromUrl,\n  getRelativeDisplayDate,\n  getResponseInvalidationTime,\n  sanitizeSummary,\n  trimFileExtension\n} from '../../../utils/Utils';\nimport { getSvg, SvgIcon } from '../../../utils/SvgHelper';\nimport { fluentSkeleton, fluentButton, fluentTooltip, fluentDivider } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../../utils/FluentComponents';\nimport { CacheResponse } from '../../CacheResponse';\n\nregisterFluentComponents(fluentSkeleton, fluentButton, fluentTooltip, fluentDivider);\n\n/**\n * Object representing a thumbnail\n */\ninterface Thumbnail {\n  /**\n   * The url of the Thumbnail\n   */\n  url?: string;\n}\n\n/**\n * Object representing a Binary Thumbnail\n */\ninterface BinaryThumbnail {\n  /**\n   * The url of the Thumbnail\n   */\n  url?: string;\n\n  /**\n   * The web Url of the Thumbnail\n   */\n  thumbnailWebUrl?: string;\n}\n\n/**\n * Object representing a Search Answer\n */\ninterface Answer {\n  '@odata.type': string;\n  displayName?: string;\n  description?: string;\n  webUrl?: string;\n}\n\n/**\n * Object representing a search resource supporting thumbnails\n */\ninterface ThumbnailResource {\n  thumbnail: Thumbnail;\n}\n\ninterface UserResource {\n  lastModifiedBy?: {\n    user?: {\n      email?: string;\n    };\n  };\n  userPrincipalName?: string;\n}\n\n/**\n * Object representing a Search Resource\n */\ntype SearchResource = Partial<\n  DriveItem & Site & List & Message & ListItem & Drive & DirectoryObject & Answer & ThumbnailResource & UserResource\n>;\n\n/**\n * Object representing a full Search Response\n */\ntype SearchResponseCollection = CollectionResponse<SearchResponse>;\n\n/**\n * **Preview component** Custom element for making Microsoft Graph get queries.\n * Component may change before general availability release.\n *\n * @fires {CustomEvent<DataChangedDetail>} dataChange - Fired when data changes\n *\n * @cssprop --answer-border-radius - {Length} Border radius of an answer\n * @cssprop --answer-box-shadow - {Length} Box shadow of an answer\n * @cssprop --answer-border - {Length} Border of an answer\n * @cssprop --answer-padding - {Length} Padding of an answer\n *\n * @class mgt-search-results\n * @extends {MgtTemplatedComponent}\n */\n@customElement('search-results')\nexport class MgtSearchResults extends MgtTemplatedComponent {\n  /**\n   * Default page size is 10\n   */\n  private _size = 10;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * user the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * Gets all the localization strings for the component\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  private _queryString: string;\n\n  /**\n   * The query to send to Microsoft Search\n   *\n   * @type {string}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'query-string',\n    type: String\n  })\n  public get queryString(): string {\n    return this._queryString;\n  }\n  public set queryString(value: string) {\n    if (this._queryString !== value) {\n      this._queryString = value;\n      this._currentPage = 1;\n      this.setLoadingState(true);\n      void this.requestStateUpdate(true);\n    }\n  }\n\n  /**\n   * Query template to use in complex search scenarios\n   * Query Templates are currently supported only on the beta endpoint\n   */\n  @property({\n    attribute: 'query-template',\n    type: String\n  })\n  public queryTemplate: string;\n\n  /**\n   * One or more types of resources expected in the response.\n   * Possible values are: list, site, listItem, message, event,\n   * drive, driveItem, externalItem.\n   *\n   * @type {string[]}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'entity-types',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    },\n    type: String\n  })\n  public entityTypes: string[] = ['driveItem', 'listItem', 'site'];\n\n  /**\n   * The scopes to request\n   *\n   * @type {string[]}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'scopes',\n    converter: (value, _type) => {\n      return value ? value.toLowerCase().split(',') : null;\n    }\n  })\n  public scopes: string[] = [];\n\n  /**\n   * Content sources to use with External Items\n   *\n   * @type {string[]}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'content-sources',\n    converter: (value, _type) => {\n      return value ? value.toLowerCase().split(',') : null;\n    }\n  })\n  public contentSources: string[] = [];\n\n  /**\n   * Api version to use for request\n   *\n   * @type {string}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'version',\n    reflect: true,\n    type: String\n  })\n  public version = 'v1.0';\n\n  /**\n   * Specifies the offset for the search results.\n   * Offset 0 returns the very first result.\n   *\n   * @type {number}\n   * @memberof MgtSearchResults\n   */\n  public get from(): number {\n    return (this.currentPage - 1) * this.size;\n  }\n\n  /**\n   * The size of the page to be retrieved.\n   * The maximum value is 1000.\n   *\n   * @type {number}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'size',\n    reflect: true,\n    type: Number\n  })\n  public get size(): number {\n    return this._size;\n  }\n  public set size(value) {\n    if (value > this.maxPageSize) {\n      this._size = this.maxPageSize;\n    } else {\n      this._size = value;\n    }\n  }\n\n  /**\n   * The maximum number of pages to be clickable\n   * in the paging control\n   *\n   * @type {number}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'paging-max',\n    reflect: true,\n    type: Number\n  })\n  public pagingMax = 7;\n\n  /**\n   * Sets whether the result thumbnail should be fetched\n   * from the Microsoft Graph\n   *\n   * @type {boolean}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'fetch-thumbnail',\n    type: Boolean\n  })\n  public fetchThumbnail: boolean;\n\n  /**\n   * Contains the fields to be returned for each resource\n   *\n   * @type {string[]}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'fields',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    },\n    type: String\n  })\n  public fields: string[];\n\n  /**\n   * This triggers hybrid sort for messages : the first 3 messages are the most relevant.\n   * This property is only applicable to entityType=message\n   *\n   * @type {boolean}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'enable-top-results',\n    reflect: true,\n    type: Boolean\n  })\n  public enableTopResults = false;\n\n  /**\n   * Enables cache on the response from the specified resource\n   * default = false\n   *\n   * @type {boolean}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'cache-enabled',\n    reflect: true,\n    type: Boolean\n  })\n  public cacheEnabled = false;\n\n  /**\n   * Invalidation period of the cache for the responses in milliseconds\n   *\n   * @type {number}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'cache-invalidation-period',\n    reflect: true,\n    type: Number\n  })\n  public cacheInvalidationPeriod = 30000;\n\n  /**\n   * Gets or sets the response of the request\n   *\n   * @type any\n   * @memberof MgtSearchResults\n   */\n  @state() private response: SearchResponseCollection;\n\n  private isRefreshing = false;\n  private get searchEndpoint() {\n    return '/search/query';\n  }\n  private get maxPageSize() {\n    return 1000;\n  }\n  private readonly defaultFields: string[] = [\n    'webUrl',\n    'lastModifiedBy',\n    'lastModifiedDateTime',\n    'summary',\n    'displayName',\n    'name'\n  ];\n  private _currentPage = 1;\n  @state()\n  public get currentPage(): number {\n    return this._currentPage;\n  }\n  public set currentPage(value: number) {\n    if (this._currentPage !== value) {\n      this._currentPage = value;\n      void this.requestStateUpdate(true);\n    }\n  }\n\n  constructor() {\n    super();\n    console.warn(\n      '🦒: <mgt-search-results> is a preview component and may change prior to becoming generally available. See more information https://aka.ms/mgt/preview-components'\n    );\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * @param {string} name\n   * @param {string} oldValue\n   * @param {string} newValue\n   * @memberof MgtSearchResults\n   */\n  public attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Refresh the data\n   *\n   * @param {boolean} [hardRefresh=false]\n   * if false (default), the component will only update if the data changed\n   * if true, the data will be first cleared and reloaded completely\n   * @memberof MgtSearchResults\n   */\n  public refresh(hardRefresh = false) {\n    this.isRefreshing = true;\n    if (hardRefresh) {\n      this.clearState();\n    }\n    void this.requestStateUpdate(hardRefresh);\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtSearchResults\n   */\n  protected clearState(): void {\n    this.response = null;\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render(): TemplateResult {\n    let renderedTemplate: TemplateResult = null;\n    let headerTemplate: TemplateResult = null;\n    let footerTemplate: TemplateResult = null;\n\n    if (this.hasTemplate('header')) {\n      headerTemplate = this.renderTemplate('header', this.response);\n    }\n\n    footerTemplate = this.renderFooter(this.response?.value[0]?.hitsContainers[0]);\n\n    if (this.isLoadingState) {\n      renderedTemplate = this.renderLoading();\n    } else if (this.error) {\n      renderedTemplate = this.renderError();\n    } else if (this.response && this.hasTemplate('default')) {\n      renderedTemplate = this.renderTemplate('default', this.response) || html``;\n    } else if (this.response?.value[0]?.hitsContainers[0]) {\n      renderedTemplate = html`${this.response?.value[0]?.hitsContainers[0]?.hits?.map(result =>\n        this.renderResult(result)\n      )}`;\n    } else if (this.hasTemplate('no-data')) {\n      renderedTemplate = this.renderTemplate('no-data', null);\n    } else {\n      renderedTemplate = html``;\n    }\n\n    return html`\n      ${headerTemplate}\n      <div class=\"search-results\">\n        ${renderedTemplate}\n      </div>\n      ${footerTemplate}`;\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtSearchResults\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n\n    this.error = null;\n\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return;\n    }\n\n    if (this.queryString) {\n      try {\n        const requestOptions = this.getRequestOptions();\n\n        let cache: CacheStore<CacheResponse>;\n        const key = JSON.stringify({\n          endpoint: `${this.version}${this.searchEndpoint}`,\n          requestOptions\n        });\n        let response: SearchResponseCollection = null;\n\n        if (this.shouldRetrieveCache()) {\n          cache = CacheService.getCache<CacheResponse>(schemas.search, schemas.search.stores.responses);\n          const result: CacheResponse = getIsResponseCacheEnabled() ? await cache.getValue(key) : null;\n          if (result && getResponseInvalidationTime(this.cacheInvalidationPeriod) > Date.now() - result.timeCached) {\n            response = JSON.parse(result.response) as SearchResponseCollection;\n          }\n        }\n\n        if (!response) {\n          const graph = provider.graph.forComponent(this);\n          let request = graph.api(this.searchEndpoint).version(this.version);\n\n          if (this.scopes?.length) {\n            request = request.middlewareOptions(prepScopes(...this.scopes));\n          }\n\n          response = (await request.post({ requests: [requestOptions] })) as SearchResponseCollection;\n\n          if (this.fetchThumbnail) {\n            const thumbnailBatch = graph.createBatch<BinaryThumbnail>();\n            const thumbnailBatchBeta = BetaGraph.fromGraph(graph).createBatch<BinaryThumbnail>();\n\n            const hits =\n              response.value?.length && response.value[0].hitsContainers?.length\n                ? response.value[0].hitsContainers[0]?.hits ?? []\n                : [];\n            for (const element of hits) {\n              const resource = element.resource as SearchResource;\n              if (\n                (resource.size > 0 || resource.webUrl?.endsWith('.aspx')) &&\n                (resource['@odata.type'] === '#microsoft.graph.driveItem' ||\n                  resource['@odata.type'] === '#microsoft.graph.listItem')\n              ) {\n                if (resource['@odata.type'] === '#microsoft.graph.listItem') {\n                  thumbnailBatchBeta.get(\n                    element.hitId.toString(),\n                    `/sites/${resource.parentReference.siteId}/pages/${resource.id}`\n                  );\n                } else {\n                  thumbnailBatch.get(\n                    element.hitId.toString(),\n                    `/drives/${resource.parentReference.driveId}/items/${resource.id}/thumbnails/0/medium`\n                  );\n                }\n              }\n            }\n\n            /**\n             * Based on the batch response, augment the search result resource with the thumbnail url\n             *\n             * @param thumbnailResponse\n             */\n            const augmentResponse = (thumbnailResponse: Map<string, BatchResponse<BinaryThumbnail>>) => {\n              if (thumbnailResponse && thumbnailResponse.size > 0) {\n                for (const [k, value] of thumbnailResponse) {\n                  const result: SearchHit = response.value[0].hitsContainers[0].hits[k] as SearchHit;\n                  const thumbnail: Thumbnail =\n                    result.resource['@odata.type'] === '#microsoft.graph.listItem'\n                      ? { url: value.content.thumbnailWebUrl }\n                      : { url: value.content.url };\n                  (result.resource as SearchResource).thumbnail = thumbnail;\n                }\n              }\n            };\n\n            try {\n              augmentResponse(await thumbnailBatch.executeAll());\n              augmentResponse(await thumbnailBatchBeta.executeAll());\n            } catch {\n              // no-op\n            }\n          }\n\n          if (this.shouldUpdateCache() && response) {\n            cache = CacheService.getCache<CacheResponse>(schemas.search, schemas.search.stores.responses);\n            await cache.putValue(key, { response: JSON.stringify(response) });\n          }\n        }\n\n        if (!equals(this.response, response)) {\n          this.response = response;\n        }\n      } catch (e: unknown) {\n        this.error = e as Error;\n      }\n\n      if (this.response) {\n        this.error = null;\n      }\n    } else {\n      this.response = null;\n    }\n    this.isRefreshing = false;\n    this.fireCustomEvent('dataChange', { response: this.response, error: this.error as Error });\n  }\n\n  /**\n   * Render the loading state.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtSearchResults\n   */\n  protected renderLoading(): TemplateResult {\n    return (\n      this.renderTemplate('loading', null) ||\n      // creates an array of n items where n is the current max number of results, this builds a shimmer for that many results\n      html`\n        ${[...Array<number>(this.size)].map(() => {\n          return html`\n            <div class=\"search-result\">\n              <div class=\"search-result-grid\">\n                <div class=\"search-result-icon\">\n                  <fluent-skeleton class=\"search-result-icon__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                </div>\n                <div class=\"searc-result-content\">\n                  <div class=\"search-result-name\">\n                    <fluent-skeleton class=\"search-result-name__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                  </div>\n                  <div class=\"search-result-info\">\n                    <div class=\"search-result-author\">\n                      <fluent-skeleton class=\"search-result-author__shimmer\" shape=\"circle\" shimmer></fluent-skeleton>\n                    </div>\n                    <div class=\"search-result-date\">\n                      <fluent-skeleton class=\"search-result-date__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                    </div>\n                  </div>\n                  <fluent-skeleton class=\"search-result-content__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                  <fluent-skeleton class=\"search-result-content__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                </div>\n                ${\n                  this.fetchThumbnail &&\n                  html`\n                    <div class=\"search-result-thumbnail\">\n                      <fluent-skeleton class=\"search-result-thumbnail__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                    </div>\n                  `\n                }\n              </div>\n              <fluent-divider></fluent-divider>\n            </div>\n          `;\n        })}\n       `\n    );\n  }\n\n  /**\n   * Render the result item.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtSearchResults\n   */\n  protected renderResult(result: SearchHit): TemplateResult {\n    const type = this.getResourceType(result.resource);\n    if (this.hasTemplate(`result-${type}`)) {\n      return this.renderTemplate(`result-${type}`, result, result.hitId);\n    } else {\n      switch (result.resource['@odata.type']) {\n        case '#microsoft.graph.driveItem':\n          return this.renderDriveItem(result);\n        case '#microsoft.graph.site':\n          return this.renderSite(result);\n        case '#microsoft.graph.person':\n          return this.renderPerson(result);\n        case '#microsoft.graph.drive':\n        case '#microsoft.graph.list':\n          return this.renderList(result);\n        case '#microsoft.graph.listItem':\n          return this.renderListItem(result);\n        case '#microsoft.graph.search.bookmark':\n          return this.renderBookmark(result);\n        case '#microsoft.graph.search.acronym':\n          return this.renderAcronym(result);\n        case '#microsoft.graph.search.qna':\n          return this.renderQnA(result);\n        default:\n          return this.renderDefault(result);\n      }\n    }\n  }\n\n  /**\n   * Renders the footer with pages if required\n   *\n   * @param hitsContainer Search results\n   */\n  private renderFooter(hitsContainer: SearchHitsContainer) {\n    if (this.pagingRequired(hitsContainer)) {\n      const pages = this.getActivePages(hitsContainer.total);\n\n      return html`\n        <div class=\"search-results-pages\">\n          ${this.renderPreviousPage()}\n          ${this.renderFirstPage(pages)}\n          ${this.renderAllPages(pages)}\n          ${this.renderNextPage()}\n        </div>\n      `;\n    }\n  }\n\n  /**\n   * Validates if paging is required based on the provided results\n   *\n   * @param hitsContainer\n   */\n  private pagingRequired(hitsContainer: SearchHitsContainer) {\n    return hitsContainer?.moreResultsAvailable || this.currentPage * this.size < hitsContainer?.total;\n  }\n\n  /**\n   * Gets a list of active pages to render for paging purposes\n   *\n   * @param totalResults Total number of results of the search query\n   */\n  private getActivePages(totalResults: number) {\n    const getFirstPage = () => {\n      const medianPage = this.currentPage - Math.floor(this.pagingMax / 2) - 1;\n\n      if (medianPage >= Math.floor(this.pagingMax / 2)) {\n        return medianPage;\n      } else {\n        return 0;\n      }\n    };\n\n    const pages: number[] = [];\n    const firstPage = getFirstPage();\n\n    if (firstPage + 1 > this.pagingMax - this.currentPage || this.pagingMax === this.currentPage) {\n      for (\n        let i = firstPage + 1;\n        i < Math.ceil(totalResults / this.size) &&\n        i < this.pagingMax + (this.currentPage - 1) &&\n        pages.length < this.pagingMax - 2;\n        ++i\n      ) {\n        pages.push(i + 1);\n      }\n    } else {\n      for (let i = firstPage; i < this.pagingMax; ++i) {\n        pages.push(i + 1);\n      }\n    }\n\n    return pages;\n  }\n\n  /**\n   * Renders all sequential pages buttons\n   *\n   * @param pages\n   */\n  private renderAllPages(pages: number[]) {\n    return html`\n      ${pages.map(\n        page =>\n          html`\n            <fluent-button\n              title=\"${strings.page} ${page}\"\n              appearance=\"stealth\"\n              class=\"${page === this.currentPage ? 'search-results-page-active' : 'search-results-page'}\"\n              @click=\"${() => this.onPageClick(page)}\">\n                ${page}\n            </fluent-button>`\n      )}`;\n  }\n\n  /**\n   * Renders the \"First page\" button\n   *\n   * @param pages\n   */\n  private renderFirstPage(pages: number[]) {\n    return html`\n      ${\n        pages.some(page => page === 1)\n          ? nothing\n          : html`\n              <fluent-button\n                 title=\"${strings.page} 1\"\n                 appearance=\"stealth\"\n                 class=\"search-results-page\"\n                 @click=\"${this.onFirstPageClick}\">\n                 1\n               </fluent-button>`\n          ? html`\n              <fluent-button\n                id=\"page-back-dot\"\n                appearance=\"stealth\"\n                class=\"search-results-page\"\n                title=\"${this.getDotButtonTitle()}\"\n                @click=\"${() => this.onPageClick(this.currentPage - Math.ceil(this.pagingMax / 2))}\"\n              >\n                ...\n              </fluent-button>`\n          : nothing\n      }`;\n  }\n\n  /**\n   * Constructs the \"dot dot dot\" button title\n   */\n  private getDotButtonTitle() {\n    return `${strings.back} ${Math.ceil(this.pagingMax / 2)} ${strings.pages}`;\n  }\n\n  /**\n   * Renders the \"Previous page\" button\n   */\n  private renderPreviousPage() {\n    return this.currentPage > 1\n      ? html`\n          <fluent-button\n            appearance=\"stealth\"\n            class=\"search-results-page\"\n            title=\"${strings.back}\"\n            @click=\"${this.onPageBackClick}\">\n              ${getSvg(SvgIcon.ChevronLeft)}\n            </fluent-button>`\n      : nothing;\n  }\n\n  /**\n   * Renders the \"Next page\" button\n   */\n  private renderNextPage() {\n    return !this.isLastPage()\n      ? html`\n          <fluent-button\n            appearance=\"stealth\"\n            class=\"search-results-page\"\n            title=\"${strings.next}\"\n            aria-label=\"${strings.next}\"\n            @click=\"${this.onPageNextClick}\">\n              ${getSvg(SvgIcon.ChevronRight)}\n            </fluent-button>`\n      : nothing;\n  }\n\n  /**\n   * Triggers a specific page click\n   *\n   * @param pageNumber\n   */\n  private onPageClick(pageNumber: number) {\n    this.currentPage = pageNumber;\n    this.scrollToFirstResult();\n  }\n\n  /**\n   * Triggers a first page click\n   *\n   */\n  private readonly onFirstPageClick = () => {\n    this.currentPage = 1;\n    this.scrollToFirstResult();\n  };\n\n  /**\n   * Triggers a previous page click\n   */\n  private readonly onPageBackClick = () => {\n    this.currentPage--;\n    this.scrollToFirstResult();\n  };\n\n  /**\n   * Triggers a next page click\n   */\n  private readonly onPageNextClick = () => {\n    this.currentPage++;\n    this.scrollToFirstResult();\n  };\n\n  /**\n   * Validates if the current page is the last page of the collection\n   */\n  private isLastPage() {\n    return this.currentPage === Math.ceil(this.response.value[0].hitsContainers[0].total / this.size);\n  }\n\n  /**\n   * Scroll to the top of the search results\n   */\n  private scrollToFirstResult() {\n    const target = this.renderRoot.querySelector('.search-results');\n    target.scrollIntoView({\n      block: 'start',\n      behavior: 'smooth'\n    });\n  }\n\n  /**\n   * Gets the resource type (entity) of a search result\n   *\n   * @param resource\n   */\n  private getResourceType(resource: SearchResource) {\n    return resource['@odata.type'].split('.').pop();\n  }\n\n  /**\n   * Renders a driveItem entity\n   *\n   * @param result\n   */\n  private renderDriveItem(result: SearchHit) {\n    const resource = result.resource as SearchResource;\n    return mgtHtml`\n      <div class=\"search-result-grid\">\n        <div class=\"search-result-icon\">\n          <mgt-file\n            .fileDetails=\"${result.resource}\"\n            view=\"image\"\n            class=\"file-icon\">\n          </mgt-file>\n        </div>\n        <div class=\"search-result-content\">\n          <div class=\"search-result-name\">\n            <a href=\"${resource.webUrl}?Web=1\" target=\"_blank\">${trimFileExtension(resource.name)}</a>\n          </div>\n          <div class=\"search-result-info\">\n            <div class=\"search-result-author\">\n              <mgt-person\n                person-query=${resource.lastModifiedBy.user.email}\n                view=\"oneLine\"\n                person-card=\"hover\"\n                show-presence=\"true\">\n              </mgt-person>\n            </div>\n            <div class=\"search-result-date\">\n              &nbsp; ${strings.modified} ${getRelativeDisplayDate(new Date(resource.lastModifiedDateTime))}\n            </div>\n          </div>\n          <div class=\"search-result-summary\" .innerHTML=\"${sanitizeSummary(result.summary)}\"></div>\n        </div>\n        ${\n          resource.thumbnail?.url &&\n          html`\n          <div class=\"search-result-thumbnail\">\n            <a href=\"${resource.webUrl}\" target=\"_blank\"><img alt=\"${resource.name}\" src=\"${resource.thumbnail?.url}\" /></a>\n          </div>`\n        }\n\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders a site entity\n   *\n   * @param result\n   * @returns\n   */\n  private renderSite(result: SearchHit): HTMLTemplateResult {\n    const resource = result.resource as SearchResource;\n    return html`\n      <div class=\"search-result-grid\">\n        <div class=\"search-result-icon\">\n          ${this.getResourceIcon(resource)}\n        </div>\n        <div class=\"searc-result-content\">\n          <div class=\"search-result-name\">\n            <a href=\"${resource.webUrl}\" target=\"_blank\">${resource.displayName}</a>\n          </div>\n          <div class=\"search-result-info\">\n            <div class=\"search-result-url\">\n              <a href=\"${resource.webUrl}\" target=\"_blank\">${resource.webUrl}</a>\n            </div>\n          </div>\n          <div class=\"search-result-summary\" .innerHTML=\"${sanitizeSummary(result.summary)}\"></div>\n        </div>\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders a list entity\n   *\n   * @param result\n   * @returns\n   */\n  private renderList(result: SearchHit): HTMLTemplateResult {\n    const resource = result.resource as SearchResource;\n    return mgtHtml`\n      <div class=\"search-result-grid\">\n        <div class=\"search-result-icon\">\n          <mgt-file\n            .fileDetails=\"${result.resource}\"\n            view=\"image\">\n          </mgt-file>\n        </div>\n        <div class=\"search-result-content\">\n          <div class=\"search-result-name\">\n            <a href=\"${resource.webUrl}?Web=1\" target=\"_blank\">\n              ${trimFileExtension(resource.name || getNameFromUrl(resource.webUrl))}\n            </a>\n          </div>\n          <div class=\"search-result-summary\" .innerHTML=\"${sanitizeSummary(result.summary)}\"></div>\n        </div>\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders a listItem entity\n   *\n   * @param result\n   * @returns\n   */\n  private renderListItem(result: SearchHit): HTMLTemplateResult {\n    const resource = result.resource as SearchResource;\n    return mgtHtml`\n      <div class=\"search-result-grid\">\n        <div class=\"search-result-icon\">\n          ${resource.webUrl.endsWith('.aspx') ? getSvg(SvgIcon.News) : getSvg(SvgIcon.FileOuter)}\n        </div>\n        <div class=\"search-result-content\">\n          <div class=\"search-result-name\">\n            <a href=\"${resource.webUrl}?Web=1\" target=\"_blank\">\n              ${trimFileExtension(resource.name || getNameFromUrl(resource.webUrl))}\n            </a>\n          </div>\n          <div class=\"search-result-info\">\n            <div class=\"search-result-author\">\n              <mgt-person\n                person-query=${resource.lastModifiedBy.user.email}\n                view=\"oneLine\"\n                person-card=\"hover\"\n                show-presence=\"true\">\n              </mgt-person>\n            </div>\n            <div class=\"search-result-date\">\n              &nbsp; ${strings.modified} ${getRelativeDisplayDate(new Date(resource.lastModifiedDateTime))}\n            </div>\n          </div>\n          <div class=\"search-result-summary\" .innerHTML=\"${sanitizeSummary(result.summary)}\"></div>\n        </div>\n        ${\n          resource.thumbnail?.url &&\n          html`\n          <div class=\"search-result-thumbnail\">\n            <a href=\"${resource.webUrl}\" target=\"_blank\"><img alt=\"${trimFileExtension(\n              resource.name || getNameFromUrl(resource.webUrl)\n            )}\" src=\"${resource.thumbnail?.url || nothing}\" /></a>\n          </div>`\n        }\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders a person entity\n   *\n   * @param result\n   * @returns\n   */\n  private renderPerson(result: SearchHit): HTMLTemplateResult {\n    const resource = result.resource as SearchResource;\n    return mgtHtml`\n      <div class=\"search-result\">\n        <mgt-person\n          view=\"fourLines\"\n          person-query=${resource.userPrincipalName}\n          person-card=\"hover\"\n          show-presence=\"true\">\n        </mgt-person>\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders a bookmark entity\n   *\n   * @param result\n   */\n  private renderBookmark(result: SearchHit) {\n    return this.renderAnswer(result, SvgIcon.DoubleBookmark);\n  }\n\n  /**\n   * Renders an acronym entity\n   *\n   * @param result\n   */\n  private renderAcronym(result: SearchHit) {\n    return this.renderAnswer(result, SvgIcon.BookOpen);\n  }\n\n  /**\n   * Renders a qna entity\n   *\n   * @param result\n   */\n  private renderQnA(result: SearchHit) {\n    return this.renderAnswer(result, SvgIcon.BookQuestion);\n  }\n\n  /**\n   * Renders an answer entity\n   *\n   * @param result\n   */\n  private renderAnswer(result: SearchHit, icon: SvgIcon) {\n    const resource = result.resource as SearchResource;\n    return html`\n      <div class=\"search-result-grid search-result-answer\">\n        <div class=\"search-result-icon\">\n          ${getSvg(icon)}\n        </div>\n        <div class=\"search-result-content\">\n          <div class=\"search-result-name\">\n            <a href=\"${this.getResourceUrl(resource)}?Web=1\" target=\"_blank\">${resource.displayName}</a>\n          </div>\n          <div class=\"search-result-summary\">${resource.description}</div>\n        </div>\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders any entity\n   *\n   * @param result\n   */\n  private renderDefault(result: SearchHit) {\n    const resource = result.resource as SearchResource;\n    const resourceUrl = this.getResourceUrl(resource);\n    return html`\n      <div class=\"search-result-grid\">\n        <div class=\"search-result-icon\">\n          ${this.getResourceIcon(resource)}\n        </div>\n        <div class=\"search-result-content\">\n          <div class=\"search-result-name\">\n            ${\n              resourceUrl\n                ? html`\n                  <a href=\"${resourceUrl}?Web=1\" target=\"_blank\">${this.getResourceName(resource)}</a>\n                `\n                : html`\n                  ${this.getResourceName(resource)}\n                `\n            }\n          </div>\n          <div class=\"search-result-summary\" .innerHTML=\"${this.getResultSummary(result)}\"></div>\n        </div>\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Gets default resource URLs\n   *\n   * @param resource\n   */\n  private getResourceUrl(resource: SearchResource) {\n    return resource.webUrl || /* resource.url ||*/ resource.webLink || null;\n  }\n\n  /**\n   * Gets default resource Names\n   *\n   * @param resource\n   */\n  private getResourceName(resource: SearchResource) {\n    return resource.displayName || resource.subject || trimFileExtension(resource.name);\n  }\n\n  /**\n   * Gets default result summary\n   *\n   * @param resource\n   */\n  private getResultSummary(result: SearchHit) {\n    return sanitizeSummary(result.summary || (result.resource as SearchResource)?.description || null);\n  }\n\n  /**\n   * Gets default resource icon\n   *\n   * @param resource\n   */\n  private getResourceIcon(resource: SearchResource) {\n    switch (resource['@odata.type']) {\n      case '#microsoft.graph.site':\n        return getSvg(SvgIcon.Globe);\n      case '#microsoft.graph.message':\n        return getSvg(SvgIcon.Email);\n      case '#microsoft.graph.event':\n        return getSvg(SvgIcon.Event);\n      case 'microsoft.graph.chatMessage':\n        return getSvg(SvgIcon.SmallChat);\n      default:\n        return getSvg(SvgIcon.FileOuter);\n    }\n  }\n\n  /**\n   * Validates if cache should be retrieved\n   *\n   * @returns\n   */\n  private shouldRetrieveCache(): boolean {\n    return getIsResponseCacheEnabled() && this.cacheEnabled && !this.isRefreshing;\n  }\n\n  /**\n   * Validates if cache should be updated\n   *\n   * @returns\n   */\n  private shouldUpdateCache(): boolean {\n    return getIsResponseCacheEnabled() && this.cacheEnabled;\n  }\n\n  /**\n   * Builds the appropriate RequestOption for the search query\n   *\n   * @returns\n   */\n  private getRequestOptions(): SearchRequest | BetaSearchRequest {\n    const requestOptions: SearchRequest = {\n      entityTypes: this.entityTypes as EntityType[],\n      query: {\n        queryString: this.queryString\n      },\n      from: this.from ? this.from : undefined,\n      size: this.size ? this.size : undefined,\n      fields: this.getFields(),\n      enableTopResults: this.enableTopResults ? this.enableTopResults : undefined\n    };\n\n    if (this.entityTypes.includes('externalItem')) {\n      requestOptions.contentSources = this.contentSources;\n    }\n\n    if (this.version === 'beta') {\n      (requestOptions as BetaSearchRequest).query.queryTemplate = this.queryTemplate ? this.queryTemplate : undefined;\n    }\n\n    return requestOptions;\n  }\n\n  /**\n   * Gets the fields and default fields for default render methods\n   *\n   * @returns\n   */\n  private getFields(): string[] {\n    if (this.fields) {\n      return this.defaultFields.concat(this.fields);\n    }\n\n    return undefined;\n  }\n}\n"]}