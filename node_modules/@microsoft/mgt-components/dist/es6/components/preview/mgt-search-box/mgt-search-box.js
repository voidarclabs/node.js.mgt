/**
 * -------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.
 * See License in the project root for license information.
 * -------------------------------------------------------------------------------------------
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { html } from 'lit';
import { property } from 'lit/decorators.js';
import { customElement, MgtBaseComponent } from '@microsoft/mgt-element';
import { fluentSearch } from '@fluentui/web-components';
import { registerFluentComponents } from '../../../utils/FluentComponents';
import { strings } from './strings';
import { styles } from './mgt-search-box-css';
import { debounce } from '../../../utils/Utils';
registerFluentComponents(fluentSearch);
/**
 * **Preview component** Web component used to enter a search value to power search scenarios.
 * Component may change before general availability release.
 *
 * @fires {CustomEvent<string>} searchTermChanged - Fired when the search term is changed
 *
 * @class MgtSearchBox
 * @extends {MgtBaseComponent}
 */
let MgtSearchBox = class MgtSearchBox extends MgtBaseComponent {
    /**
     * Array of styles to apply to the element. The styles should be defined
     * user the `css` tag function.
     */
    static get styles() {
        return styles;
    }
    /**
     * Provides strings for localization
     *
     * @readonly
     * @protected
     * @memberof MgtSearchBox
     */
    get strings() {
        return strings;
    }
    /**
     * Value of the search term
     *
     * @type {string}
     * @memberof MgtSearchBox
     */
    get searchTerm() {
        return this._searchTerm;
    }
    set searchTerm(value) {
        this._searchTerm = value;
        this.fireSearchTermChanged();
    }
    constructor() {
        super();
        this._searchTerm = '';
        this.onInputChanged = (e) => {
            this.searchTerm = e.target.value;
        };
        console.warn('ðŸ¦’: <mgt-search-box> is a preview component and may change prior to becoming generally available. See more information https://aka.ms/mgt/preview-components');
        this.debounceDelay = 300;
    }
    /**
     * Renders the component
     *
     * @return {TemplateResult}
     * @memberof MgtSearchBox
     */
    render() {
        var _a;
        return html `
      <fluent-search
        autocomplete="off"
        class="search-term-input"
        appearance="outline"
        value=${(_a = this.searchTerm) !== null && _a !== void 0 ? _a : ''}
        placeholder=${this.placeholder ? this.placeholder : strings.placeholder}
        title=${this.title ? this.title : strings.title}
        @input=${this.onInputChanged}
        @change=${this.onInputChanged}
      >
      </fluent-search>`;
    }
    /**
     * Fires and debounces the custom event to listeners
     */
    fireSearchTermChanged() {
        if (!this.debouncedSearchTermChanged) {
            this.debouncedSearchTermChanged = debounce(() => {
                this.fireCustomEvent('searchTermChanged', this.searchTerm);
            }, this.debounceDelay);
        }
        this.debouncedSearchTermChanged();
    }
};
__decorate([
    property({
        attribute: 'placeholder',
        type: String
    }),
    __metadata("design:type", String)
], MgtSearchBox.prototype, "placeholder", void 0);
__decorate([
    property({
        attribute: 'search-term',
        type: String
    }),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], MgtSearchBox.prototype, "searchTerm", null);
__decorate([
    property({
        attribute: 'debounce-delay',
        type: Number,
        reflect: true
    }),
    __metadata("design:type", Number)
], MgtSearchBox.prototype, "debounceDelay", void 0);
MgtSearchBox = __decorate([
    customElement('search-box'),
    __metadata("design:paramtypes", [])
], MgtSearchBox);
export { MgtSearchBox };
//# sourceMappingURL=mgt-search-box.js.map