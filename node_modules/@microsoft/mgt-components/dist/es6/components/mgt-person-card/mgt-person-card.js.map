{"version":3,"file":"mgt-person-card.js","sourceRoot":"src/","sources":["components/mgt-person-card/mgt-person-card.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport {\n  MgtTemplatedComponent,\n  Providers,\n  ProviderState,\n  TeamsHelper,\n  mgtHtml,\n  customElement,\n  customElementHelper\n} from '@microsoft/mgt-element';\nimport { IGraph } from '@microsoft/mgt-element';\nimport { Presence, User, Person } from '@microsoft/microsoft-graph-types';\n\nimport { findPeople, getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { IDynamicPerson, ViewType } from '../../graph/types';\nimport { getPersonImage } from '../../graph/graph.photos';\nimport { getUserWithPhoto } from '../../graph/graph.userWithPhoto';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { getUserPresence } from '../../graph/graph.presence';\nimport { getPersonCardGraphData, createChat, sendMessage } from './mgt-person-card.graph';\nimport { MgtPerson } from '../mgt-person/mgt-person';\nimport { styles } from './mgt-person-card-css';\nimport { MgtContact } from '../mgt-contact/mgt-contact';\nimport { MgtFileList } from '../mgt-file-list/mgt-file-list';\nimport { MgtMessages } from '../mgt-messages/mgt-messages';\nimport { MgtOrganization } from '../mgt-organization/mgt-organization';\nimport { MgtProfile } from '../mgt-profile/mgt-profile';\nimport { MgtPersonCardConfig, MgtPersonCardState } from './mgt-person-card.types';\nimport { strings } from './strings';\nimport { isUser } from '../../graph/entityType';\n\nimport '../sub-components/mgt-spinner/mgt-spinner';\n\nexport * from './mgt-person-card.types';\n\nimport {\n  fluentTabs,\n  fluentTab,\n  fluentTabPanel,\n  fluentButton,\n  fluentTextField,\n  fluentCard\n} from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { BasePersonCardSection, CardSection } from '../BasePersonCardSection';\n\nregisterFluentComponents(fluentCard, fluentTabs, fluentTab, fluentTabPanel, fluentButton, fluentTextField);\n\ninterface MgtPersonCardStateHistory {\n  state: MgtPersonCardState;\n  personDetails: IDynamicPerson;\n  personImage: string;\n}\n\n/**\n * Web Component used to show detailed data for a person in the Microsoft Graph\n *\n * @export\n * @class MgtPersonCard\n * @extends {MgtTemplatedComponent}\n *\n * @fires {CustomEvent<null>} expanded - Fired when expanded details section is opened\n *\n * @cssprop --person-card-line1-font-size - {Length} Font size of line 1\n * @cssprop --person-card-line1-font-weight - {FontWeight} Font weight of line 1\n * @cssprop --person-card-line1-line-height - {Length} Line height of line 1\n * @cssprop --person-card-line2-font-size - {Length} Font size of line 2\n * @cssprop --person-card-line2-font-weight - {FontWeight} Font weight of line 2\n * @cssprop --person-card-line2-line-height - {Length} Line height of line 2\n * @cssprop --person-card-line3-font-size - {Length} Font size of line 3\n * @cssprop --person-card-line3-font-weight - {FontWeight} Font weight of line 3\n * @cssprop --person-card-line3-line-height - {Length} Line height of line 3\n * @cssprop --person-card-avatar-size - {Length} Width and height of the avatar. Default is 75px\n * @cssprop --person-card-details-left-spacing - {Length} The space between the avatar and the person details. Default is 15px\n * @cssprop --person-card-avatar-top-spacing - {Length} The margin top of the avatar in person-card component\n * @cssprop --person-card-details-bottom-spacing - {Length} The margin bottom of the person details in person-card component\n * @cssprop --person-card-base-icons-left-spacing - {Length} The margin-inline-start of the base-icons in person-card component\n * @cssprop --person-card-background-color - {Color} The color of the person-card-component\n * @cssprop --person-card-expanded-background-color-hover - {Color} The hover color of the expanded details button of the person card component\n * @cssprop --person-card-nav-back-arrow-hover-color - {Color} The hover color of the back arrow of the person card component\n * @cssprop --person-card-icon-color - {Color} The color of the icons in the person card component\n * @cssprop --person-card-icon-hover-color - {Color} The hover color of the icons in the person card component\n * @cssprop --person-card-show-more-color - {Color} The color of the show more text in the person card component\n * @cssprop --person-card-show-more-hover-color - {Color} The hover color of the show more text in person card component\n * @cssprop --person-card-fluent-background-color - {Color} The background color of the fluent buttons in person card component\n * @cssprop --person-card-line1-text-color - {Color} The color of line 1 in person card\n * @cssprop --person-card-line2-text-color - {Color} The color of line 2 in person card\n * @cssprop --person-card-line3-text-color - {Color} The color of line 3 in person card\n * @cssprop --person-card-fluent-background-color-hover - {Color} The hover background color of the fluent buttons in person card component\n * @cssprop --person-card-chat-input-hover-color - {Color} The chat input hover color\n * @cssprop --person-card-chat-input-focus-color - {Color} The chat input focus color\n */\n@customElement('person-card')\nexport class MgtPersonCard extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * Strings to use for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Get the scopes required for the person card\n   * The scopes depend on what sections are shown\n   *\n   * Use the `MgtPersonCard.config` object to configure\n   * what sections are shown\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPersonCard\n   */\n  public static get requiredScopes(): string[] {\n    return MgtPersonCard.getScopes();\n  }\n\n  /**\n   * Scopes used to fetch data for the component\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPersonCard\n   */\n  public static getScopes(): string[] {\n    const scopes: string[] = [];\n\n    if (this.config.sections.files) {\n      scopes.push('Sites.Read.All');\n    }\n\n    if (this.config.sections.mailMessages) {\n      scopes.push('Mail.Read');\n      scopes.push('Mail.ReadBasic');\n    }\n\n    if (this.config.sections.organization) {\n      scopes.push('User.Read.All');\n\n      if (typeof this.config.sections.organization !== 'boolean' && this.config.sections.organization.showWorksWith) {\n        scopes.push('People.Read.All');\n      }\n    }\n\n    if (this.config.sections.profile) {\n      scopes.push('User.Read.All');\n    }\n\n    if (this.config.useContactApis) {\n      scopes.push('Contacts.Read');\n    }\n\n    if (scopes.indexOf('User.Read.All') < 0) {\n      // at minimum, we need these scopes\n      scopes.push('User.ReadBasic.All');\n      scopes.push('User.Read');\n    }\n\n    if (scopes.indexOf('People.Read.All') < 0) {\n      // at minimum, we need these scopes\n      scopes.push('People.Read');\n    }\n\n    scopes.push('Chat.Create', 'Chat.ReadWrite');\n\n    // return unique\n    return [...new Set(scopes)];\n  }\n\n  /**\n   * Global configuration object for\n   * all person card components\n   *\n   * @static\n   * @type {MgtPersonCardConfig}\n   * @memberof MgtPersonCard\n   */\n  public static get config() {\n    return this._config;\n  }\n\n  private static readonly _config: MgtPersonCardConfig = {\n    sections: {\n      files: true,\n      mailMessages: true,\n      organization: { showWorksWith: true },\n      profile: true\n    },\n    useContactApis: true,\n    isSendMessageVisible: true\n  };\n\n  /**\n   * Set the person details to render\n   *\n   * @type {IDynamicPerson}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'person-details',\n    type: Object\n  })\n  public get personDetails(): IDynamicPerson {\n    return this._personDetails;\n  }\n  public set personDetails(value: IDynamicPerson) {\n    if (this._personDetails === value) {\n      return;\n    }\n\n    this._personDetails = value;\n    this.personImage = this.getImage();\n    void this.requestStateUpdate();\n  }\n  /**\n   * allows developer to define name of person for component\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'person-query'\n  })\n  public personQuery: string;\n\n  /**\n   * allows the locking of navigation using tabs to not flow out of the card section\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'lock-tab-navigation',\n    type: Boolean\n  })\n  public lockTabNavigation: boolean;\n\n  /**\n   * user-id property allows developer to use id value for component\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'user-id'\n  })\n  public get userId(): string {\n    return this._userId;\n  }\n  public set userId(value: string) {\n    if (value === this._userId) {\n      return;\n    }\n    this._userId = value;\n    this.personDetails = null;\n    this._cardState = null;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Set the image of the person\n   * Set to '@' to look up image from the graph\n   *\n   * @type {string}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'person-image',\n    type: String\n  })\n  public personImage: string;\n\n  /**\n   * Sets whether the person image should be fetched\n   * from the Microsoft Graph based on the personDetails\n   * provided by the user\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'fetch-image',\n    type: Boolean\n  })\n  public fetchImage: boolean;\n\n  /**\n   * Gets or sets whether expanded details section is rendered\n   *\n   * @type {boolean}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'is-expanded',\n    type: Boolean\n  })\n  public isExpanded: boolean;\n\n  /**\n   * Gets or sets whether person details should be inherited from an mgt-person parent\n   * Useful when used as template in an mgt-person component\n   *\n   * @type {boolean}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'inherit-details',\n    type: Boolean\n  })\n  public inheritDetails: boolean;\n\n  /**\n   * determines if person card component renders presence\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence: boolean;\n\n  /**\n   * Gets or sets presence of person\n   *\n   * @type {MicrosoftGraph.Presence}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'person-presence',\n    type: Object\n  })\n  public personPresence: Presence;\n\n  @state()\n  private isSending = false;\n\n  /**\n   * The subsections for display in the lower part of the card\n   *\n   * @protected\n   * @type {any[]}\n   * @memberof MgtPersonCard\n   */\n  protected sections: CardSection[];\n\n  @state() private _cardState: MgtPersonCardState;\n  @state() private _isStateLoading: boolean;\n\n  private _history: MgtPersonCardStateHistory[];\n  private _chatInput: string;\n  private _currentSection: CardSection;\n  private _personDetails: IDynamicPerson;\n  private _me: User;\n  private _smallView: boolean;\n  private _windowHeight;\n\n  private _userId: string;\n  private _graph: IGraph;\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private get internalPersonDetails(): IDynamicPerson {\n    return this._cardState?.person || this.personDetails;\n  }\n\n  constructor() {\n    super();\n    this._chatInput = '';\n    this._currentSection = null;\n    this._history = [];\n    this.sections = [];\n    this._graph = null;\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * @param {*} name\n   * @param {*} oldValue\n   * @param {*} newValue\n   * @memberof MgtPersonCard\n   */\n  public attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n\n    if (oldValue === newValue) {\n      return;\n    }\n\n    switch (name) {\n      case 'person-query':\n        this.personDetails = null;\n        this._cardState = null;\n        void this.requestStateUpdate();\n        break;\n    }\n  }\n\n  /**\n   * Navigate the card to a different person.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  public navigate(person: IDynamicPerson): void {\n    this._history.push({\n      personDetails: this.personDetails,\n      personImage: this.getImage(),\n      state: this._cardState\n    });\n\n    this._personDetails = person;\n    this._cardState = null;\n    this.personImage = null;\n    this._currentSection = null;\n    this.sections = [];\n    this._chatInput = '';\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Navigate the card back to the previous person\n   *\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  public goBack = (): void => {\n    if (!this._history?.length) {\n      return;\n    }\n\n    const historyState = this._history.pop();\n    this._currentSection = null;\n\n    // resets to first tab being selected\n    const firstTab: HTMLElement = this.renderRoot.querySelector('fluent-tab');\n    if (firstTab) {\n      firstTab.click();\n    }\n    this._cardState = historyState.state;\n    this._personDetails = historyState.state.person;\n    this.personImage = historyState.personImage;\n    this.loadSections();\n  };\n\n  /**\n   * Navigate the card back to first person and clear history\n   *\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  public clearHistory(): void {\n    this._currentSection = null;\n\n    if (!this._history?.length) {\n      return;\n    }\n\n    const historyState = this._history[0];\n    this._history = [];\n\n    this._cardState = historyState.state;\n    this._personDetails = historyState.personDetails;\n    this.personImage = historyState.personImage;\n    this.loadSections();\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    // Handle no data\n    if (!this.internalPersonDetails) {\n      return this.renderNoData();\n    }\n\n    const person = this.internalPersonDetails;\n    const image = this.getImage();\n\n    // Check for a default template.\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/dot-notation\n    if (this.hasTemplate('default')) {\n      return this.renderTemplate('default', {\n        person: this.internalPersonDetails,\n        personImage: image\n      });\n    }\n\n    let ariaLabel: string;\n\n    ariaLabel = this.strings.closeCardLabel;\n\n    const closeCardTemplate = this.isExpanded\n      ? html`\n           <div class=\"close-card-container\">\n             <fluent-button \n              appearance=\"lightweight\" \n              class=\"close-button\" \n              aria-label=${ariaLabel}\n              @click=${this.closeCard} >\n               ${getSvg(SvgIcon.Close)}\n             </fluent-button>\n           </div>\n         `\n      : null;\n\n    ariaLabel = this.strings.goBackLabel;\n    const navigationTemplate = this._history?.length\n      ? html`\n            <div class=\"nav\">\n              <fluent-button \n                appearance=\"lightweight\"\n                class=\"nav__back\" \n                aria-label=${ariaLabel} \n                @keydown=${this.handleGoBack}\n                @click=${this.goBack}>${getSvg(SvgIcon.Back)}\n               </fluent-button>\n            </div>\n          `\n      : null;\n\n    // Check for a person-details template\n    let personDetailsTemplate = this.renderTemplate('person-details', {\n      person: this.internalPersonDetails,\n      personImage: image\n    });\n    if (!personDetailsTemplate) {\n      const personTemplate = this.renderPerson();\n      const contactIconsTemplate = this.renderContactIcons(person);\n\n      personDetailsTemplate = html`\n         ${personTemplate} ${contactIconsTemplate}\n       `;\n    }\n\n    const expandedDetailsTemplate = this.isExpanded ? this.renderExpandedDetails() : this.renderExpandedDetailsButton();\n    this._windowHeight =\n      window.innerHeight && document.documentElement.clientHeight\n        ? Math.min(window.innerHeight, document.documentElement.clientHeight)\n        : window.innerHeight || document.documentElement.clientHeight;\n\n    if (this._windowHeight < 250) {\n      this._smallView = true;\n    }\n    const tabLocker = this.lockTabNavigation\n      ? html`<div @keydown=${this.handleEndOfCard} aria-label=${this.strings.endOfCard} tabindex=\"0\" id=\"end-of-container\"></div>`\n      : html``;\n    return html`\n      <div class=\"root\" dir=${this.direction}>\n        <div class=${classMap({ small: this._smallView })}>\n          ${navigationTemplate}\n          ${closeCardTemplate}\n          <div class=\"person-details-container\">${personDetailsTemplate}</div>\n          <div class=\"expanded-details-container\">${expandedDetailsTemplate}</div>\n          ${tabLocker}\n        </div>\n      </div>\n     `;\n  }\n\n  private readonly handleEndOfCard = (e: KeyboardEvent) => {\n    if (e && e.code === 'Tab') {\n      const endOfCardEl = this.renderRoot.querySelector<HTMLElement>('#end-of-container');\n      if (endOfCardEl) {\n        endOfCardEl.blur();\n        const imageCardEl = this.renderRoot.querySelector<HTMLElement>('mgt-person');\n        if (imageCardEl) {\n          imageCardEl.focus();\n        }\n      }\n    }\n  };\n\n  /**\n   * Render the state when no data is available.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected closeCard = () => {\n    // reset tabs\n    this.updateCurrentSection(null);\n    this.isExpanded = false;\n  };\n\n  /**\n   * Render the state when no data is available.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * Render a display image for the person.\n   *\n   * @protected\n   * @param {*} image\n   * @memberof MgtPersonCard\n   */\n  protected renderPerson(): TemplateResult {\n    return mgtHtml`\n      <mgt-person\n        tabindex=\"0\"\n        class=\"person-image\"\n        .personDetails=${this.internalPersonDetails}\n        .personImage=${this.getImage()}\n        .personPresence=${this.personPresence}\n        .showPresence=${this.showPresence}\n        .view=${ViewType.threelines}\n      ></mgt-person>\n    `;\n  }\n\n  /**\n   * Render person subtitle.\n   *\n   * @protected\n   * @param {IDynamicPerson} person\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderPersonSubtitle(person?: IDynamicPerson): TemplateResult {\n    person = person || this.internalPersonDetails;\n    if (!isUser(person) || !person.department) {\n      return;\n    }\n    return html`\n       <div class=\"department\">${person.department}</div>\n     `;\n  }\n\n  /**\n   * Render the various icons for contacting the person.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderContactIcons(person?: IDynamicPerson): TemplateResult {\n    person = person || this.internalPersonDetails;\n    const userPerson = person as User;\n\n    let ariaLabel: string;\n\n    // Email\n    let email: TemplateResult;\n    if (getEmailFromGraphEntity(person)) {\n      ariaLabel = `${this.strings.emailButtonLabel} ${person.displayName}`;\n      email = html`\n        <fluent-button class=\"icon\"\n          aria-label=${ariaLabel}\n          @click=${this.emailUser}>\n          ${getSvg(SvgIcon.SmallEmail)}\n        </fluent-button>\n      `;\n    }\n\n    // Chat\n    let chat: TemplateResult;\n    if (userPerson?.userPrincipalName) {\n      ariaLabel = `${this.strings.chatButtonLabel} ${person.displayName}`;\n      chat = html`\n        <fluent-button class=\"icon\"\n          aria-label=${ariaLabel}\n          @click=${this.chatUser}>\n          ${getSvg(SvgIcon.SmallChat)}\n        </fluent-button>\n       `;\n    }\n\n    // Video\n\n    ariaLabel = `${this.strings.videoButtonLabel} ${person.displayName}`;\n    const video: TemplateResult = html`\n      <fluent-button class=\"icon\"\n        aria-label=${ariaLabel}\n        @click=${this.videoCallUser}>\n        ${getSvg(SvgIcon.Video)}\n      </fluent-button>\n    `;\n\n    // Call\n    let call: TemplateResult;\n    if (userPerson.userPrincipalName) {\n      ariaLabel = `${this.strings.callButtonLabel} ${person.displayName}`;\n      call = html`\n         <fluent-button class=\"icon\"\n          aria-label=${ariaLabel}\n          @click=${this.callUser}>\n          ${getSvg(SvgIcon.Call)}\n        </fluent-button>\n       `;\n    }\n\n    return html`\n       <div class=\"base-icons\">\n         ${email} ${chat} ${video} ${call}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the button used to expand the expanded details.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderExpandedDetailsButton(): TemplateResult {\n    return html`\n      <fluent-button\n        aria-label=${this.strings.expandDetailsLabel}\n        class=\"expanded-details-button\"\n        @click=${this.showExpandedDetails}\n      >\n        ${getSvg(SvgIcon.ExpandDown)}\n      </fluent-button>\n     `;\n  }\n\n  /**\n   * Render expanded details.\n   *\n   * @protected\n   * @param {IDynamicPerson} [person]\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderExpandedDetails(): TemplateResult {\n    if (!this._cardState && this._isStateLoading) {\n      return mgtHtml`\n         <div class=\"loading\">\n           <mgt-spinner></mgt-spinner>\n         </div>\n       `;\n    }\n    // load sections when details are expanded\n    // when not singed in\n    const provider = Providers.globalProvider;\n    if (provider.state === ProviderState.SignedOut) {\n      this.loadSections();\n    }\n\n    const sectionNavTemplate = this.renderSectionNavigation();\n\n    return html`\n      <div class=\"section-nav\">\n        ${sectionNavTemplate}\n      </div>\n      <hr class=\"divider\"/>\n      <div\n        class=\"section-host ${this._smallView ? 'small' : ''} ${this._smallView ? 'small' : ''}\"\n        @wheel=${(e: WheelEvent) => this.handleSectionScroll(e)}\n        tabindex=0\n      ></div>\n    `;\n  }\n\n  /**\n   * Render the navigation ribbon for subsections\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderSectionNavigation(): TemplateResult {\n    if (!this.sections || (this.sections.length < 2 && !this.hasTemplate('additional-details'))) {\n      return;\n    }\n\n    const currentSectionIndex = this._currentSection ? this.sections.indexOf(this._currentSection) : -1;\n\n    const additionalSectionTemplates = this.sections.map((section, i) => {\n      const name = section.tagName.toLowerCase();\n      const classes = classMap({\n        active: i === currentSectionIndex,\n        'section-nav__icon': true\n      });\n\n      return html`\n        <fluent-tab\n          id=\"${name}-Tab\"\n          class=${classes}\n          slot=\"tab\"\n          @keyup=\"${() => this.updateCurrentSection(section)}\"\n          @click=${() => this.updateCurrentSection(section)}\n        >\n          ${section.renderIcon()}\n        </fluent-tab>\n      `;\n    });\n\n    const additionalPanelTemplates = this.sections.map(section => {\n      return html`\n        <fluent-tab-panel slot=\"tabpanel\">\n          <div class=\"inserted\">\n            <div class=\"title\">${section.cardTitle}</div>\n            ${this._currentSection ? section.asFullView() : null}\n          </div>\n        </fluent-tab-panel>\n      `;\n    });\n\n    const overviewClasses = classMap({\n      active: currentSectionIndex === -1,\n      'section-nav__icon': true,\n      overviewTab: true\n    });\n\n    return html`\n      <fluent-tabs\n        orientation=\"horizontal\"\n        activeindicator\n        @wheel=${(e: WheelEvent) => this.handleSectionScroll(e)}\n      >\n        <fluent-tab\n          class=\"${overviewClasses}\"\n          slot=\"tab\"\n          @keyup=\"${() => this.updateCurrentSection(null)}\"\n          @click=${() => this.updateCurrentSection(null)}\n        >\n          <div>${getSvg(SvgIcon.Overview)}</div>\n        </fluent-tab>\n        ${additionalSectionTemplates}\n        <fluent-tab-panel slot=\"tabpanel\" >\n          <div class=\"overview-panel\">${!this._currentSection ? this.renderOverviewSection() : null}</div>\n        </fluent-tab-panel>\n        ${additionalPanelTemplates}\n      </fluent-tabs>\n    `;\n  }\n\n  /**\n   * Render the default section with compact views for each subsection.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderOverviewSection(): TemplateResult {\n    const compactTemplates = this.sections.map(\n      (section: BasePersonCardSection) => html`\n        <div class=\"section\">\n          <div class=\"section__header\">\n            <div class=\"section__title\" tabindex=0>${section.displayName}</div>\n              <fluent-button\n                appearance=\"lightweight\"\n                class=\"section__show-more\"\n                @click=${() => this.updateCurrentSection(section)}\n              >\n                ${this.strings.showMoreSectionButton}\n              </fluent-button>\n          </div>\n          <div class=\"section__content\">${section.asCompactView()}</div>\n        </div>\n      `\n    );\n\n    const additionalDetails = this.renderTemplate('additional-details', {\n      person: this.internalPersonDetails,\n      personImage: this.getImage(),\n      state: this._cardState\n    });\n    if (additionalDetails) {\n      compactTemplates.splice(\n        1,\n        0,\n        html`\n           <div class=\"section\">\n             <div class=\"additional-details\">${additionalDetails}</div>\n           </div>\n         `\n      );\n    }\n\n    return html`\n       <div class=\"sections\">\n          ${this.renderMessagingSection()}\n          ${compactTemplates}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the actively selected section.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderCurrentSection(): TemplateResult {\n    if (!this.sections?.length && !this.hasTemplate('additional-details')) {\n      return;\n    }\n\n    if (this.sections.length === 1 && !this.hasTemplate('additional-details')) {\n      return html`\n         ${this.sections[0].asFullView()}\n       `;\n    }\n\n    if (!this._currentSection) {\n      return this.renderOverviewSection();\n    }\n\n    return html`\n       ${this._currentSection.asFullView()}\n     `;\n  }\n\n  /**\n   * Render the messaging section.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderMessagingSection(): TemplateResult {\n    const person = this.personDetails as User;\n    const user = this._me.userPrincipalName;\n    const chatInput = this._chatInput;\n    if (person?.userPrincipalName === user) {\n      return;\n    } else {\n      return html`\n      <div class=\"message-section\">\n        <fluent-text-field\n          autocomplete=\"off\"\n          appearance=\"outline\"\n          placeholder=\"${this.strings.quickMessage}\"\n          .value=${chatInput}\n          @input=${(e: Event) => {\n            this._chatInput = (e.target as HTMLInputElement).value;\n            this.requestUpdate();\n          }}\n          @keydown=\"${(e: KeyboardEvent) => this.sendQuickMessageOnEnter(e)}\">\n        </fluent-text-field>\n        <fluent-button class=\"send-message-icon\"\n          aria-label=${this.strings.sendMessageLabel}\n          @click=${this.sendQuickMessage}\n          ?disabled=${this.isSending}>\n          ${!this.isSending ? getSvg(SvgIcon.Send) : getSvg(SvgIcon.Confirmation)}\n        </fluent-button>\n      </div>\n      `;\n    }\n  }\n\n  /**\n   * load state into the component\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPersonCard\n   */\n  protected async loadState() {\n    if (this._cardState) {\n      return;\n    }\n\n    if (!this.personDetails && this.inheritDetails) {\n      // User person details inherited from parent tree\n      let parent = this.parentElement;\n      while (parent && parent.tagName !== `${customElementHelper.prefix}-PERSON`.toUpperCase()) {\n        parent = parent.parentElement;\n      }\n\n      const parentPerson: IDynamicPerson =\n        // eslint-disable-next-line @typescript-eslint/dot-notation\n        (parent as MgtPerson).personDetails || (parent as MgtPerson)['personDetailsInternal'];\n\n      if (parent && parentPerson) {\n        this.personDetails = parentPerson;\n        this.personImage = (parent as MgtPerson).personImage;\n      }\n    }\n\n    const provider = Providers.globalProvider;\n\n    // check if user is signed in\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return;\n    }\n\n    const graph = provider.graph.forComponent(this);\n    this._graph = graph;\n\n    this._isStateLoading = true;\n\n    if (!this._me) {\n      this._me = await Providers.me();\n    }\n\n    // check if personDetail already populated\n    if (this.personDetails) {\n      const user = this.personDetails;\n      let id: string;\n      if (isUser(user)) {\n        id = user.userPrincipalName || user.id;\n      }\n\n      // if we have an id but no email, we should get data from the graph\n      // in some graph calls, the user object does not contain the email\n      if (id && !getEmailFromGraphEntity(user)) {\n        const person = await getUserWithPhoto(graph, id);\n        this.personDetails = person;\n        this.personImage = this.getImage();\n      }\n    } else if (this.userId || this.personQuery === 'me') {\n      // Use userId or 'me' query to get the person and image\n      const person = await getUserWithPhoto(graph, this.userId);\n      this.personDetails = person;\n      this.personImage = this.getImage();\n    } else if (this.personQuery) {\n      // Use the personQuery to find our person.\n      const people = await findPeople(graph, this.personQuery, 1);\n\n      if (people?.length) {\n        this.personDetails = people[0];\n        await getPersonImage(graph, this.personDetails, MgtPersonCard.config.useContactApis).then(image => {\n          if (image) {\n            this.personDetails.personImage = image;\n            this.personImage = image;\n          }\n        });\n      }\n    }\n\n    // populate presence\n    const defaultPresence = {\n      activity: 'Offline',\n      availability: 'Offline',\n      id: null\n    };\n    if (!this.personPresence && this.showPresence) {\n      try {\n        if (this.personDetails?.id) {\n          this.personPresence = await getUserPresence(graph, this.personDetails.id);\n        } else {\n          this.personPresence = defaultPresence;\n        }\n      } catch (_) {\n        // set up a default Presence in case beta api changes or getting error code\n        this.personPresence = defaultPresence;\n      }\n    }\n\n    // populate state\n    if (this.personDetails?.id) {\n      this._cardState = await getPersonCardGraphData(\n        graph,\n        this.personDetails,\n        this._me === this.personDetails.id,\n        MgtPersonCard.config\n      );\n    }\n\n    this.loadSections();\n\n    this._isStateLoading = false;\n  }\n\n  /**\n   * Send a chat message to the user from the quick message input.\n   *\n   * @protected\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  protected sendQuickMessage = async (): Promise<void> => {\n    const message = this._chatInput.trim();\n    if (!message?.length) {\n      return;\n    }\n    const person = this.personDetails as User;\n    const user = this._me.userPrincipalName;\n    this.isSending = true;\n\n    const chat = await createChat(this._graph, person.userPrincipalName, user);\n\n    const messageData = {\n      body: {\n        content: message\n      }\n    };\n    await sendMessage(this._graph, chat.id, messageData);\n    this.isSending = false;\n    this.clearInputData();\n  };\n\n  /**\n   * Use the mailto: protocol to initiate a new email to the user.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected emailUser = () => {\n    const user = this.internalPersonDetails;\n    if (user) {\n      const email = getEmailFromGraphEntity(user);\n      if (email) {\n        window.open('mailto:' + email, '_blank', 'noreferrer');\n      }\n    }\n  };\n\n  private get hasPhone(): boolean {\n    const user = this.personDetails as User;\n    const person = this.personDetails as microsoftgraph.Person;\n    return Boolean(user?.businessPhones?.length) || Boolean(person?.phones?.length);\n  }\n\n  /**\n   * Use the tel: protocol to initiate a new call to the user.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected callUser = () => {\n    const user = this.personDetails as User;\n    const person = this.personDetails as microsoftgraph.Person;\n\n    if (user?.businessPhones?.length) {\n      const phone = user.businessPhones[0];\n      if (phone) {\n        window.open('tel:' + phone, '_blank', 'noreferrer');\n      }\n    } else if (person?.phones?.length) {\n      const businessPhones = this.getPersonBusinessPhones(person);\n      const phone = businessPhones[0];\n      if (phone) {\n        window.open('tel:' + phone, '_blank', 'noreferrer');\n      }\n    }\n  };\n\n  /**\n   * Initiate a chat message to the user via deeplink.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected chatUser = (message: string = null) => {\n    const user = this.personDetails as User;\n    if (user?.userPrincipalName) {\n      const users: string = user.userPrincipalName;\n\n      let url = `https://teams.microsoft.com/l/chat/0/0?users=${users}`;\n      if (message?.length) {\n        url += `&message=${message}`;\n      }\n\n      const openWindow = () => window.open(url, '_blank', 'noreferrer');\n\n      if (TeamsHelper.isAvailable) {\n        TeamsHelper.executeDeepLink(url, (status: boolean) => {\n          if (!status) {\n            openWindow();\n          }\n        });\n      } else {\n        openWindow();\n      }\n    }\n  };\n\n  /**\n   * Initiate a teams call with video with a user via deeplink.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected videoCallUser = () => {\n    const user = this.personDetails as User;\n    if (user?.userPrincipalName) {\n      const users: string = user.userPrincipalName;\n\n      const url = `https://teams.microsoft.com/l/call/0/0?users=${users}&withVideo=true`;\n\n      const openWindow = () => window.open(url, '_blank');\n\n      if (TeamsHelper.isAvailable) {\n        TeamsHelper.executeDeepLink(url, (status: boolean) => {\n          if (!status) {\n            openWindow();\n          }\n        });\n      } else {\n        openWindow();\n      }\n    }\n  };\n\n  /**\n   * Display the expanded details panel.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected showExpandedDetails = () => {\n    const root = this.renderRoot.querySelector('.root');\n    if (root?.animate) {\n      // play back\n      root.animate(\n        [\n          {\n            height: 'auto',\n            transformOrigin: 'top left'\n          },\n          {\n            height: 'auto',\n            transformOrigin: 'top left'\n          }\n        ],\n        {\n          duration: 1000,\n          easing: 'ease-in-out',\n          fill: 'both'\n        }\n      );\n    }\n    this.isExpanded = true;\n\n    this.fireCustomEvent('expanded', null, true);\n  };\n\n  private loadSections() {\n    this.sections = [];\n\n    if (!this.internalPersonDetails) {\n      return;\n    }\n\n    const contactSections = new MgtContact(this.internalPersonDetails as User);\n    if (contactSections.hasData) {\n      this.sections.push(contactSections);\n    }\n\n    if (!this._cardState) {\n      return;\n    }\n\n    const { person, directReports, messages, files, profile } = this._cardState;\n\n    if (MgtPersonCard.config.sections.organization && (person?.manager || directReports?.length)) {\n      this.sections.push(new MgtOrganization(this._cardState, this._me));\n    }\n\n    if (MgtPersonCard.config.sections.mailMessages && messages?.length) {\n      this.sections.push(new MgtMessages(messages));\n    }\n\n    if (MgtPersonCard.config.sections.files && files?.length) {\n      this.sections.push(new MgtFileList());\n    }\n\n    if (MgtPersonCard.config.sections.profile && profile) {\n      const profileSection = new MgtProfile(profile);\n      if (profileSection.hasData) {\n        this.sections.push(profileSection);\n      }\n    }\n  }\n\n  private getImage(): string {\n    if (this.personImage) {\n      return this.personImage;\n    }\n\n    const person = this.personDetails;\n    return person?.personImage ? person.personImage : null;\n  }\n\n  private clearInputData() {\n    this._chatInput = '';\n    this.requestUpdate();\n  }\n\n  private getPersonBusinessPhones(person: Person): string[] {\n    const phones = person.phones;\n    const businessPhones: string[] = [];\n    for (const p of phones) {\n      if (p.type === 'business') {\n        businessPhones.push(p.number);\n      }\n    }\n    return businessPhones;\n  }\n\n  private updateCurrentSection(section: CardSection) {\n    if (section) {\n      const sectionName = section.tagName.toLowerCase();\n      const tabs: HTMLElement = this.renderRoot.querySelector(`#${sectionName}-Tab`);\n      tabs.click();\n    }\n    const panels = this.renderRoot.querySelectorAll('fluent-tab-panel');\n    for (const target of panels) {\n      target.scrollTop = 0;\n    }\n    this._currentSection = section;\n    this.requestUpdate();\n  }\n\n  private handleSectionScroll(e: WheelEvent) {\n    const panels = this.renderRoot.querySelectorAll('fluent-tab-panel');\n    for (const target of panels) {\n      if (target) {\n        if (\n          !(e.deltaY < 0 && target.scrollTop === 0) &&\n          !(e.deltaY > 0 && target.clientHeight + target.scrollTop >= target.scrollHeight - 1)\n        ) {\n          e.stopPropagation();\n        }\n      }\n    }\n  }\n\n  private readonly sendQuickMessageOnEnter = (e: KeyboardEvent) => {\n    if (e.code === 'Enter') {\n      void this.sendQuickMessage();\n    }\n  };\n\n  private readonly handleGoBack = (e: KeyboardEvent) => {\n    if (e.code === 'Enter') {\n      void this.goBack();\n    }\n  };\n}\n"]}