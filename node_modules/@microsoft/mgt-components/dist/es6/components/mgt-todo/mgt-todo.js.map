{"version":3,"file":"mgt-todo.js","sourceRoot":"src/","sources":["components/mgt-todo/mgt-todo.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, nothing, TemplateResult } from 'lit';\nimport { state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { IGraph, customElement, mgtHtml } from '@microsoft/mgt-element';\nimport { Providers, ProviderState } from '@microsoft/mgt-element';\nimport { getDateString } from '../../utils/Utils';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport '../mgt-person/mgt-person';\nimport { MgtTasksBase } from '../mgt-tasks-base/mgt-tasks-base';\nimport '../sub-components/mgt-arrow-options/mgt-arrow-options';\nimport '../sub-components/mgt-dot-options/mgt-dot-options';\nimport {\n  createTodoTask,\n  deleteTodoTask,\n  getTodoTaskList,\n  getTodoTaskLists,\n  getTodoTasks,\n  updateTodoTask\n} from './graph.todo';\nimport { styles } from './mgt-todo-css';\nimport { strings } from './strings';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { fluentCheckbox, fluentRadioGroup, fluentButton } from '@fluentui/web-components';\nimport { isElementDark } from '../../utils/isDark';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\nimport { TodoTaskList, TodoTask, TaskStatus } from '@microsoft/microsoft-graph-types';\n\nregisterFluentComponents(fluentCheckbox, fluentRadioGroup, fluentButton);\n\n/**\n * Filter function\n */\nexport type TodoFilter = (task: TodoTask) => boolean;\n\n/**\n * component enables the user to view, add, remove, complete, or edit todo tasks. It works with tasks in Microsoft Planner or Microsoft To-Do.\n *\n * @export\n * @class MgtTodo\n * @extends {MgtTasksBase}\n *\n * @cssprop --task-color - {Color} - Task text color\n * @cssprop --task-background-color - {Color} - Task background color\n * @cssprop --task-complete-background - {Color} - Task background color when completed\n * @cssprop --task-date-input-active-color - {Color} - Task date input active color\n * @cssprop --task-date-input-hover-color - {Color} - Task date input hover color\n * @cssprop --task-background-color-hover - {Color} - Task background when hovered\n * @cssprop --task-box-shadow - {Color} - Task box shadow color\n * @cssprop --task-border-completed - {Color} - Task border color when completed\n * @cssprop --task-radio-background-color - {Color} - Task radio background color\n */\n@customElement('todo')\nexport class MgtTodo extends MgtTasksBase {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  public static get styles() {\n    return styles;\n  }\n  /**\n   * Strings for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtTodo\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Optional filter function when rendering tasks\n   *\n   * @type {TodoFilter}\n   * @memberof MgtTodo\n   */\n  public taskFilter: TodoFilter;\n\n  /**\n   * Get the scopes required for todo\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtTodo\n   */\n  public static get requiredScopes(): string[] {\n    return ['tasks.read', 'tasks.readwrite'];\n  }\n  private _tasks: TodoTask[];\n\n  private _isLoadingTasks: boolean;\n  private _loadingTasks: string[];\n  private _newTaskDueDate: Date;\n  @state() private _newTaskName: string;\n  private _isNewTaskBeingAdded: boolean;\n  private _graph: IGraph;\n  @state() private currentList: TodoTaskList;\n  @state() private _isDarkMode = false;\n\n  constructor() {\n    super();\n    this._graph = null;\n    this._newTaskDueDate = null;\n    this._tasks = [];\n    this._loadingTasks = [];\n    this._isLoadingTasks = false;\n    this.addEventListener('selectionChanged', this.handleSelectionChanged);\n  }\n\n  /**\n   * updates provider state\n   *\n   * @memberof MgtTasks\n   */\n  public connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('darkmodechanged', this.onThemeChanged);\n    // invoked to ensure we have the correct initial value for _isDarkMode\n    this.onThemeChanged();\n  }\n\n  /**\n   * removes updates on provider state\n   *\n   * @memberof MgtTasks\n   */\n  public disconnectedCallback() {\n    window.removeEventListener('darkmodechanged', this.onThemeChanged);\n    super.disconnectedCallback();\n  }\n\n  private readonly onThemeChanged = () => {\n    this._isDarkMode = isElementDark(this);\n  };\n\n  /**\n   * Render the list of todo tasks\n   */\n  protected renderTasks(): TemplateResult {\n    if (this._isLoadingTasks) {\n      return this.renderLoadingTask();\n    }\n\n    let tasks = this._tasks;\n    if (tasks && this.taskFilter) {\n      tasks = tasks.filter(task => this.taskFilter(task));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const completedTasks = tasks.filter(task => task.status === 'completed');\n\n    const taskTemplates = repeat(\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      tasks.filter(task => task.status !== 'completed'),\n      task => task.id,\n      task => this.renderTask(task)\n    );\n\n    const completedTaskTemplates = repeat(\n      completedTasks.sort((a, b) => {\n        return new Date(a.lastModifiedDateTime).getTime() - new Date(b.lastModifiedDateTime).getTime();\n      }),\n      task => task.id,\n      task => this.renderCompletedTask(task)\n    );\n    return html`\n      ${taskTemplates}\n      ${completedTaskTemplates}\n    `;\n  }\n\n  /**\n   * Render the generic picker or the task list displayName.\n   *\n   */\n  protected renderPicker() {\n    if (this.targetId) {\n      return html`<p>${this.currentList?.displayName}</p>`;\n    } else {\n      return mgtHtml`\n        <mgt-picker\n          resource=\"me/todo/lists\"\n          scopes=\"tasks.read, tasks.readwrite\"\n          key-name=\"displayName\"\n          selected-value=\"${ifDefined(this.currentList?.displayName)}\"\n          placeholder=\"Select a task list\">\n        </mgt-picker>`;\n    }\n  }\n\n  /**\n   * Create a new todo task and add it to the list\n   *\n   * @protected\n   * @returns {Promise<void>}\n   * @memberof MgtTodo\n   */\n  protected addTask = async (): Promise<void> => {\n    if (this._isNewTaskBeingAdded || !this._newTaskName) {\n      return;\n    }\n\n    this._isNewTaskBeingAdded = true;\n    this.requestUpdate();\n\n    try {\n      await this.createNewTask();\n    } finally {\n      this.clearNewTaskData();\n      this._isNewTaskBeingAdded = false;\n      this.requestUpdate();\n    }\n  };\n\n  /**\n   * Render the panel for creating a new task\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtTodo\n   */\n  protected renderNewTask = (): TemplateResult => {\n    const addIcon = this._newTaskName\n      ? html`\n        <fluent-checkbox\n          class=\"task-add-icon\"\n          @click=\"${this.addTask}\">\n        </fluent-checkbox>\n      `\n      : html`\n        <span class=\"add-icon\">${getSvg(SvgIcon.Add)}</span>\n      `;\n\n    const cancelIcon = html`\n      <fluent-button\n        aria-label=${this.strings.cancelAddingTask}\n        class=\"task-cancel-icon\" \n        @click=\"${this.clearNewTaskData}\"\n      >\n        ${getSvg(SvgIcon.Cancel)}\n      </fluent-button>\n    `;\n    const dateClass = { dark: this._isDarkMode, date: true };\n    const calendarTemplate = html`\n      <fluent-text-field\n        autocomplete=\"off\"\n        type=\"date\"\n        id=\"new-taskDate-input\"\n        class=\"${classMap(dateClass)}\"\n        aria-label=\"${this.strings.newTaskDateInputLabel}\"\n        .value=\"${this.dateToInputValue(this._newTaskDueDate)}\"\n        @change=\"${this.handleDateChange}\"\n      >\n      </fluent-text-field>\n    `;\n\n    const newTaskDetails = this.readOnly\n      ? nothing\n      : html`\n      <fluent-text-field\n        autocomplete=\"off\"\n        appearance=\"outline\"\n        class=\"new-task\"\n        id=\"new-task-name-input\"\n        aria-label=\"${this.strings.newTaskLabel}\"\n        .value=${this._newTaskName}\n        placeholder=\"${this.strings.newTaskPlaceholder}\"\n        @keydown=\"${this.handleKeyDown}\"\n        @input=\"${this.handleInput}\"\n      >\n        <div slot=\"start\" class=\"start\">${addIcon}</div>\n        ${\n          this._newTaskName\n            ? html`\n              <div slot=\"end\" class=\"end\">\n                <span class=\"calendar\">${calendarTemplate}</span>\n                ${cancelIcon}\n              </div> `\n            : html``\n        }\n      </fluent-text-field>\n    `;\n    return html`\n      ${\n        this.currentList\n          ? html`\n            <div dir=${this.direction} class=\"task new-task incomplete\">\n              ${newTaskDetails}\n            </div>\n        `\n          : html``\n      }  \n     `;\n  };\n\n  /**\n   * Handle a change in taskList.\n   *\n   * @protected\n   * @param {CustomEvent} e\n   * @returns {TemplateResult}\n   * @memberof MgtTodo\n   */\n\n  protected handleSelectionChanged = (e: CustomEvent<TodoTaskList>) => {\n    this.currentList = e.detail;\n    void this.loadTasks(this.currentList);\n  };\n\n  /**\n   * Render task details.\n   *\n   * @protected\n   * @param {TodoTask} task\n   * @returns {TemplateResult}\n   * @memberof MgtTodo\n   */\n  protected renderTaskDetails = (task: TodoTask) => {\n    const context = { task, list: this.currentList };\n\n    if (this.hasTemplate('task')) {\n      return this.renderTemplate('task', context, task.id);\n    }\n\n    let taskDetailsTemplate = null;\n\n    const taskDueTemplate = task.dueDateTime\n      ? html`\n        <span class=\"task-calendar\">${getSvg(SvgIcon.Calendar)}</span>\n        <span class=\"task-due-date\">${getDateString(new Date(task.dueDateTime.dateTime))}</span>\n      `\n      : html``;\n\n    const taskDeleteTemplate = this.readOnly\n      ? html``\n      : html`\n        <fluent-button class=\"task-delete\"\n          @click=\"${() => this.removeTask(task.id)}\"\n          aria-label=\"${this.strings.deleteTaskLabel}\"\n        >\n          ${getSvg(SvgIcon.Delete)}\n        </fluent-button>\n      `;\n\n    if (this.hasTemplate('task-details')) {\n      taskDetailsTemplate = this.renderTemplate('task-details', context, `task-details-${task.id}`);\n    } else {\n      taskDetailsTemplate = html`\n      <div class=\"task-details\">\n        <div class=\"title\">${task.title}</div>\n        <div class=\"task-due\">${taskDueTemplate}</div>\n        ${taskDeleteTemplate}\n      </div>\n      `;\n    }\n\n    return html`${taskDetailsTemplate}`;\n  };\n\n  /**\n   * Render a task in the list.\n   *\n   * @protected\n   * @param {TodoTask} task\n   * @returns {TemplateResult}\n   * @memberof MgtTodo\n   */\n  protected renderTask = (task: TodoTask) => {\n    const taskClasses = classMap({\n      'read-only': this.readOnly,\n      task: true\n    });\n\n    return html`\n      <fluent-checkbox \n        id=${task.id}\n        class=${taskClasses}\n        ?disabled=${this.readOnly}\n        @click=\"${() => this.handleTaskCheckClick(task)}\"\n      >\n        ${this.renderTaskDetails(task)}\n      </fluent-checkbox>\n    `;\n  };\n\n  /**\n   * Render a completed task in the list.\n   *\n   * @protected\n   * @param {TodoTask} task\n   * @returns {TemplateResult}\n   * @memberof MgtTodo\n   */\n  protected renderCompletedTask = (task: TodoTask) => {\n    const taskClasses = classMap({\n      complete: true,\n      'read-only': this.readOnly,\n      task: true\n    });\n\n    const taskCheckContent = html`${getSvg(SvgIcon.CheckMark)}`;\n\n    return html`\n      <fluent-checkbox \n        id=${task.id} \n        class=${taskClasses} \n        checked \n        ?disabled=${this.readOnly} \n        @click=\"${() => this.handleTaskCheckClick(task)}\"\n      >\n        <div slot=\"checked-indicator\">\n          ${taskCheckContent}\n        </div>\n        ${this.renderTaskDetails(task)}\n      </fluent-checkbox>\n    `;\n  };\n\n  /**\n   * loads tasks from dataSource\n   *\n   * @returns {Promise<void>}\n   * @memberof MgtTodo\n   */\n  protected loadState = async (): Promise<void> => {\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return;\n    }\n\n    this._isLoadingTasks = true;\n    if (!this._graph) {\n      const graph = provider.graph.forComponent(this);\n      this._graph = graph;\n    }\n\n    if (!this.currentList && !this.initialId) {\n      const lists = await getTodoTaskLists(this._graph);\n      const defaultList = lists?.find(l => l.wellknownListName === 'defaultList');\n      if (defaultList) await this.loadTasks(defaultList);\n    }\n\n    if (this.targetId) {\n      // Call to get the displayName of the list\n      this.currentList = await getTodoTaskList(this._graph, this.targetId);\n      this._tasks = await getTodoTasks(this._graph, this.targetId);\n    } else if (this.initialId) {\n      // Call to get the displayName of the list\n      this.currentList = await getTodoTaskList(this._graph, this.initialId);\n      this._tasks = await getTodoTasks(this._graph, this.initialId);\n    }\n    this._isLoadingTasks = false;\n  };\n\n  /**\n   * Send a request the Graph to create a new todo task item\n   *\n   * @protected\n   * @returns {Promise<void>}\n   * @memberof MgtTodo\n   */\n  protected async createNewTask(): Promise<void> {\n    const listId = this.currentList.id;\n    const taskData = {\n      title: this._newTaskName\n    };\n\n    if (this._newTaskDueDate) {\n      // eslint-disable-next-line @typescript-eslint/dot-notation\n      taskData['dueDateTime'] = {\n        dateTime: new Date(this._newTaskDueDate).toLocaleDateString(),\n        timeZone: 'UTC'\n      };\n    }\n\n    const task = await createTodoTask(this._graph, listId, taskData);\n    this._tasks.unshift(task);\n  }\n\n  /**\n   * Clear out the new task metadata input fields\n   *\n   * @protected\n   * @memberof MgtTodo\n   */\n  protected clearNewTaskData = (): void => {\n    this._newTaskDueDate = null;\n    this._newTaskName = '';\n  };\n\n  /**\n   * Clear the state of the component\n   *\n   * @protected\n   * @memberof MgtTodo\n   */\n  protected clearState = (): void => {\n    super.clearState();\n    this.currentList = null;\n    this._tasks = [];\n    this._loadingTasks = [];\n    this._isLoadingTasks = false;\n  };\n\n  private readonly loadTasks = async (list: TodoTaskList): Promise<void> => {\n    this._isLoadingTasks = true;\n    this.currentList = list;\n\n    this._tasks = await getTodoTasks(this._graph, list.id);\n\n    this._isLoadingTasks = false;\n    this.requestUpdate();\n  };\n\n  private readonly updateTaskStatus = async (task: TodoTask, taskStatus: TaskStatus): Promise<void> => {\n    this._loadingTasks = [...this._loadingTasks, task.id];\n    this.requestUpdate();\n\n    // Change the task status\n    task.status = taskStatus;\n\n    // Send update request\n    const listId = this.currentList.id;\n    task = await updateTodoTask(this._graph, listId, task.id, task);\n\n    const taskIndex = this._tasks.findIndex(t => t.id === task.id);\n    this._tasks[taskIndex] = task;\n\n    this._loadingTasks = this._loadingTasks.filter(id => id !== task.id);\n    this.requestUpdate();\n  };\n\n  private readonly removeTask = async (taskId: string): Promise<void> => {\n    this._tasks = this._tasks.filter(t => t.id !== taskId);\n    this.requestUpdate();\n\n    const listId = this.currentList.id;\n    await deleteTodoTask(this._graph, listId, taskId);\n\n    this._tasks = this._tasks.filter(t => t.id !== taskId);\n  };\n\n  private handleTaskCheckClick(task: TodoTask) {\n    this.handleTaskClick(task);\n    if (!this.readOnly) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (task.status === 'completed') {\n        void this.updateTaskStatus(task, 'notStarted');\n      } else {\n        void this.updateTaskStatus(task, 'completed');\n      }\n    }\n  }\n\n  private readonly handleInput = (e: MouseEvent) => {\n    if ((e.target as HTMLInputElement).id === 'new-task-name-input') {\n      this._newTaskName = (e.target as HTMLInputElement).value;\n    }\n  };\n\n  private readonly handleKeyDown = async (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      await this.addTask();\n    }\n  };\n\n  private readonly handleDateChange = (e: Event) => {\n    const value = (e.target as HTMLInputElement).value;\n    if (value) {\n      this._newTaskDueDate = new Date(value + 'T17:00');\n    } else {\n      this._newTaskDueDate = null;\n    }\n  };\n}\n"]}