{"version":3,"file":"mgt-person-types.js","sourceRoot":"src/","sources":["components/mgt-person/mgt-person-types.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH;;;;;GAKG;AAEH,MAAM,CAAN,IAAY,cAyBX;AAzBD,WAAY,cAAc;IACxB;;OAEG;IACH,uDAAU,CAAA;IAEV;;OAEG;IACH,yDAAW,CAAA;IAEX;;OAEG;IACH,2DAAY,CAAA;IAEZ;;OAEG;IACH,+DAAc,CAAA;IAEd;;OAEG;IACH,6DAAa,CAAA;AACf,CAAC,EAzBW,cAAc,KAAd,cAAc,QAyBzB;AAED,MAAM,CAAN,IAAY,UAUX;AAVD,WAAY,UAAU;IACpB;;OAEG;IACH,6BAAe,CAAA;IAEf;;OAEG;IACH,mCAAqB,CAAA;AACvB,CAAC,EAVW,UAAU,KAAV,UAAU,QAUrB","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\n/**\n * Enumeration to define what parts of the person component render\n *\n * @export\n * @enum {number}\n */\n\nexport enum PersonViewType {\n  /**\n   * Render only the avatar\n   */\n  avatar = 2,\n\n  /**\n   * Render the avatar and one line of text\n   */\n  oneline = 3,\n\n  /**\n   * Render the avatar and two lines of text\n   */\n  twolines = 4,\n\n  /**\n   * Render the avatar and three lines of text\n   */\n  threelines = 5,\n\n  /**\n   * Render the avatar and four lines of text\n   */\n  fourlines = 6\n}\n\nexport enum avatarType {\n  /**\n   * Renders avatar photo if available, falls back to initials\n   */\n  photo = 'photo',\n\n  /**\n   * Forces render avatar initials\n   */\n  initials = 'initials'\n}\n\n/**\n * Configuration object for the Person component\n *\n * @export\n * @interface MgtPersonConfig\n */\nexport interface MgtPersonConfig {\n  /**\n   * Sets or gets whether the person component can use Contacts APIs to\n   * find contacts and their images\n   *\n   * @type {boolean}\n   */\n  useContactApis: boolean;\n}\n"]}