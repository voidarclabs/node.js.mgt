{"version":3,"file":"mgt-person.js","sourceRoot":"src/","sources":["components/mgt-person/mgt-person.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  MgtTemplatedComponent,\n  ProviderState,\n  Providers,\n  customElement,\n  customElementHelper,\n  mgtHtml\n} from '@microsoft/mgt-element';\nimport { Presence } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult, nothing } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { findPeople, getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { getGroupImage, getPersonImage } from '../../graph/graph.photos';\nimport { getUserPresence } from '../../graph/graph.presence';\nimport { findUsers, getMe, getUser } from '../../graph/graph.user';\nimport { getUserWithPhoto } from '../../graph/graph.userWithPhoto';\nimport { AvatarSize, IDynamicPerson, ViewType } from '../../graph/types';\nimport '../../styles/style-helper';\nimport { SvgIcon, getSvg } from '../../utils/SvgHelper';\nimport { MgtPersonCard } from '../mgt-person-card/mgt-person-card';\nimport '../sub-components/mgt-flyout/mgt-flyout';\nimport { MgtFlyout } from '../sub-components/mgt-flyout/mgt-flyout';\nimport { PersonCardInteraction } from './../PersonCardInteraction';\nimport { styles } from './mgt-person-css';\nimport { MgtPersonConfig, PersonViewType, avatarType } from './mgt-person-types';\nimport { strings } from './strings';\nimport { isUser, isContact } from '../../graph/entityType';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\nexport { PersonCardInteraction } from '../PersonCardInteraction';\n\n/**\n * Person properties part of original set provided by graph by default\n */\nexport const defaultPersonProperties = [\n  'businessPhones',\n  'displayName',\n  'givenName',\n  'jobTitle',\n  'department',\n  'mail',\n  'mobilePhone',\n  'officeLocation',\n  'preferredLanguage',\n  'surname',\n  'userPrincipalName',\n  'id',\n  'userType'\n];\n\n/**\n * The person component is used to display a person or contact by using their photo, name, and/or email address.\n *\n * @export\n * @class MgtPerson\n * @extends {MgtTemplatedComponent}\n *\n * @fires {CustomEvent<IDynamicPerson>} line1clicked - Fired when line1 is clicked\n * @fires {CustomEvent<IDynamicPerson>} line2clicked - Fired when line2 is clicked\n * @fires {CustomEvent<IDynamicPerson>} line3clicked - Fired when line3 is clicked\n * @fires {CustomEvent<IDynamicPerson>} line4clicked - Fired when line4 is clicked\n *\n * @cssprop --person-background-color - {Color} the color of the person component background.\n * @cssprop --person-background-border-radius - {Length} the border radius of the person component. Default is 4px.\n *\n * @cssprop --person-avatar-size - {Length} the width and height of the avatar. Default is 24px.\n * @cssprop --person-avatar-border - {String} the border around an avatar. Default is none.\n * @cssprop --person-avatar-border-radius - {String} the radius around the border of an avatar. Default is 50%.\n *\n * @cssprop --person-initials-text-color - {Color} the color of initials in an avatar.\n * @cssprop --person-initials-background-color - {Color} the color of the background in an avatar with initials.\n *\n * @cssprop --person-details-spacing - {Length} the space between the avatar and the person details. Default is 12px.\n *\n * @cssprop --person-line1-font-size - {String} the font-size of the line 1 text. Default is 14px.\n * @cssprop --person-line1-font-weight - {Length} the font weight of the line 1 text. Default is 600.\n * @cssprop --person-line1-text-color - {Color} the color of the line 1 text.\n * @cssprop --person-line1-text-transform - {String} the tex transform of the line 1 text. Default is inherit.\n * @cssprop --person-line1-text-line-height - {Length} the line height of the line 1 text. Default is 20px.\n *\n * @cssprop --person-line2-font-size - {Length} the font-size of the line 2 text. Default is 12px.\n * @cssprop --person-line2-font-weight - {Length} the font weight of the line 2 text. Default is 400.\n * @cssprop --person-line2-text-color - {Color} the color of the line 2 text.\n * @cssprop --person-line2-text-transform - {String} the tex transform of the line 2 text. Default is inherit.\n * @cssprop --person-line2-text-line-height - {Length} the line height of the line 2 text. Default is 16px.\n *\n * @cssprop --person-line3-font-size - {Length} the font-size of the line 3 text. Default is 12px.\n * @cssprop --person-line3-font-weight - {Length} the font weight of the line 3 text. Default is 400.\n * @cssprop --person-line3-text-color - {Color} the color of the line 3 text.\n * @cssprop --person-line3-text-transform - {String} the tex transform of the line 3 text. Default is inherit.\n * @cssprop --person-line3-text-line-height - {Length} the line height of the line 3 text. Default is 16px.\n *\n * @cssprop --person-line4-font-size - {Length} the font-size of the line 4 text. Default is 12px.\n * @cssprop --person-line4-font-weight - {Length} the font weight of the line 4 text. Default is 400.\n * @cssprop --person-line4-text-color - {Color} the color of the line 4 text.\n * @cssprop --person-line4-text-transform - {String} the tex transform of the line 4 text. Default is inherit.\n * @cssprop --person-line4-text-line-height - {Length} the line height of the line 4 text. Default is 16px.\n *\n * @cssprop --person-details-wrapper-width - {Length} the minimum width of the details section. Default is 168px.\n */\n@customElement('person')\nexport class MgtPerson extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * Strings to use for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtPerson\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Global Configuration object for all\n   * person components\n   *\n   * @static\n   * @type {MgtPersonConfig}\n   * @memberof MgtPerson\n   */\n  public static config: MgtPersonConfig = {\n    useContactApis: true\n  };\n\n  /**\n   * allows developer to define name of person for component\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'person-query'\n  })\n  public get personQuery(): string {\n    return this._personQuery;\n  }\n  public set personQuery(value: string) {\n    if (value === this._personQuery) {\n      return;\n    }\n\n    this._personQuery = value;\n    this.personDetailsInternal = null;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Fallback when no user is found\n   *\n   * @type {IDynamicPerson}\n   */\n  @property({\n    attribute: 'fallback-details',\n    type: Object\n  })\n  public get fallbackDetails(): IDynamicPerson {\n    return this._fallbackDetails;\n  }\n  public set fallbackDetails(value: IDynamicPerson) {\n    if (value === this._fallbackDetails) {\n      return;\n    }\n\n    this._fallbackDetails = value;\n\n    if (this.personDetailsInternal) {\n      return;\n    }\n\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * user-id property allows developer to use id value to determine person\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'user-id'\n  })\n  public get userId(): string {\n    return this._userId;\n  }\n  public set userId(value: string) {\n    if (value === this._userId) {\n      return;\n    }\n\n    this._userId = value;\n    this.personDetailsInternal = null;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * usage property allows you to specify where the component is being used to add\n   * customized personalization for it. Currently only supports \"people\" as used in\n   * the people component.\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'usage'\n  })\n  public get usage(): string {\n    return this._usage;\n  }\n  public set usage(value: string) {\n    if (value === this._usage) {\n      return;\n    }\n\n    this._usage = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * determines if person component renders presence\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence: boolean;\n\n  /**\n   * determines person component avatar size and apply presence badge accordingly.\n   * Default is \"auto\". When you set the view > 1, it will default to \"auto\".\n   *\n   * @type {AvatarSize}\n   */\n  @property({\n    attribute: 'avatar-size',\n    type: String\n  })\n  public avatarSize: AvatarSize;\n\n  /**\n   * object containing Graph details on person\n   * a copy of person-details attribute\n   *\n   * @type {IDynamicPerson}\n   */\n  @state()\n  private get personDetailsInternal(): IDynamicPerson {\n    return this._personDetailsInternal;\n  }\n\n  private set personDetailsInternal(value: IDynamicPerson) {\n    if (this._personDetailsInternal === value) {\n      return;\n    }\n\n    this._personDetailsInternal = value;\n    this._fetchedImage = null;\n    this._fetchedPresence = null;\n\n    void this.requestStateUpdate();\n    this.requestUpdate('personDetailsInternal');\n  }\n\n  /**\n   * object containing Graph details on person\n   *\n   * @type {IDynamicPerson}\n   */\n  @property({\n    attribute: 'person-details',\n    type: Object\n  })\n  public get personDetails(): IDynamicPerson {\n    return this._personDetails;\n  }\n\n  public set personDetails(value: IDynamicPerson) {\n    if (this._personDetails === value) {\n      return;\n    }\n\n    this._personDetails = value;\n    this._fetchedImage = null;\n    this._fetchedPresence = null;\n\n    void this.requestStateUpdate();\n    this.requestUpdate('personDetails');\n  }\n\n  /**\n   * Set the image of the person\n   *\n   * @type {string}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'person-image',\n    type: String\n  })\n  public get personImage(): string {\n    return this._personImage || this._fetchedImage;\n  }\n  public set personImage(value: string) {\n    if (value === this._personImage) {\n      return;\n    }\n\n    this._isInvalidImageSrc = !value;\n    const oldValue = this._personImage;\n    this._personImage = value;\n    this.requestUpdate('personImage', oldValue);\n  }\n\n  /**\n   * Sets whether the person image should be fetched\n   * from the Microsoft Graph based on the personDetailsInternal\n   * provided by the user\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'fetch-image',\n    type: Boolean\n  })\n  public fetchImage: boolean;\n\n  /**\n   * Sets whether to disable the person image fetch\n   * from the Microsoft Graph\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'disable-image-fetch',\n    type: Boolean\n  })\n  public disableImageFetch: boolean;\n\n  /**\n   * Sets the vertical layout of\n   * the Person Card\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'vertical-layout',\n    type: Boolean\n  })\n  public verticalLayout: boolean;\n\n  /**\n   * Determines and sets person avatar\n   *\n   *\n   * @type {string}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'avatar-type',\n    converter: (value): avatarType => {\n      value = value.toLowerCase();\n\n      if (value === 'initials') {\n        return avatarType.initials;\n      }\n      return avatarType.photo;\n    }\n  })\n  public get avatarType(): avatarType {\n    return this._avatarType;\n  }\n  public set avatarType(value: avatarType) {\n    if (value === this._avatarType) {\n      return;\n    }\n\n    this._avatarType = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Gets or sets presence of person\n   *\n   * @type {MicrosoftGraph.Presence}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'person-presence',\n    type: Object\n  })\n  public get personPresence(): Presence {\n    return this._personPresence || this._fetchedPresence;\n  }\n  public set personPresence(value: Presence) {\n    if (value === this._personPresence) {\n      return;\n    }\n\n    const oldValue = this._personPresence;\n    this._personPresence = value;\n    this.requestUpdate('personPresence', oldValue);\n  }\n\n  /**\n   * Sets how the person-card is invoked\n   * Set to PersonCardInteraction.none to not show the card\n   *\n   * @type {PersonCardInteraction}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'person-card',\n    converter: value => {\n      value = value.toLowerCase();\n      if (typeof PersonCardInteraction[value] === 'undefined') {\n        return PersonCardInteraction.none;\n      } else {\n        return PersonCardInteraction[value] as PersonCardInteraction;\n      }\n    }\n  })\n  public personCardInteraction: PersonCardInteraction;\n\n  /**\n   * Get the scopes required for person\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPerson\n   */\n  public static get requiredScopes(): string[] {\n    const scopes = ['user.readbasic.all', 'user.read', 'people.read', 'presence.read.all', 'presence.read'];\n\n    if (MgtPerson.config.useContactApis) {\n      scopes.push('contacts.read');\n    }\n\n    return scopes;\n  }\n\n  /**\n   * Gets the flyout element\n   *\n   * @protected\n   * @type {MgtFlyout}\n   * @memberof MgtPerson\n   */\n  protected get flyout(): MgtFlyout {\n    return this.renderRoot.querySelector('.flyout');\n  }\n\n  /**\n   * Sets the property of the personDetailsInternal to use for the first line of text.\n   * Default is displayName.\n   *\n   * @type {string}\n   * @memberof MgtPerson\n   */\n  @property({ attribute: 'line1-property' }) public line1Property: string;\n\n  /**\n   * Sets the property of the personDetailsInternal to use for the second line of text.\n   * Default is mail.\n   *\n   * @type {string}\n   * @memberof MgtPerson\n   */\n  @property({ attribute: 'line2-property' }) public line2Property: string;\n\n  /**\n   * Sets the property of the personDetailsInternal to use for the third line of text.\n   * Default is mail.\n   *\n   * @type {string}\n   * @memberof MgtPerson\n   */\n  @property({ attribute: 'line3-property' }) public line3Property: string;\n\n  /**\n   * Sets the property of the personDetailsInternal to use for the fourth line of text.\n   * Default is mail.\n   *\n   * @type {string}\n   * @memberof MgtPerson\n   */\n  @property({ attribute: 'line4-property' }) public line4Property: string;\n\n  /**\n   * Sets what data to be rendered (image only, oneLine, twoLines).\n   * Default is 'image'.\n   *\n   * @type {ViewType | PersonViewType}\n   * @memberof MgtPerson\n   */\n  @property({\n    converter: value => {\n      if (!value || value.length === 0) {\n        return ViewType.image;\n      }\n\n      value = value.toLowerCase();\n\n      if (typeof ViewType[value] === 'undefined') {\n        return ViewType.image;\n      } else {\n        return ViewType[value] as ViewType;\n      }\n    }\n  })\n  public view: ViewType | PersonViewType;\n\n  @state() private _fetchedImage: string;\n  @state() private _fetchedPresence: Presence;\n  @state() private _isInvalidImageSrc: boolean;\n  @state() private _personCardShouldRender: boolean;\n\n  private _personDetailsInternal: IDynamicPerson;\n  private _personDetails: IDynamicPerson;\n  private _fallbackDetails: IDynamicPerson;\n  private _personImage: string;\n  private _personPresence: Presence;\n  private _personQuery: string;\n  private _userId: string;\n  private _usage: string;\n  private _avatarType: avatarType;\n\n  private _mouseLeaveTimeout = -1;\n  private _mouseEnterTimeout = -1;\n\n  constructor() {\n    super();\n\n    // defaults\n    this.personCardInteraction = PersonCardInteraction.none;\n    this.line1Property = 'displayName';\n    this.line2Property = 'jobTitle';\n    this.line3Property = 'department';\n    this.line4Property = 'email';\n    this.view = ViewType.image;\n    this.avatarSize = 'auto';\n    this.disableImageFetch = false;\n    this._isInvalidImageSrc = false;\n    this._avatarType = avatarType.photo;\n    this.verticalLayout = false;\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  public render() {\n    // Loading\n    if (this.isLoadingState && !this.personDetails && !this.personDetailsInternal && !this.fallbackDetails) {\n      return this.renderLoading();\n    }\n\n    // Prep data\n    const person = this.personDetails || this.personDetailsInternal || this.fallbackDetails;\n    const image = this.getImage();\n    const presence = this.personPresence || this._fetchedPresence;\n\n    if (!person && !image) {\n      return this.renderNoData();\n    }\n    if (!person?.personImage && image) {\n      person.personImage = image;\n    }\n\n    // Default template\n    let personTemplate = this.renderTemplate('default', { person, personImage: image, personPresence: presence });\n\n    if (!personTemplate) {\n      const detailsTemplate: TemplateResult = this.renderDetails(person, presence);\n      const imageWithPresenceTemplate: TemplateResult = this.renderAvatar(person, image, presence);\n\n      personTemplate = html`\n        ${imageWithPresenceTemplate}\n        ${detailsTemplate}\n      `;\n    }\n\n    const showPersonCard = this.personCardInteraction !== PersonCardInteraction.none;\n    if (showPersonCard) {\n      personTemplate = this.renderFlyout(personTemplate, person, image, presence);\n    }\n\n    const rootClasses = classMap({\n      'person-root': true,\n      small: !this.isThreeLines() && !this.isFourLines() && !this.isLargeAvatar(),\n      large: this.avatarSize !== 'auto' && this.isLargeAvatar(),\n      noline: this.isNoLine(),\n      oneline: this.isOneLine(),\n      twolines: this.isTwoLines(),\n      threelines: this.isThreeLines(),\n      fourlines: this.isFourLines(),\n      vertical: this.isVertical()\n    });\n\n    return html`\n      <div\n        class=\"${rootClasses}\"\n        dir=${this.direction}\n        @click=${this.handleMouseClick}\n        @mouseenter=${this.handleMouseEnter}\n        @mouseleave=${this.handleMouseLeave}\n        @keydown=${this.handleKeyDown}\n        tabindex=\"${ifDefined(this.personCardInteraction !== PersonCardInteraction.none ? '0' : undefined)}\"\n      >\n        ${personTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the loading state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPerson\n   */\n  protected renderLoading(): TemplateResult {\n    return this.renderTemplate('loading', null) || html``;\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtPerson\n   */\n  protected clearState(): void {\n    this._personImage = '';\n    this._personDetailsInternal = null;\n    this._fetchedImage = null;\n    this._fetchedPresence = null;\n  }\n\n  /**\n   * Render the state when no data is available\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPerson\n   */\n  protected renderNoData(): TemplateResult {\n    const noDataTemplate = this.renderTemplate('no-data', null);\n    if (noDataTemplate) {\n      return noDataTemplate;\n    }\n\n    const avatarClasses = {\n      'avatar-icon': true,\n      vertical: this.isVertical(),\n      small: !this.isLargeAvatar(),\n      threeLines: this.isThreeLines(),\n      fourLines: this.isFourLines()\n    };\n\n    return html`\n       <i class=${classMap(avatarClasses)}></i>\n     `;\n  }\n\n  /**\n   * Render a person icon.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPerson\n   */\n  protected renderPersonIcon() {\n    return getSvg(SvgIcon.Person);\n  }\n\n  /**\n   * Render the image part of the person template.\n   * If the image is unavailable, the person's initials will be used instead.\n   *\n   * @protected\n   * @param {string} [imageSrc]\n   * @param {IDynamicPerson} [personDetailsInternal]\n   * @returns\n   * @memberof MgtPerson\n   */\n  protected renderImage(personDetailsInternal: IDynamicPerson, imageSrc: string) {\n    const altText = `${this.strings.photoFor} ${personDetailsInternal.displayName}`;\n    const hasImage = imageSrc && !this._isInvalidImageSrc && this.avatarType === avatarType.photo;\n    const imageOnly = this.avatarType === avatarType.photo && this.view === ViewType.image;\n    const titleText =\n      (personDetailsInternal?.displayName || getEmailFromGraphEntity(personDetailsInternal)) ?? undefined;\n    const imageTemplate = html`<img\n      title=\"${ifDefined(imageOnly ? titleText : undefined)}\"\n      alt=${altText}\n      src=${imageSrc}\n      @error=${() => (this._isInvalidImageSrc = true)} />`;\n\n    const initials = personDetailsInternal ? this.getInitials(personDetailsInternal) : '';\n    const hasInitials = initials?.length;\n    const textClasses = classMap({\n      initials: hasInitials && !hasImage,\n      'contact-icon': !hasInitials\n    });\n    const contactIconTemplate = html`<i>${this.renderPersonIcon()}</i>`;\n    // consider the image to presentational if the view is anything other than image.\n    // this reduces the redundant announcement of the user's name.\n    const textTemplate = html`\n      <span \n        title=\"${ifDefined(this.view === ViewType.image ? titleText : undefined)}\"\n        role=\"${ifDefined(this.view === ViewType.image ? undefined : 'presentation')}\"\n        class=\"${textClasses}\"\n      >\n        ${hasInitials ? initials : contactIconTemplate}\n      </span>\n`;\n\n    return hasImage ? imageTemplate : textTemplate;\n  }\n\n  /**\n   * Render presence for the person.\n   *\n   * @param presence\n   * @memberof MgtPerson\n   * @returns\n   */\n  protected renderPresence(presence: Presence): TemplateResult {\n    if (!this.showPresence || !presence) {\n      return html``;\n    }\n    let presenceIcon: TemplateResult;\n\n    const { activity, availability } = presence;\n    switch (availability) {\n      case 'Available':\n      case 'AvailableIdle':\n        switch (activity) {\n          case 'OutOfOffice':\n            presenceIcon = getSvg(SvgIcon.PresenceOofAvailable);\n            break;\n          // OutOfOffice and Uknowns\n          case 'Available':\n          default:\n            presenceIcon = getSvg(SvgIcon.PresenceAvailable);\n            break;\n        }\n        break;\n      case 'Busy':\n      case 'BusyIdle':\n        switch (activity) {\n          case 'OutOfOffice':\n          case 'OnACall':\n            presenceIcon = getSvg(SvgIcon.PresenceOofBusy);\n            break;\n          // Busy,InACall,InAConferenceCall,InAMeeting, Unknown\n          case 'Busy':\n          case 'InACall':\n          case 'InAMeeting':\n          case 'InAConferenceCall':\n          default:\n            presenceIcon = getSvg(SvgIcon.PresenceBusy);\n            break;\n        }\n        break;\n      case 'DoNotDisturb':\n        switch (activity) {\n          case 'OutOfOffice':\n            presenceIcon = getSvg(SvgIcon.PresenceOofDnd);\n            break;\n          case 'Presenting':\n          case 'Focusing':\n          case 'UrgentInterruptionsOnly':\n          default:\n            presenceIcon = getSvg(SvgIcon.PresenceDnd);\n            break;\n        }\n        break;\n\n      case 'Away':\n        switch (activity) {\n          case 'OutOfOffice':\n            presenceIcon = getSvg(SvgIcon.PresenceOofAway);\n            break;\n          case 'AwayLastSeenTime':\n          default:\n            presenceIcon = getSvg(SvgIcon.PresenceAway);\n            break;\n        }\n        break;\n      case 'BeRightBack':\n        switch (activity) {\n          default:\n            presenceIcon = getSvg(SvgIcon.PresenceAway);\n            break;\n        }\n        break;\n      case 'Offline':\n        switch (activity) {\n          case 'Offline':\n            presenceIcon = getSvg(SvgIcon.PresenceOffline);\n            break;\n          case 'OutOfOffice':\n          case 'OffWork':\n            presenceIcon = getSvg(SvgIcon.PresenceOofAway);\n            break;\n          default:\n            presenceIcon = getSvg(SvgIcon.PresenceStatusUnknown);\n            break;\n        }\n        break;\n      default:\n        presenceIcon = getSvg(SvgIcon.PresenceStatusUnknown);\n        break;\n    }\n\n    const presenceWrapperClasses = classMap({\n      'presence-wrapper': true,\n      noline: this.isNoLine(),\n      oneline: this.isOneLine()\n    });\n\n    const formattedActivity = (this.strings[activity] as string) ?? nothing;\n\n    return html`\n      <span\n        class=\"${presenceWrapperClasses}\"\n        title=\"${formattedActivity}\"\n        aria-label=\"${formattedActivity}\"\n        role=\"img\">\n          ${presenceIcon}\n      </span>\n    `;\n  }\n\n  /**\n   * Render image with presence for the person.\n   *\n   * @protected\n   * @param\n   * @memberof MgtPersonCard\n   */\n  protected renderAvatar(personDetailsInternal: IDynamicPerson, image: string, presence: Presence): TemplateResult {\n    const hasInitials = !image || this._isInvalidImageSrc || this._avatarType === avatarType.initials;\n\n    let title = '';\n\n    if (hasInitials && personDetailsInternal) {\n      title = `${this.strings.initials} ${this.getInitials(personDetailsInternal)}`;\n    } else {\n      title = personDetailsInternal ? personDetailsInternal.displayName || '' : '';\n      if (title !== '') {\n        title = `${this.strings.photoFor} ${title}`;\n      }\n    }\n\n    if (title === '') {\n      const emailAddress = getEmailFromGraphEntity(personDetailsInternal);\n      if (emailAddress !== null) {\n        title = `${this.strings.emailAddress} ${emailAddress}`;\n      }\n    }\n\n    const imageTemplate: TemplateResult = this.renderImage(personDetailsInternal, image);\n    const presenceTemplate: TemplateResult = this.renderPresence(presence);\n\n    return html`\n      <div class=\"avatar-wrapper\">\n        ${imageTemplate}\n        ${presenceTemplate}\n      </div>\n    `;\n  }\n\n  private handleLine1Clicked() {\n    this.fireCustomEvent('line1clicked', this.personDetailsInternal);\n  }\n\n  private handleLine2Clicked() {\n    this.fireCustomEvent('line2clicked', this.personDetailsInternal);\n  }\n\n  private handleLine3Clicked() {\n    this.fireCustomEvent('line3clicked', this.personDetailsInternal);\n  }\n\n  private handleLine4Clicked() {\n    this.fireCustomEvent('line4clicked', this.personDetailsInternal);\n  }\n\n  /**\n   * Render the details part of the person template.\n   *\n   * @param personProps\n   * @param presence\n   * @memberof MgtPerson\n   * @returns\n   */\n  protected renderDetails(personProps: IDynamicPerson, presence?: Presence): TemplateResult {\n    if (!personProps || this.view === ViewType.image || this.view === PersonViewType.avatar) {\n      return html``;\n    }\n\n    const person: IDynamicPerson & { presenceActivity?: string; presenceAvailability?: string } = personProps;\n    if (presence) {\n      person.presenceActivity = presence?.activity;\n      person.presenceAvailability = presence?.availability;\n    }\n\n    const details: TemplateResult[] = [];\n\n    if (this.view > ViewType.image) {\n      const text = this.getTextFromProperty(person, this.line1Property);\n      if (this.hasTemplate('line1')) {\n        // Render the line1 template\n        const template = this.renderTemplate('line1', { person });\n        details.push(html`\n           <div class=\"line1\" @click=${() =>\n             this.handleLine1Clicked()} role=\"presentation\" aria-label=\"${text}\">${template}</div>\n         `);\n      } else {\n        // Render the line1 property value\n        if (text) {\n          details.push(html`\n             <div class=\"line1\" @click=${() =>\n               this.handleLine1Clicked()} role=\"presentation\" aria-label=\"${text}\">${text}</div>\n           `);\n        }\n      }\n    }\n\n    if (this.view > ViewType.oneline) {\n      const text = this.getTextFromProperty(person, this.line2Property);\n      if (this.hasTemplate('line2')) {\n        // Render the line2 template\n        const template = this.renderTemplate('line2', { person });\n        details.push(html`\n           <div class=\"line2\" @click=${() =>\n             this.handleLine2Clicked()} role=\"presentation\" aria-label=\"${text}\">${template}</div>\n         `);\n      } else {\n        // Render the line2 property value\n        if (text) {\n          details.push(html`\n             <div class=\"line2\" @click=${() =>\n               this.handleLine2Clicked()} role=\"presentation\" aria-label=\"${text}\">${text}</div>\n           `);\n        }\n      }\n    }\n\n    if (this.view > ViewType.twolines) {\n      const text = this.getTextFromProperty(person, this.line3Property);\n      if (this.hasTemplate('line3')) {\n        // Render the line3 template\n        const template = this.renderTemplate('line3', { person });\n        details.push(html`\n           <div class=\"line3\" @click=${() =>\n             this.handleLine3Clicked()} role=\"presentation\" aria-label=\"${text}\">${template}</div>\n         `);\n      } else {\n        // Render the line3 property value\n        if (text) {\n          details.push(html`\n             <div class=\"line3\" @click=${() =>\n               this.handleLine3Clicked()} role=\"presentation\" aria-label=\"${text}\">${text}</div>\n           `);\n        }\n      }\n    }\n\n    if (this.view > ViewType.threelines) {\n      const text = this.getTextFromProperty(person, this.line4Property);\n      if (this.hasTemplate('line4')) {\n        // Render the line4 template\n        const template = this.renderTemplate('line4', { person });\n        details.push(html`\n          <div class=\"line4\" @click=${() =>\n            this.handleLine4Clicked()} role=\"presentation\" aria-label=\"${text}\">${template}</div>\n        `);\n      } else {\n        // Render the line4 property value\n        if (text) {\n          details.push(html`\n            <div class=\"line4\" @click=${() =>\n              this.handleLine4Clicked()} role=\"presentation\" aria-label=\"${text}\">${text}</div>\n          `);\n        }\n      }\n    }\n\n    const detailsClasses = classMap({\n      'details-wrapper': true,\n      vertical: this.isVertical()\n    });\n\n    return html`\n      <div class=\"${detailsClasses}\">\n        ${details}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the details flyout.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPerson\n   */\n  protected renderFlyout(\n    anchor: TemplateResult,\n    personDetails: IDynamicPerson,\n    image: string,\n    presence: Presence\n  ): TemplateResult {\n    const flyoutContent = this._personCardShouldRender\n      ? html`\n           <div slot=\"flyout\" data-testid=\"flyout-slot\">\n             ${this.renderFlyoutContent(personDetails, image, presence)}\n           </div>`\n      : html``;\n\n    const slotClasses = classMap({\n      vertical: this.isVertical()\n    });\n\n    return mgtHtml`\n      <mgt-flyout light-dismiss class=\"flyout\" .avoidHidingAnchor=${false}>\n        <div slot=\"anchor\" class=\"${slotClasses}\">${anchor}</div>\n        ${flyoutContent}\n      </mgt-flyout>`;\n  }\n\n  /**\n   * Render the flyout menu content.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPerson\n   */\n  protected renderFlyoutContent(personDetails: IDynamicPerson, image: string, presence: Presence): TemplateResult {\n    return (\n      this.renderTemplate('person-card', { person: personDetails, personImage: image }) ||\n      mgtHtml`\n        <mgt-person-card\n          class=\"mgt-person-card\"\n          lock-tab-navigation\n          .personDetails=${personDetails}\n          .personImage=${image}\n          .personPresence=${presence}\n          .showPresence=${this.showPresence}>\n        </mgt-person-card>`\n    );\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPerson\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state === ProviderState.Loading) {\n      return;\n    }\n\n    if (provider && provider.state === ProviderState.SignedOut) {\n      this.personDetailsInternal = null;\n      return;\n    }\n\n    const graph = provider.graph.forComponent(this);\n\n    if (this.fallbackDetails) {\n      this.line2Property = 'email';\n    }\n\n    if (this.verticalLayout && this.view < ViewType.fourlines) {\n      this.line2Property = 'email';\n    }\n\n    // Prepare person props\n    let personProps = [\n      ...defaultPersonProperties,\n      this.line1Property,\n      this.line2Property,\n      this.line3Property,\n      this.line4Property\n    ];\n    personProps = personProps.filter(email => email !== 'email');\n\n    let details = this.personDetailsInternal || this.personDetails || this.fallbackDetails;\n\n    if (details) {\n      if (\n        !details.personImage &&\n        this.fetchImage &&\n        this._avatarType === avatarType.photo &&\n        !this.personImage &&\n        !this._fetchedImage\n      ) {\n        let image: string;\n        if ('groupTypes' in details) {\n          image = await getGroupImage(graph, details);\n        } else {\n          image = await getPersonImage(graph, details, MgtPerson.config.useContactApis);\n        }\n        if (image) {\n          details.personImage = image;\n          this._fetchedImage = image;\n        }\n      }\n    } else if (this.userId || this.personQuery === 'me') {\n      // Use userId or 'me' query to get the person and image\n      let person: IDynamicPerson;\n      if (this._avatarType === avatarType.photo && !this.disableImageFetch) {\n        person = await getUserWithPhoto(graph, this.userId, personProps);\n      } else {\n        if (this.personQuery === 'me') {\n          person = await getMe(graph, personProps);\n        } else {\n          person = await getUser(graph, this.userId, personProps);\n        }\n      }\n      this.personDetailsInternal = person;\n      this.personDetails = person;\n      this._fetchedImage = this.getImage();\n    } else if (this.personQuery) {\n      // Use the personQuery to find our person.\n      let people = await findPeople(graph, this.personQuery, 1);\n\n      if (!people || people.length === 0) {\n        people = (await findUsers(graph, this.personQuery, 1)) || [];\n      }\n\n      if (people?.length) {\n        this.personDetailsInternal = people[0];\n        this.personDetails = people[0];\n        if (this._avatarType === avatarType.photo && !this.disableImageFetch) {\n          const image = await getPersonImage(graph, people[0], MgtPerson.config.useContactApis);\n\n          if (image) {\n            this.personDetailsInternal.personImage = image;\n            this.personDetails.personImage = image;\n            this._fetchedImage = image;\n          }\n        }\n      }\n    }\n\n    // populate presence\n    const defaultPresence: Presence = {\n      activity: 'Offline',\n      availability: 'Offline',\n      id: null\n    };\n\n    if (this.showPresence && !this.personPresence && !this._fetchedPresence) {\n      try {\n        details = this.personDetailsInternal || this.personDetails;\n        if (details) {\n          // setting userId to 'me' ensures only the presence.read permission is required\n          const userId = this.personQuery !== 'me' ? details?.id : null;\n          this._fetchedPresence = await getUserPresence(graph, userId);\n        } else {\n          this._fetchedPresence = defaultPresence;\n        }\n      } catch (_) {\n        // set up a default Presence in case beta api changes or getting error code\n        this._fetchedPresence = defaultPresence;\n      }\n    }\n  }\n\n  /**\n   * Gets the user initials\n   *\n   * @protected\n   * @returns {string}\n   * @memberof MgtPerson\n   */\n  protected getInitials(person?: IDynamicPerson): string {\n    if (!person) {\n      person = this.personDetailsInternal;\n    }\n\n    if (isContact(person)) {\n      return person.initials;\n    }\n\n    let initials = '';\n    if (isUser(person)) {\n      initials += person.givenName?.[0]?.toUpperCase() ?? '';\n      initials += person.surname?.[0]?.toUpperCase() ?? '';\n    }\n\n    if (!initials && person.displayName) {\n      const name = person.displayName.split(/\\s+/);\n      for (let i = 0; i < 2 && i < name.length; i++) {\n        if (name[i][0] && this.isLetter(name[i][0])) {\n          initials += name[i][0].toUpperCase();\n        }\n      }\n    }\n\n    return initials;\n  }\n\n  private getImage(): string {\n    if (this.personImage) {\n      return this.personImage;\n    }\n\n    if (this._fetchedImage) {\n      return this._fetchedImage;\n    }\n\n    const person = this.personDetailsInternal || this.personDetails;\n    return person?.personImage ? person.personImage : null;\n  }\n\n  private isLetter(char: string) {\n    try {\n      return char.match(new RegExp('\\\\p{L}', 'u'));\n    } catch (e) {\n      return char.toLowerCase() !== char.toUpperCase();\n    }\n  }\n\n  private getTextFromProperty(personDetailsInternal: IDynamicPerson, prop: string): string {\n    if (!prop || prop.length === 0) {\n      return null;\n    }\n\n    const properties = prop.trim().split(',');\n    let text: string;\n    let i = 0;\n\n    while (!text && i < properties.length) {\n      const currentProp = properties[i].trim();\n      switch (currentProp) {\n        case 'mail':\n        case 'email':\n          text = getEmailFromGraphEntity(personDetailsInternal);\n          break;\n        default:\n          text = personDetailsInternal[currentProp] as string;\n      }\n      i++;\n    }\n\n    return text;\n  }\n\n  private isLargeAvatar() {\n    return this.avatarSize === 'large' || (this.avatarSize === 'auto' && this.view > ViewType.oneline);\n  }\n\n  private isNoLine() {\n    return this.view < ViewType.oneline;\n  }\n\n  private isOneLine() {\n    return this.view === ViewType.oneline;\n  }\n\n  private isTwoLines() {\n    return this.view === ViewType.twolines;\n  }\n\n  private isThreeLines() {\n    return this.view === ViewType.threelines;\n  }\n\n  private isFourLines() {\n    return this.view === ViewType.fourlines;\n  }\n\n  private isVertical() {\n    return this.verticalLayout;\n  }\n\n  private readonly handleMouseClick = (e: MouseEvent) => {\n    const element = e.target as HTMLElement;\n    // todo: fix for disambiguation\n    if (\n      this.personCardInteraction === PersonCardInteraction.click &&\n      element.tagName !== `${customElementHelper.prefix}-PERSON-CARD`.toUpperCase()\n    ) {\n      this.showPersonCard();\n    }\n  };\n\n  private readonly handleKeyDown = (e: KeyboardEvent) => {\n    // enter activates person-card\n    if (e) {\n      if (e.key === 'Enter') {\n        this.showPersonCard();\n      }\n    }\n  };\n\n  private readonly handleMouseEnter = () => {\n    clearTimeout(this._mouseEnterTimeout);\n    clearTimeout(this._mouseLeaveTimeout);\n    if (this.personCardInteraction !== PersonCardInteraction.hover) {\n      return;\n    }\n    this._mouseEnterTimeout = window.setTimeout(this.showPersonCard, 500);\n  };\n\n  private readonly handleMouseLeave = () => {\n    clearTimeout(this._mouseEnterTimeout);\n    clearTimeout(this._mouseLeaveTimeout);\n    this._mouseLeaveTimeout = window.setTimeout(this.hidePersonCard, 500);\n  };\n\n  /**\n   * hides the person card\n   *\n   * @memberof MgtPerson\n   */\n  public hidePersonCard = () => {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.close();\n    }\n    const personCard =\n      this.querySelector<MgtPersonCard>('.mgt-person-card') || this.renderRoot.querySelector('.mgt-person-card');\n    if (personCard) {\n      personCard.isExpanded = false;\n      personCard.clearHistory();\n    }\n  };\n\n  public showPersonCard = () => {\n    if (!this._personCardShouldRender) {\n      this._personCardShouldRender = true;\n    }\n\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.open();\n    }\n  };\n}\n"]}