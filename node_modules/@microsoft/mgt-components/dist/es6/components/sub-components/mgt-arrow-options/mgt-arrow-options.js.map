{"version":3,"file":"mgt-arrow-options.js","sourceRoot":"src/","sources":["components/sub-components/mgt-arrow-options/mgt-arrow-options.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { MgtBaseComponent, customElement } from '@microsoft/mgt-element';\nimport { styles } from './mgt-arrow-options-css';\nimport { registerFluentComponents } from '../../../utils/FluentComponents';\nimport { fluentMenu, fluentMenuItem, fluentButton } from '@fluentui/web-components';\nregisterFluentComponents(fluentMenu, fluentMenuItem, fluentButton);\n\n/*\n  Ok, the name here deserves a bit of explanation,\n  This component originally had a built-in arrow icon,\n  The problem came when you wanted to use a different symbol,\n  So the arrow was removed, but the name was already set everywhere.\n  - benotter\n */\n\n/**\n * Custom Component used to handle an arrow rendering for TaskGroups utilized in the task component.\n *\n * @cssprop --arrow-options-left {Length} The distance of the dropdown menu from the left in absolute position. Default is 0.\n * @cssprop --arrow-options-button-background-color {Color} The background color of the arrow options button.\n * @cssprop --arrow-options-button-font-size {Length} The font size of the button text. Default is large.\n * @cssprop --arrow-options-button-font-weight {Length} The font weight of the button text. Default is 600.\n * @cssprop --arrow-options-button-font-color {Color} The font color of the text in the button.\n *\n * @export MgtArrowOptions\n * @class MgtArrowOptions\n * @extends {MgtBaseComponent}\n */\n@customElement('arrow-options')\nexport class MgtArrowOptions extends MgtBaseComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * user the `css` tag function.\n   */\n  public static get styles() {\n    return styles;\n  }\n\n  /**\n   * Determines if header menu is rendered or hidden.\n   *\n   * @type {boolean}\n   * @memberof MgtArrowOptions\n   */\n  @property({ type: Boolean }) public open: boolean;\n\n  /**\n   * Title of chosen TaskGroup.\n   *\n   * @type {string}\n   * @memberof MgtArrowOptions\n   */\n  @property({ type: String }) public value: string;\n\n  /**\n   * Menu options to be rendered with an attached UIEvent handler for expansion of details\n   *\n   * @type {object}\n   * @memberof MgtArrowOptions\n   */\n  @property({ type: Object }) public options: Record<string, (e: UIEvent) => void>;\n\n  private readonly _clickHandler: (e: UIEvent) => void;\n\n  constructor() {\n    super();\n    this.value = '';\n    this.options = {};\n    this._clickHandler = () => (this.open = false);\n    window.addEventListener('onblur', () => (this.open = false));\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('click', this._clickHandler);\n  }\n\n  public disconnectedCallback() {\n    window.removeEventListener('click', this._clickHandler);\n    super.disconnectedCallback();\n  }\n\n  /**\n   * Handles clicking for header menu, utilizing boolean switch open\n   *\n   * @param {MouseEvent} e attaches to Header to open menu\n   * @memberof MgtArrowOptions\n   */\n  public onHeaderClick = (e: MouseEvent) => {\n    const keys = Object.keys(this.options);\n    if (keys.length > 1) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.open = !this.open;\n    }\n  };\n\n  /**\n   * Handles key down presses done on the header element.\n   *\n   * @param {KeyboardEvent} e\n   */\n  private readonly onHeaderKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      e.stopPropagation();\n      this.open = !this.open;\n\n      // Manually adding the 'open' class to display the menu because\n      // by the time I set the first element's focus, the classes are not\n      // updated and that has no effect. You can't set focus on elements\n      // that have no display.\n      const fluentMenuEl: HTMLElement = this.renderRoot.querySelector('fluent-menu');\n      if (fluentMenuEl) {\n        fluentMenuEl.classList.remove('closed');\n        fluentMenuEl.classList.add('open');\n      }\n\n      const header: HTMLButtonElement = e.target as HTMLButtonElement;\n      if (header) {\n        const firstMenuItem: HTMLElement = this.renderRoot.querySelector(\"fluent-menu-item[tabindex='0']\");\n        if (firstMenuItem) {\n          header.blur();\n          firstMenuItem.focus();\n        }\n      }\n    }\n  };\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  public render() {\n    return html`\n      <fluent-button\n        class=\"header\"\n        @click=${this.onHeaderClick}\n        @keydown=${this.onHeaderKeyDown}\n        appearance=\"lightweight\">\n          ${this.value}\n      </fluent-button>\n      <fluent-menu\n        class=${classMap({ menu: true, open: this.open, closed: !this.open })}>\n          ${this.getMenuOptions()}\n      </fluent-menu>`;\n  }\n\n  private getMenuOptions() {\n    const keys = Object.keys(this.options);\n\n    return keys.map((opt: string) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      const clickFn = (e: MouseEvent) => {\n        this.open = false;\n        this.options[opt](e);\n      };\n\n      const keyDownFn = (e: KeyboardEvent) => {\n        const header: HTMLButtonElement = this.renderRoot.querySelector<HTMLButtonElement>('.header');\n        if (e.key === 'Enter') {\n          this.open = false;\n          this.options[opt](e);\n          header.focus();\n        } else if (e.key === 'Tab') {\n          this.open = false;\n        } else if (e.key === 'Escape') {\n          this.open = false;\n          if (header) {\n            header.focus();\n          }\n        }\n      };\n\n      return html`\n          <fluent-menu-item\n            @click=${clickFn}\n            @keydown=${keyDownFn}>\n              ${opt}\n          </fluent-menu-item>`;\n    });\n  }\n}\n"]}