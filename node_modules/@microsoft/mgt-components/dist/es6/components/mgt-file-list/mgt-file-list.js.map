{"version":3,"file":"mgt-file-list.js","sourceRoot":"src/","sources":["components/mgt-file-list/mgt-file-list.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  arraysAreEqual,\n  GraphPageIterator,\n  Providers,\n  ProviderState,\n  customElement,\n  mgtHtml,\n  MgtTemplatedComponent\n} from '@microsoft/mgt-element';\nimport { DriveItem } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport {\n  clearFilesCache,\n  fetchNextAndCacheForFilesPageIterator,\n  getDriveFilesByIdIterator,\n  getDriveFilesByPathIterator,\n  getFilesByIdIterator,\n  getFilesByListQueryIterator,\n  getFilesByPathIterator,\n  getFilesByQueries,\n  getFilesIterator,\n  getGroupFilesByIdIterator,\n  getGroupFilesByPathIterator,\n  getMyInsightsFiles,\n  getSiteFilesByIdIterator,\n  getSiteFilesByPathIterator,\n  getUserFilesByIdIterator,\n  getUserFilesByPathIterator,\n  getUserInsightsFiles\n} from '../../graph/graph.files';\nimport './mgt-file-upload/mgt-file-upload';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { OfficeGraphInsightString, ViewType } from '../../graph/types';\nimport { styles } from './mgt-file-list-css';\nimport { strings } from './strings';\nimport { MgtFile } from '../mgt-file/mgt-file';\nimport { MgtFileUploadConfig } from './mgt-file-upload/mgt-file-upload';\n\nimport { fluentProgressRing } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { CardSection } from '../BasePersonCardSection';\n\nregisterFluentComponents(fluentProgressRing);\n\n/**\n * The File List component displays a list of multiple folders and files by\n * using the file/folder name, an icon, and other properties specified by the developer.\n * This component uses the mgt-file component.\n *\n * @export\n * @class MgtFileList\n *\n * @fires {CustomEvent<MicrosoftGraph.DriveItem>} itemClick - Fired when a user clicks on a file.\n * it returns the file (DriveItem) details.\n *\n * NOTE: This component also allows customizing the tokens from mgt-file and mgt-file-upload components.\n * @cssprop --file-list-background-color - {Color} the background color of the component.\n * @cssprop --file-list-box-shadow - {String} the box-shadow syle of the component. Default value is --elevation-shadow-card-rest.\n * @cssprop --file-list-border-radius - {Length} the file list box border radius. Default value is 8px.\n * @cssprop --file-list-border - {String} the file list border style. Default value is none.\n * @cssprop --file-list-padding -{String} the file list padding.  Default value is 0px.\n * @cssprop --file-list-margin -{String} the file list margin. Default value is 0px.\n * @cssprop --show-more-button-background-color - {Color} the \"show more\" button background color.\n * @cssprop --show-more-button-background-color--hover - {Color} the \"show more\" button background color on hover.\n * @cssprop --show-more-button-font-size - {String} the \"show more\" text font size. Default value is 12px.\n * @cssprop --show-more-button-padding - {String} the \"show more\" button padding. Default value is 0px.\n * @cssprop --show-more-button-border-bottom-right-radius - {String} the \"show more\" button bottom right border radius. Default value is 8px.\n * @cssprop --show-more-button-border-bottom-left-radius - {String} the \"show more\" button bottom left border radius. Default value is 8px;\n * @cssprop --progress-ring-size -{String} Progress ring height and width. Default value is 24px.\n */\n\n@customElement('file-list')\nexport class MgtFileList extends MgtTemplatedComponent implements CardSection {\n  @state() private _isCompact = false;\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings(): Record<string, string> {\n    return strings;\n  }\n\n  /**\n   * allows developer to provide query for a file list\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'file-list-query'\n  })\n  public get fileListQuery(): string {\n    return this._fileListQuery;\n  }\n  public set fileListQuery(value: string) {\n    if (value === this._fileListQuery) {\n      return;\n    }\n\n    this._fileListQuery = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  public get displayName(): string {\n    return this.strings.filesSectionTitle;\n  }\n\n  /**\n   * The title for the card when rendered as a card full.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  public get cardTitle(): string {\n    return this.strings.filesSectionTitle;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Files);\n  }\n\n  /**\n   * allows developer to provide an array of file queries\n   *\n   * @type {string[]}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'file-queries',\n    converter: (value, _type) => {\n      if (value) {\n        return value.split(',').map(v => v.trim());\n      } else {\n        return null;\n      }\n    }\n  })\n  public get fileQueries(): string[] {\n    return this._fileQueries;\n  }\n  public set fileQueries(value: string[]) {\n    if (arraysAreEqual(this._fileQueries, value)) {\n      return;\n    }\n\n    this._fileQueries = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * allows developer to provide an array of files\n   *\n   * @type {MicrosoftGraph.DriveItem[]}\n   * @memberof MgtFileList\n   */\n  @property({ type: Object })\n  public files: DriveItem[];\n\n  /**\n   * allows developer to provide site id for a file\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'site-id'\n  })\n  public get siteId(): string {\n    return this._siteId;\n  }\n  public set siteId(value: string) {\n    if (value === this._siteId) {\n      return;\n    }\n\n    this._siteId = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * allows developer to provide drive id for a file\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'drive-id'\n  })\n  public get driveId(): string {\n    return this._driveId;\n  }\n  public set driveId(value: string) {\n    if (value === this._driveId) {\n      return;\n    }\n\n    this._driveId = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * allows developer to provide group id for a file\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'group-id'\n  })\n  public get groupId(): string {\n    return this._groupId;\n  }\n  public set groupId(value: string) {\n    if (value === this._groupId) {\n      return;\n    }\n\n    this._groupId = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * allows developer to provide item id for a file\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'item-id'\n  })\n  public get itemId(): string {\n    return this._itemId;\n  }\n  public set itemId(value: string) {\n    if (value === this._itemId) {\n      return;\n    }\n\n    this._itemId = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * allows developer to provide item path for a file\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'item-path'\n  })\n  public get itemPath(): string {\n    return this._itemPath;\n  }\n  public set itemPath(value: string) {\n    if (value === this._itemPath) {\n      return;\n    }\n\n    this._itemPath = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * allows developer to provide user id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'user-id'\n  })\n  public get userId(): string {\n    return this._userId;\n  }\n  public set userId(value: string) {\n    if (value === this._userId) {\n      return;\n    }\n\n    this._userId = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * allows developer to provide insight type for a file\n   * can be trending, used, or shared\n   *\n   * @type {OfficeGraphInsightString}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'insight-type'\n  })\n  public get insightType(): OfficeGraphInsightString {\n    return this._insightType;\n  }\n  public set insightType(value: OfficeGraphInsightString) {\n    if (value === this._insightType) {\n      return;\n    }\n\n    this._insightType = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * Sets what data to be rendered (file icon only, oneLine, twoLines threeLines).\n   * Default is 'threeLines'.\n   *\n   * @type {ViewType}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'item-view',\n    converter: value => {\n      if (!value || value.length === 0) {\n        return ViewType.threelines;\n      }\n\n      value = value.toLowerCase();\n\n      if (typeof ViewType[value] === 'undefined') {\n        return ViewType.threelines;\n      } else {\n        return ViewType[value] as ViewType;\n      }\n    }\n  })\n  public itemView: ViewType;\n\n  /**\n   * allows developer to provide file type to filter the list\n   * can be docx\n   *\n   * @type {string[]}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'file-extensions',\n    converter: (value, _type) => {\n      return value.split(',').map(v => v.trim());\n    }\n  })\n  public get fileExtensions(): string[] {\n    return this._fileExtensions;\n  }\n  public set fileExtensions(value: string[]) {\n    if (arraysAreEqual(this._fileExtensions, value)) {\n      return;\n    }\n\n    this._fileExtensions = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * A number value to indicate the number of more files to load when show more button is clicked\n   *\n   * @type {number}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'page-size',\n    type: Number\n  })\n  public get pageSize(): number {\n    return this._pageSize;\n  }\n  public set pageSize(value: number) {\n    if (value === this._pageSize) {\n      return;\n    }\n\n    this._pageSize = value;\n    void this.requestStateUpdate(true);\n  }\n\n  @property({\n    attribute: 'disable-open-on-click',\n    type: Boolean\n  })\n  public disableOpenOnClick = false;\n  /**\n   * A boolean value indication if 'show-more' button should be disabled\n   *\n   * @type {boolean}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'hide-more-files-button',\n    type: Boolean\n  })\n  public hideMoreFilesButton: boolean;\n\n  /**\n   * A number value indication for file size upload (KB)\n   *\n   * @type {number}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'max-file-size',\n    type: Number\n  })\n  public get maxFileSize(): number {\n    return this._maxFileSize;\n  }\n  public set maxFileSize(value: number) {\n    if (value === this._maxFileSize) {\n      return;\n    }\n\n    this._maxFileSize = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * A boolean value indication if file upload extension should be enable or disabled\n   *\n   * @type {boolean}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'enable-file-upload',\n    type: Boolean\n  })\n  public enableFileUpload: boolean;\n\n  /**\n   * A number value to indicate the max number allowed of files to upload.\n   *\n   * @type {number}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'max-upload-file',\n    type: Number\n  })\n  public get maxUploadFile(): number {\n    return this._maxUploadFile;\n  }\n  public set maxUploadFile(value: number) {\n    if (value === this._maxUploadFile) {\n      return;\n    }\n\n    this._maxUploadFile = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * A Array of file extensions to be excluded from file upload.\n   *\n   * @type {string[]}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'excluded-file-extensions',\n    converter: (value, _type) => {\n      return value.split(',').map(v => v.trim());\n    }\n  })\n  public get excludedFileExtensions(): string[] {\n    return this._excludedFileExtensions;\n  }\n  public set excludedFileExtensions(value: string[]) {\n    if (arraysAreEqual(this._excludedFileExtensions, value)) {\n      return;\n    }\n\n    this._excludedFileExtensions = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * Get the scopes required for file list\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtFileList\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set([...MgtFile.requiredScopes])];\n  }\n\n  private _fileListQuery: string;\n  private _fileQueries: string[];\n  private _siteId: string;\n  private _itemId: string;\n  private _driveId: string;\n  private _itemPath: string;\n  private _groupId: string;\n  private _insightType: OfficeGraphInsightString;\n  private _fileExtensions: string[];\n  private _pageSize: number;\n  private _excludedFileExtensions: string[];\n  private _maxUploadFile: number;\n  private _maxFileSize: number;\n  private _userId: string;\n  private _preloadedFiles: DriveItem[];\n  private pageIterator: GraphPageIterator<DriveItem>;\n  // tracking user arrow key input of selection for accessibility purpose\n  private _focusedItemIndex = -1;\n\n  @state() private _isLoadingMore: boolean;\n\n  constructor() {\n    super();\n\n    this.pageSize = 10;\n    this.itemView = ViewType.twolines;\n    this.maxUploadFile = 10;\n    this.enableFileUpload = false;\n    this._preloadedFiles = [];\n  }\n\n  /**\n   * Override requestStateUpdate to include clearstate.\n   *\n   * @memberof MgtFileList\n   */\n  protected requestStateUpdate(force?: boolean) {\n    this.clearState();\n    return super.requestStateUpdate(force);\n  }\n\n  /**\n   * Reset state\n   *\n   * @memberof MgtFileList\n   */\n  protected clearState(): void {\n    super.clearState();\n    this.files = null;\n  }\n\n  /**\n   * Set the section to compact view mode\n   *\n   * @returns\n   * @memberof BasePersonCardSection\n   */\n  public asCompactView() {\n    this._isCompact = true;\n    return this;\n  }\n\n  /**\n   * Set the section to full view mode\n   *\n   * @returns\n   * @memberof BasePersonCardSection\n   */\n  public asFullView() {\n    this._isCompact = false;\n    return this;\n  }\n\n  /**\n   * Render the file list\n   *\n   * @return {*}\n   * @memberof MgtFileList\n   */\n  public render() {\n    if (!this.files && this.isLoadingState) {\n      return this.renderLoading();\n    }\n\n    if (!this.files || this.files.length === 0) {\n      return this.renderNoData();\n    }\n\n    return this._isCompact ? this.renderCompactView() : this.renderFullView();\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  public renderCompactView(): TemplateResult {\n    const files = this.files.slice(0, 3);\n\n    return this.renderFiles(files);\n  }\n\n  /**\n   * Render the full view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  public renderFullView(): TemplateResult {\n    return this.renderTemplate('default', { files: this.files }) || this.renderFiles(this.files);\n  }\n\n  /**\n   * Render the loading state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  protected renderLoading(): TemplateResult {\n    return this.renderTemplate('loading', null) || html``;\n  }\n\n  /**\n   * Render the state when no data is available\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  protected renderNoData(): TemplateResult {\n    return (\n      this.renderTemplate('no-data', null) ||\n      (this.enableFileUpload === true && Providers.globalProvider !== undefined\n        ? html`\n            <div class=\"file-list-wrapper\" dir=${this.direction}>\n              ${this.renderFileUpload()}\n            </div>`\n        : html``)\n    );\n  }\n\n  /**\n   * Render the list of files.\n   *\n   * @protected\n   * @param {*} files\n   * @returns {TemplateResult}\n   * @memberof mgtFileList\n   */\n  protected renderFiles(files: DriveItem[]): TemplateResult {\n    return html`\n      <div id=\"file-list-wrapper\" class=\"file-list-wrapper\" dir=${this.direction}>\n        ${this.enableFileUpload ? this.renderFileUpload() : null}\n        <ul\n          id=\"file-list\"\n          class=\"file-list\"\n        >\n          <li\n            tabindex=\"0\"\n            class=\"file-item\"\n            @keydown=\"${this.onFileListKeyDown}\"\n            @focus=\"${this.onFocusFirstItem}\"\n            @click=${(e: UIEvent) => this.handleItemSelect(files[0], e)}>\n            ${this.renderFile(files[0])}\n          </li>\n          ${repeat(\n            files.slice(1),\n            f => f.id,\n            f => html`\n              <li\n                class=\"file-item\"\n                @keydown=\"${this.onFileListKeyDown}\"\n                @click=${(e: UIEvent) => this.handleItemSelect(f, e)}>\n                ${this.renderFile(f)}\n              </li>\n            `\n          )}\n        </ul>\n        ${\n          !this.hideMoreFilesButton &&\n          this.pageIterator &&\n          (this.pageIterator.hasNext || this._preloadedFiles.length) &&\n          !this._isCompact\n            ? this.renderMoreFileButton()\n            : null\n        }\n      </div>\n    `;\n  }\n\n  /**\n   * Render an individual file.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof mgtFileList\n   */\n  protected renderFile(file: DriveItem): TemplateResult {\n    const view = this.itemView;\n    return (\n      this.renderTemplate('file', { file }, file.id) ||\n      mgtHtml`\n        <mgt-file class=\"mgt-file-item\" .fileDetails=${file} .view=${view}></mgt-file>\n      `\n    );\n  }\n\n  /**\n   * Render the button when clicked will show more files.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  protected renderMoreFileButton(): TemplateResult {\n    if (this._isLoadingMore) {\n      return html`\n        <fluent-progress-ring role=\"progressbar\" viewBox=\"0 0 8 8\" class=\"progress-ring\"></fluent-progress-ring>\n      `;\n    } else {\n      return html`\n        <fluent-button\n          appearance=\"stealth\"\n          id=\"show-more\"\n          class=\"show-more\"\n          @click=${() => this.renderNextPage()}\n        >\n          <span class=\"show-more-text\">${this.strings.showMoreSubtitle}</span>\n        </fluent-button>`;\n    }\n  }\n\n  /**\n   * Render MgtFileUpload sub component\n   *\n   * @returns\n   */\n  protected renderFileUpload(): TemplateResult {\n    const fileUploadConfig: MgtFileUploadConfig = {\n      graph: Providers.globalProvider.graph.forComponent(this),\n      driveId: this.driveId,\n      excludedFileExtensions: this.excludedFileExtensions,\n      groupId: this.groupId,\n      itemId: this.itemId,\n      itemPath: this.itemPath,\n      userId: this.userId,\n      siteId: this.siteId,\n      maxFileSize: this.maxFileSize,\n      maxUploadFile: this.maxUploadFile\n    };\n    return mgtHtml`\n        <mgt-file-upload .fileUploadList=${fileUploadConfig} ></mgt-file-upload>\n      `;\n  }\n\n  /**\n   * Handles setting the focusedItemIndex to 0 when you focus on the first item\n   * in the file list.\n   *\n   * @returns void\n   */\n  private readonly onFocusFirstItem = () => (this._focusedItemIndex = 0);\n\n  /**\n   * Handle accessibility keyboard keydown events (arrow up, arrow down, enter, tab) on file list\n   *\n   * @param event\n   */\n  private readonly onFileListKeyDown = (event: KeyboardEvent): void => {\n    const fileList = this.renderRoot.querySelector('.file-list');\n    let focusedItem: HTMLElement;\n\n    if (!fileList?.children.length) {\n      return;\n    }\n\n    if (event.code === 'ArrowUp' || event.code === 'ArrowDown') {\n      if (event.code === 'ArrowUp') {\n        if (this._focusedItemIndex === -1) {\n          this._focusedItemIndex = fileList.children.length;\n        }\n        this._focusedItemIndex = (this._focusedItemIndex - 1 + fileList.children.length) % fileList.children.length;\n      }\n      if (event.code === 'ArrowDown') {\n        this._focusedItemIndex = (this._focusedItemIndex + 1) % fileList.children.length;\n      }\n\n      focusedItem = fileList.children[this._focusedItemIndex] as HTMLElement;\n      this.updateItemBackgroundColor(fileList, focusedItem, 'focused');\n    }\n\n    if (event.code === 'Enter' || event.code === 'Space') {\n      focusedItem = fileList.children[this._focusedItemIndex] as HTMLElement;\n\n      const file = focusedItem.children[0] as MgtFile;\n      event.preventDefault();\n      this.fireCustomEvent('itemClick', file.fileDetails);\n      this.handleFileClick(file.fileDetails);\n\n      this.updateItemBackgroundColor(fileList, focusedItem, 'selected');\n    }\n\n    if (event.code === 'Tab') {\n      focusedItem = fileList.children[this._focusedItemIndex] as HTMLElement;\n    }\n  };\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtFileList\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state === ProviderState.Loading) {\n      return;\n    }\n\n    if (provider.state === ProviderState.SignedOut) {\n      this.files = null;\n      return;\n    }\n    const graph = provider.graph.forComponent(this);\n    let files: DriveItem[];\n    let pageIterator: GraphPageIterator<DriveItem>;\n\n    const getFromMyDrive = !this.driveId && !this.siteId && !this.groupId && !this.userId;\n\n    // combinations of these attributes must be provided in order for the component to know which endpoint to call to request files\n    // not supplying enough for these combinations will get a null file result\n    if (\n      (this.driveId && !this.itemId && !this.itemPath) ||\n      (this.groupId && !this.itemId && !this.itemPath) ||\n      (this.siteId && !this.itemId && !this.itemPath) ||\n      (this.userId && !this.insightType && !this.itemId && !this.itemPath)\n    ) {\n      this.files = null;\n    }\n\n    if (!this.files) {\n      if (this.fileListQuery) {\n        pageIterator = await getFilesByListQueryIterator(graph, this.fileListQuery, this.pageSize);\n      } else if (this.fileQueries) {\n        files = await getFilesByQueries(graph, this.fileQueries);\n      } else if (getFromMyDrive) {\n        if (this.itemId) {\n          pageIterator = await getFilesByIdIterator(graph, this.itemId, this.pageSize);\n        } else if (this.itemPath) {\n          pageIterator = await getFilesByPathIterator(graph, this.itemPath, this.pageSize);\n        } else if (this.insightType) {\n          files = await getMyInsightsFiles(graph, this.insightType);\n        } else {\n          pageIterator = await getFilesIterator(graph, this.pageSize);\n        }\n      } else if (this.driveId) {\n        if (this.itemId) {\n          pageIterator = await getDriveFilesByIdIterator(graph, this.driveId, this.itemId, this.pageSize);\n        } else if (this.itemPath) {\n          pageIterator = await getDriveFilesByPathIterator(graph, this.driveId, this.itemPath, this.pageSize);\n        }\n      } else if (this.groupId) {\n        if (this.itemId) {\n          pageIterator = await getGroupFilesByIdIterator(graph, this.groupId, this.itemId, this.pageSize);\n        } else if (this.itemPath) {\n          pageIterator = await getGroupFilesByPathIterator(graph, this.groupId, this.itemPath, this.pageSize);\n        }\n      } else if (this.siteId) {\n        if (this.itemId) {\n          pageIterator = await getSiteFilesByIdIterator(graph, this.siteId, this.itemId, this.pageSize);\n        } else if (this.itemPath) {\n          pageIterator = await getSiteFilesByPathIterator(graph, this.siteId, this.itemPath, this.pageSize);\n        }\n      } else if (this.userId) {\n        if (this.itemId) {\n          pageIterator = await getUserFilesByIdIterator(graph, this.userId, this.itemId, this.pageSize);\n        } else if (this.itemPath) {\n          pageIterator = await getUserFilesByPathIterator(graph, this.userId, this.itemPath, this.pageSize);\n        } else if (this.insightType) {\n          files = await getUserInsightsFiles(graph, this.userId, this.insightType);\n        }\n      }\n\n      if (pageIterator) {\n        this.pageIterator = pageIterator;\n        this._preloadedFiles = [...this.pageIterator.value];\n\n        // handle when cached file length is greater than page size\n        if (this._preloadedFiles.length >= this.pageSize) {\n          files = this._preloadedFiles.splice(0, this.pageSize);\n        } else {\n          files = this._preloadedFiles.splice(0, this._preloadedFiles.length);\n        }\n      }\n\n      // filter files when extensions are provided\n      let filteredByFileExtension: DriveItem[];\n      if (this.fileExtensions && this.fileExtensions !== null) {\n        // retrive all pages before filtering\n        if (this.pageIterator?.value) {\n          while (this.pageIterator.hasNext) {\n            await fetchNextAndCacheForFilesPageIterator(this.pageIterator);\n          }\n          files = this.pageIterator.value;\n          this._preloadedFiles = [];\n        }\n        filteredByFileExtension = files.filter(file => {\n          for (const e of this.fileExtensions) {\n            if (e === this.getFileExtension(file.name)) {\n              return file;\n            }\n          }\n        });\n      }\n\n      if (filteredByFileExtension?.length >= 0) {\n        this.files = filteredByFileExtension;\n        if (this.pageSize) {\n          files = this.files.splice(0, this.pageSize);\n          this.files = files;\n        }\n      } else {\n        this.files = files;\n      }\n    }\n  }\n\n  /**\n   * Handle the click event on an item.\n   *\n   * @protected\n   * @memberof MgtFileList\n   */\n  protected handleItemSelect(item: DriveItem, event: UIEvent): void {\n    this.handleFileClick(item);\n    this.fireCustomEvent('itemClick', item);\n\n    // handle accessibility updates when item clicked\n    if (event) {\n      const fileList = this.renderRoot.querySelector('.file-list');\n\n      // get index of the focused item\n      const nodes = Array.from(fileList.children);\n      const li = (event.target as HTMLElement).closest('li');\n      const index = nodes.indexOf(li);\n      this._focusedItemIndex = index;\n      const clickedItem = fileList.children[this._focusedItemIndex] as HTMLElement;\n      this.updateItemBackgroundColor(fileList, clickedItem, 'selected');\n    }\n  }\n\n  /**\n   * Handle the click event on button to show next page.\n   *\n   * @protected\n   * @memberof MgtFileList\n   */\n  protected async renderNextPage() {\n    // render next page from cache if exists, or else use iterator\n    if (this._preloadedFiles.length > 0) {\n      this.files = [\n        ...this.files,\n        ...this._preloadedFiles.splice(0, Math.min(this.pageSize, this._preloadedFiles.length))\n      ];\n    } else {\n      if (this.pageIterator.hasNext) {\n        this._isLoadingMore = true;\n        const root = this.renderRoot.querySelector('#file-list-wrapper');\n        if (root?.animate) {\n          // play back\n          root.animate(\n            [\n              {\n                height: 'auto',\n                transformOrigin: 'top left'\n              },\n              {\n                height: 'auto',\n                transformOrigin: 'top left'\n              }\n            ],\n            {\n              duration: 1000,\n              easing: 'ease-in-out',\n              fill: 'both'\n            }\n          );\n        }\n        await fetchNextAndCacheForFilesPageIterator(this.pageIterator);\n        this._isLoadingMore = false;\n        this.files = this.pageIterator.value;\n      }\n    }\n\n    this.requestUpdate();\n  }\n\n  private handleFileClick(file: DriveItem) {\n    if (file?.webUrl && !this.disableOpenOnClick) {\n      window.open(file.webUrl, '_blank', 'noreferrer');\n    }\n  }\n\n  /**\n   * Get file extension string from file name\n   *\n   * @param name file name\n   * @returns {string} file extension\n   */\n  private getFileExtension(name: string) {\n    const re = /(?:\\.([^.]+))?$/;\n    const fileExtension = re.exec(name)[1] || '';\n\n    return fileExtension;\n  }\n\n  /**\n   * Handle remove and add css class on accessibility keyboard select and focus\n   *\n   * @param fileList HTML element\n   * @param focusedItem HTML element\n   * @param className background class to be applied\n   */\n  private updateItemBackgroundColor(fileList: Element, focusedItem: HTMLElement, className: string) {\n    // reset background color and remove tabindex\n    for (const node of fileList.children) {\n      node.classList.remove(className);\n      node.removeAttribute('tabindex');\n    }\n\n    // set focused item background color\n    if (focusedItem) {\n      focusedItem.classList.add(className);\n      focusedItem.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });\n      focusedItem.setAttribute('tabindex', '0');\n      focusedItem.focus();\n    }\n\n    // remove selected classes\n    for (const node of fileList.children) {\n      node.classList.remove('selected');\n    }\n  }\n\n  /**\n   * Handle reload of File List and condition to clear cache\n   *\n   * @param clearCache boolean, if true clear cache\n   */\n  public reload(clearCache = false) {\n    if (clearCache) {\n      // clear cache File List\n      void clearFilesCache();\n    }\n\n    void this.requestStateUpdate(true);\n  }\n}\n"]}