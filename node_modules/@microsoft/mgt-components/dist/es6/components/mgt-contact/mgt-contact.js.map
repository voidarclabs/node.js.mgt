{"version":3,"file":"mgt-contact.js","sourceRoot":"src/","sources":["components/mgt-contact/mgt-contact.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { User } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { TeamsHelper, customElement } from '@microsoft/mgt-element';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { styles } from './mgt-contact-css';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { strings } from './strings';\n\n/**\n * Represents a contact part and its metadata\n *\n * @interface IContactPart\n */\ninterface IContactPart {\n  icon: TemplateResult;\n  title: string;\n  value?: string;\n  onClick?: (e: Event) => void;\n  showCompact: boolean;\n}\n\ntype Protocol = 'mailto:' | 'tel:';\n\n/**\n * The contact details subsection of the person card\n *\n * @export\n * @class MgtContact\n * @extends {MgtTemplatedComponent}\n */\n@customElement('contact')\n// @customElement('mgt-contact')\nexport class MgtContact extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Returns true if the component has data it can render\n   *\n   * @readonly\n   * @abstract\n   * @type {boolean}\n   * @memberof BasePersonCardSection\n   */\n  public get hasData(): boolean {\n    if (!this._contactParts) {\n      return false;\n    }\n\n    const availableParts: IContactPart[] = Object.values(this._contactParts).filter((p: IContactPart) => !!p.value);\n\n    return !!availableParts.length;\n  }\n\n  private readonly _person?: User;\n\n  private readonly _contactParts: Record<string, IContactPart> = {\n    email: {\n      icon: getSvg(SvgIcon.Email),\n      onClick: () => this.sendEmail(getEmailFromGraphEntity(this._person)),\n      showCompact: true,\n      title: this.strings.emailTitle\n    },\n    chat: {\n      icon: getSvg(SvgIcon.Chat),\n      onClick: () => this.sendChat(this._person?.userPrincipalName),\n      showCompact: false,\n      title: this.strings.chatTitle\n    },\n    businessPhone: {\n      icon: getSvg(SvgIcon.Phone),\n      onClick: () => this.sendCall(this._person?.businessPhones?.length > 0 ? this._person.businessPhones[0] : null),\n      showCompact: true,\n      title: this.strings.businessPhoneTitle\n    },\n    cellPhone: {\n      icon: getSvg(SvgIcon.CellPhone),\n      onClick: () => this.sendCall(this._person?.mobilePhone),\n      showCompact: true,\n      title: this.strings.cellPhoneTitle\n    },\n    department: {\n      icon: getSvg(SvgIcon.Department),\n      showCompact: false,\n      title: this.strings.departmentTitle\n    },\n    title: {\n      icon: getSvg(SvgIcon.Person),\n      showCompact: false,\n      title: this.strings.titleTitle\n    },\n    officeLocation: {\n      icon: getSvg(SvgIcon.OfficeLocation),\n      showCompact: true,\n      title: this.strings.officeLocationTitle\n    }\n  };\n\n  public constructor(person: User) {\n    super();\n    this._person = person;\n\n    this._contactParts.email.value = getEmailFromGraphEntity(this._person);\n    this._contactParts.chat.value = this._person.userPrincipalName;\n    this._contactParts.cellPhone.value = this._person.mobilePhone;\n    this._contactParts.department.value = this._person.department;\n    this._contactParts.title.value = this._person.jobTitle;\n    this._contactParts.officeLocation.value = this._person.officeLocation;\n\n    if (this._person.businessPhones?.length) {\n      this._contactParts.businessPhone.value = this._person.businessPhones[0];\n    }\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtContact\n   */\n  public get displayName(): string {\n    return this.strings.contactSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtContact\n   */\n  public get cardTitle(): string {\n    return this.strings.contactSectionTitle;\n  }\n\n  // Defines the skeleton for what contact fields are available and what they do.\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Contact);\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  public clearState() {\n    super.clearState();\n    for (const key of Object.keys(this._contactParts)) {\n      this._contactParts[key].value = null;\n    }\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  protected renderCompactView(): TemplateResult {\n    if (!this.hasData) {\n      return null;\n    }\n\n    const availableParts: IContactPart[] = Object.values(this._contactParts).filter((p: IContactPart) => !!p.value);\n\n    // Filter for compact mode parts with values\n    let compactParts: IContactPart[] = Object.values(availableParts).filter(\n      (p: IContactPart) => !!p.value && p.showCompact\n    );\n\n    if (!compactParts?.length) {\n      compactParts = Object.values(availableParts).slice(0, 2);\n    }\n\n    const contentTemplate = html`\n      ${compactParts.map(p => this.renderContactPart(p))}\n    `;\n\n    return html`\n      <div class=\"root compact\" dir=${this.direction}>\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (this.hasData) {\n      // Filter for parts with values only\n      const availableParts: IContactPart[] = Object.values(this._contactParts).filter((p: IContactPart) => !!p.value);\n      contentTemplate = html`\n        ${availableParts.map(part => this.renderContactPart(part))}\n      `;\n    }\n\n    return html`\n      <div class=\"root\" dir=${this.direction}>\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render a specific contact part\n   *\n   * @protected\n   * @param {IContactPart} part\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  protected renderContactPart(part: IContactPart): TemplateResult {\n    let isPhone = false;\n\n    if (part.title === 'Mobile Phone' || part.title === 'Business Phone') {\n      isPhone = true;\n    }\n\n    const partLinkClasses = {\n      part__link: true,\n      phone: isPhone\n    };\n\n    const valueTemplate = part.onClick\n      ? html`\n          <span class=${classMap(partLinkClasses)} @click=${(e: Event) => part.onClick(e)}>${part.value}</span>\n        `\n      : html`\n          ${part.value}\n        `;\n\n    return html`\n      <div class=\"part\" role=\"button\" @click=${(e: MouseEvent) => this.handlePartClick(e, part.value)} tabindex=\"0\">\n        <div class=\"part__icon\" aria-label=${part.title} title=${part.title}>${part.icon}</div>\n        <div class=\"part__details\">\n          <div class=\"part__title\">${part.title}</div>\n          <div class=\"part__value\" title=${part.title}>${valueTemplate}</div>\n        </div>\n        <div\n          class=\"part__copy\"\n          aria-label=${this.strings.copyToClipboardButton}\n          title=${this.strings.copyToClipboardButton}\n        >\n          ${getSvg(SvgIcon.Copy)}\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Handle the click event for contact parts\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected handlePartClick(e: MouseEvent, value: string): void {\n    if (value) {\n      void navigator.clipboard.writeText(value);\n    }\n  }\n\n  private sendLink(protocol: Protocol, resource: string): void {\n    if (resource) {\n      window.open(`${protocol}${resource}`, '_blank', 'noreferrer');\n    } else {\n      // eslint-disable-next-line no-console\n      console.error(`🦒: Target resource for ${protocol} link was not provided: resource: ${resource}`);\n    }\n  }\n\n  /**\n   * Send a chat message to the user\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected sendChat(upn: string): void {\n    if (!upn) {\n      // eslint-disable-next-line no-console\n      console.error(\"🦒: Can't send chat when upn is not provided\");\n      return;\n    }\n\n    const url = `https://teams.microsoft.com/l/chat/0/0?users=${upn}`;\n    const openWindow = () => window.open(url, '_blank', 'noreferrer');\n\n    if (TeamsHelper.isAvailable) {\n      TeamsHelper.executeDeepLink(url, (status: boolean) => {\n        if (!status) {\n          openWindow();\n        }\n      });\n    } else {\n      openWindow();\n    }\n  }\n\n  /**\n   * Send an email to the user\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected sendEmail(email: string): void {\n    this.sendLink('mailto:', email);\n  }\n\n  /**\n   * Send a call to the user\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected sendCall = (phone: string): void => {\n    this.sendLink('tel:', phone);\n  };\n}\n"]}