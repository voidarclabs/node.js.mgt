{"version":3,"file":"mgt-login.js","sourceRoot":"src/","sources":["components/mgt-login/mgt-login.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { CSSResult, html, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport {\n  Providers,\n  ProviderState,\n  MgtTemplatedComponent,\n  IProviderAccount,\n  mgtHtml,\n  customElement\n} from '@microsoft/mgt-element';\n\nimport { AvatarSize, IDynamicPerson, ViewType } from '../../graph/types';\nimport { MgtFlyout } from '../sub-components/mgt-flyout/mgt-flyout';\nimport { getUserWithPhoto } from '../../graph/graph.userWithPhoto';\nimport { MgtPerson } from '../mgt-person/mgt-person';\nimport { PersonViewType } from '../mgt-person/mgt-person-types';\n\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\n\nimport { styles } from './mgt-login-css';\nimport { strings } from './strings';\n\nimport '../../styles/style-helper';\n\nimport { fluentListbox, fluentProgressRing, fluentButton, fluentCard } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nregisterFluentComponents(fluentListbox, fluentProgressRing, fluentButton, fluentCard);\n\n/**\n * loginViewType describes the enum strings that can be passed in to determine\n * size of the mgt-login control.\n */\nexport type LoginViewType = 'avatar' | 'compact' | 'full';\n\ninterface PersonViewConfig {\n  view: ViewType;\n  avatarSize: AvatarSize;\n}\n\n/**\n * Web component button and flyout control to facilitate Microsoft identity platform authentication\n *\n * @export\n * @class MgtLogin\n * @extends {MgtBaseComponent}\n *\n * @fires {CustomEvent<undefined>} loginInitiated - Fired when login is initiated by the user\n * @fires {CustomEvent<undefined>} loginCompleted - Fired when login completes\n * @fires {CustomEvent<undefined>} loginFailed - Fired when login fails\n * @fires {CustomEvent<undefined>} logoutInitiated - Fired when logout is initiated by the user\n * @fires {CustomEvent<undefined>} logoutCompleted - Fired when logout completed\n *\n * @template signed-in-button-content (dataContext: {personDetails, personImage})\n * @template signed-out-button-content (dataContext: null)\n * @template flyout-commands (dataContext: {handleSignOut})\n * @template flyout-person-details (dataContext: {personDetails, personImage})\n *\n * @cssprop --login-signed-in-background - {String} the background properties of the component when signed in.\n * @cssprop --login-signed-in-hover-background - {String} the background properties of the component when signed in.\n * @cssprop --login-signed-out-button-background - {String} the background properties of the component when signed out.\n * @cssprop --login-signed-out-button-hover-background - {String} the background properties of the component when signed out.\n * @cssprop --login-signed-out-button-text-color - {Color} the background color of the component when signed out.\n * @cssprop --login-button-padding - {Length} the padding of the button. Default is 0px.\n * @cssprop --login-popup-background-color - {Color} the background color of the popup.\n * @cssprop --login-popup-command-button-background-color - {Color} the color of the background to the popup command button.\n * @cssprop --login-popup-padding - {Length} the padding applied to the popup card. Default is 16px.\n * @cssprop --login-add-account-button-text-color - {Color} the color for the text and icon of the add account button.\n * @cssprop --login-add-account-button-background-color - {Color} the color for the background and icon of the add account button.\n * @cssprop --login-add-account-button-hover-background-color - {Color} the color for the background and icon of the add account button on hover.\n * @cssprop --login-command-button-text-color - {Color} the color for the text of the command button.\n * @cssprop --login-command-button-background-color - {Color} the color for the background of the command button.\n * @cssprop --login-command-button-hover-background-color - {Color} the color for the background of the command button on hovering.\n * @cssprop --login-account-item-hover-bg-color - {Color} the background color of the account item on hover.\n * @cssprop --login-flyout-command-text-color - {Color} the color for the text of the flyout command button.\n */\n@customElement('login')\nexport class MgtLogin extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles(): CSSResult[] {\n    return styles;\n  }\n  /**\n   * Returns the object of strings for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected get strings(): Record<string, string> {\n    return strings;\n  }\n\n  /**\n   * Allows developer to use specific user details for login.\n   *\n   * @type {IDynamicPerson}\n   */\n  @property({\n    attribute: 'user-details',\n    type: Object\n  })\n  public userDetails: IDynamicPerson;\n\n  /**\n   * Determines if presence is shown for logged in user\n   * defaults to false\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence = false;\n\n  /**\n   * Determines the view style to apply to the logged in user\n   * options are 'full', 'compact', 'avatar', defaults to 'full'\n   *\n   * @type {LoginViewType}\n   */\n  @property({\n    attribute: 'login-view',\n    type: String\n  })\n  public loginView: LoginViewType = 'full';\n\n  /**\n   * Gets the flyout element\n   *\n   * @protected\n   * @type {MgtFlyout}\n   * @memberof MgtLogin\n   */\n  protected get flyout(): MgtFlyout {\n    return this.renderRoot.querySelector('.flyout');\n  }\n\n  /**\n   * Get the scopes required for login\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtLogin\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set(['user.read', ...MgtPerson.requiredScopes])];\n  }\n\n  /**\n   * Determines if login menu popup should be showing.\n   *\n   * @private\n   * @type {boolean}\n   */\n  @state() private _isFlyoutOpen: boolean;\n\n  /**\n   * The image blob string\n   *\n   * @private\n   * @type {string}\n   * @memberof MgtLogin\n   */\n  private _image: string;\n\n  /**\n   * Suffix for user details key\n   *\n   * @private\n   * @type {string}\n   * @memberof MgtLogin\n   */\n  private get _userDetailsKey() {\n    return '-userDetails';\n  }\n\n  @state() private _arrowKeyLocation = -1;\n\n  constructor() {\n    super();\n    this._isFlyoutOpen = false;\n  }\n\n  /**\n   * Invoked each time the custom element is appended into a document-connected element\n   *\n   * @memberof MgtLogin\n   */\n  public connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('click', e => e.stopPropagation());\n  }\n\n  /**\n   * Initiate login\n   *\n   * @returns {Promise<void>}\n   * @memberof MgtLogin\n   */\n  public async login(): Promise<void> {\n    const provider = Providers.globalProvider;\n    if (!provider.isMultiAccountSupportedAndEnabled && (this.userDetails || !this.fireCustomEvent('loginInitiated'))) {\n      return;\n    }\n    if (provider?.login) {\n      await provider.login();\n\n      if (provider.state === ProviderState.SignedIn) {\n        this.fireCustomEvent('loginCompleted');\n      } else {\n        this.fireCustomEvent('loginFailed');\n      }\n    }\n  }\n\n  /**\n   * Initiate logout\n   *\n   * @returns {Promise<void>}\n   * @memberof MgtLogin\n   */\n  public logout = async (): Promise<void> => {\n    if (!this.fireCustomEvent('logoutInitiated')) {\n      return;\n    }\n\n    const provider = Providers.globalProvider;\n    if (provider?.isMultiAccountSupportedAndEnabled) {\n      localStorage.removeItem(provider.getActiveAccount().id + this._userDetailsKey);\n    }\n    if (provider?.logout) {\n      await provider.logout();\n      this.userDetails = null;\n      if (provider.isMultiAccountSupportedAndEnabled) {\n        localStorage.removeItem(provider.getActiveAccount().id + this._userDetailsKey);\n      }\n      this.hideFlyout();\n      this.fireCustomEvent('logoutCompleted');\n    }\n  };\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   */\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"login-root\">\n        ${this.renderButton()}\n        ${this.renderFlyout()}\n      </div>\n    `;\n  }\n\n  /**\n   * Load state into the component.\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n    if (provider && !this.userDetails) {\n      if (provider.state === ProviderState.SignedIn) {\n        this.userDetails = await getUserWithPhoto(provider.graph.forComponent(this));\n\n        if (this.userDetails.personImage) {\n          this._image = this.userDetails.personImage;\n        }\n\n        if (provider.isMultiAccountSupportedAndEnabled) {\n          localStorage.setItem(\n            Providers.globalProvider.getActiveAccount().id + this._userDetailsKey,\n            JSON.stringify(this.userDetails)\n          );\n        }\n        this.fireCustomEvent('loginCompleted');\n      } else {\n        this.userDetails = null;\n      }\n    }\n  }\n\n  /**\n   * Render the sign in or sign out button.\n   *\n   * @protected\n   * @memberof MgtLogin\n   * @returns {TemplateResult}\n   */\n  protected renderButton(): TemplateResult {\n    const isSignedIn = Providers.globalProvider?.state === ProviderState.SignedIn;\n    const loginClasses = classMap({\n      'signed-in': isSignedIn && Boolean(this.userDetails),\n      'signed-out': !isSignedIn,\n      small: this.loginView === 'avatar'\n    });\n    const appearance = isSignedIn ? 'stealth' : 'neutral';\n    const showSignedInState = isSignedIn && this.userDetails;\n    const buttonContentTemplate = showSignedInState\n      ? this.renderSignedInButtonContent(this.userDetails, this._image)\n      : this.renderSignedOutButtonContent();\n    const expandedState: boolean | undefined = showSignedInState ? this._isFlyoutOpen : undefined;\n    return html`\n      <fluent-button\n        id=\"login-button\"\n        aria-expanded=\"${ifDefined(expandedState)}\"\n        appearance=${appearance}\n        aria-label=\"${ifDefined(isSignedIn ? undefined : this.strings.signInLinkSubtitle)}\"\n        ?disabled=${this.isLoadingState}\n        @click=${this.onClick}\n        class=${loginClasses}>\n          ${buttonContentTemplate}\n      </fluent-button>`;\n  }\n\n  private readonly flyoutOpened = () => {\n    this._isFlyoutOpen = true;\n  };\n  private readonly flyoutClosed = () => {\n    this._isFlyoutOpen = false;\n  };\n\n  /**\n   * Render the details flyout.\n   *\n   * @protected\n   * @memberof MgtLogin\n   * @returns {TemplateResult}\n   */\n  protected renderFlyout(): TemplateResult {\n    return mgtHtml`\n      <mgt-flyout\n        class=\"flyout\"\n        light-dismiss\n        @opened=${this.flyoutOpened}\n        @closed=${this.flyoutClosed}>\n        <fluent-card \n          slot=\"flyout\" \n          tabindex=\"0\" \n          class=\"flyout-card\"\n          @keydown=${this.onUserKeyDown}\n          >\n          ${this.renderFlyoutContent()}\n        </fluent-card>\n      </mgt-flyout>`;\n  }\n\n  /**\n   * Tracks tabbing through the flyout (keydown)\n   */\n  private readonly onUserKeyDown = (e: KeyboardEvent): void => {\n    if (!this.flyout.isOpen) {\n      return;\n    }\n\n    const el = this.renderRoot.querySelector('.popup-content');\n    const focusableEls = el.querySelectorAll('ul, fluent-button');\n    const firstFocusableEl = el.querySelector('#signout-button') || focusableEls[0];\n    const lastFocusableEl =\n      el.querySelector('#signin-different-account-button') || focusableEls[focusableEls.length - 1];\n\n    if (e.key === 'Tab' && e.shiftKey && firstFocusableEl === e.target) {\n      e.preventDefault();\n      (lastFocusableEl as HTMLElement)?.focus();\n    }\n    if (e.key === 'Tab' && !e.shiftKey && lastFocusableEl === e.target) {\n      e.preventDefault();\n      (firstFocusableEl as HTMLElement)?.focus();\n    }\n    if (e.key === 'Escape') {\n      const loginButton = this.renderRoot.querySelector('#login-button');\n      (loginButton as HTMLElement)?.focus();\n    }\n    const fluentCardEl = this.renderRoot.querySelector('fluent-card');\n    if (e.shiftKey && e.key === 'Tab' && e.target === fluentCardEl) {\n      this.hideFlyout();\n    }\n  };\n\n  /**\n   * Render the flyout menu content.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtLogin\n   */\n  protected renderFlyoutContent(): TemplateResult {\n    if (!this.userDetails) {\n      return;\n    }\n    return html`\n       <div class=\"popup\">\n         <div class=\"popup-content\">\n           <div class=\"commands\">\n             ${this.renderFlyoutCommands()}\n           </div>\n           <div class=\"content\">\n             <div class=\"main-profile\">\n               ${this.renderFlyoutPersonDetails(this.userDetails, this._image)}\n             </div>\n             ${this.renderAccounts()}\n           </div>\n           ${this.renderAddAccountContent()}\n         </div>\n       </div>\n     `;\n  }\n\n  private get hasMultipleAccounts(): boolean {\n    return (\n      Providers.globalProvider?.isMultiAccountSupportedAndEnabled &&\n      Providers.globalProvider?.getAllAccounts?.()?.length > 1\n    );\n  }\n\n  private get usesVerticalPersonCard(): boolean {\n    return this.loginView === 'full' || this.hasMultipleAccounts;\n  }\n\n  /**\n   * Render the flyout person details.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtLogin\n   */\n  protected renderFlyoutPersonDetails(personDetails: IDynamicPerson, personImage: string): TemplateResult {\n    const template = this.renderTemplate('flyout-person-details', { personDetails, personImage });\n    return (\n      template ||\n      mgtHtml`\n        <mgt-person\n          .personDetails=${personDetails}\n          .personImage=${personImage}\n          .view=${ViewType.twolines}\n          .line2Property=${'email'}\n          ?vertical-layout=${this.usesVerticalPersonCard}\n          class=\"person\">\n        </mgt-person>`\n    );\n  }\n\n  /**\n   * Render the flyout commands.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtLogin\n   */\n  protected renderFlyoutCommands(): TemplateResult {\n    const template = this.renderTemplate('flyout-commands', { handleSignOut: () => this.logout() });\n    return (\n      template ||\n      html`\n        <fluent-button\n          id=\"signout-button\"\n          appearance=\"stealth\"\n          size=\"medium\"\n          class=\"flyout-command\"\n          @click=${this.logout}\n          aria-label=${this.strings.signOutLinkSubtitle}>\n            ${this.strings.signOutLinkSubtitle}\n        </fluent-button>`\n    );\n  }\n\n  /**\n   * Render the button content.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtLogin\n   */\n  protected renderButtonContent(): TemplateResult {\n    if (this.userDetails) {\n      return this.renderSignedInButtonContent(this.userDetails, this._image);\n    } else {\n      return this.renderSignedOutButtonContent();\n    }\n  }\n\n  /**\n   * Renders the button to allow adding accounts.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderAddAccountContent() {\n    if (Providers.globalProvider.isMultiAccountSupportedAndEnabled) {\n      return html`\n        <div class=\"add-account\">\n          <fluent-button\n            id=\"signin-different-account-button\"\n            appearance=\"stealth\"\n            aria-label=\"${this.strings.signInWithADifferentAccount}\"\n            @click=${() => void this.login()}>\n            <span slot=\"start\"><i>${getSvg(SvgIcon.SelectAccount, 'currentColor')}</i></span>\n            ${this.strings.signInWithADifferentAccount}\n          </fluent-button>\n        </div>`;\n    }\n  }\n\n  private parsePersonDisplayConfiguration(): PersonViewConfig {\n    const displayConfig: PersonViewConfig = { view: ViewType.twolines, avatarSize: 'small' };\n    switch (this.loginView) {\n      case 'avatar':\n        displayConfig.view = ViewType.image;\n        displayConfig.avatarSize = 'small';\n        break;\n      case 'compact':\n        displayConfig.view = ViewType.oneline;\n        displayConfig.avatarSize = 'small';\n        break;\n      case 'full':\n      default:\n        displayConfig.view = ViewType.twolines;\n        displayConfig.avatarSize = 'auto';\n        break;\n    }\n    return displayConfig;\n  }\n\n  /**\n   * Render the button content when the user is signed in.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtLogin\n   */\n  protected renderSignedInButtonContent(personDetails: IDynamicPerson, personImage: string): TemplateResult {\n    const template = this.renderTemplate('signed-in-button-content', { personDetails, personImage });\n    const displayConfig = this.parsePersonDisplayConfiguration();\n    return (\n      template ||\n      mgtHtml`\n        <mgt-person\n          .personDetails=${this.userDetails}\n          .personImage=${this._image}\n          .view=${displayConfig.view}\n          .showPresence=${this.showPresence}\n          .avatarSize=${displayConfig.avatarSize}\n          line2-property=\"email\"\n          class=\"signed-in-person\"\n        ></mgt-person>`\n    );\n  }\n\n  /**\n   * Renders multiple accounts that can be used to sign in.\n   *\n   * @return {TemplateResult}\n   * @memberof MgtLogin\n   */\n  renderAccounts(): TemplateResult {\n    if (\n      Providers.globalProvider.state === ProviderState.SignedIn &&\n      Providers.globalProvider.isMultiAccountSupportedAndEnabled\n    ) {\n      const provider = Providers.globalProvider;\n      const accounts = provider.getAllAccounts();\n\n      if (accounts?.length > 1) {\n        return html`\n          <div id=\"accounts\">\n            <ul\n              tabindex=\"0\"\n              class=\"account-list\"\n              part=\"account-list\"\n              aria-label=\"${this.ariaLabel}\"\n              @keydown=${this.handleAccountListKeyDown}\n            >\n              ${accounts\n                .filter(a => a.id !== provider.getActiveAccount().id)\n                .map(account => {\n                  const details = localStorage.getItem(account.id + this._userDetailsKey);\n                  return mgtHtml`\n                    <li\n                      tabindex=\"-1\"\n                      part=\"account-item\"\n                      class=\"account-item\"\n                      @click=${() => this.setActiveAccount(account)}\n                      @keyup=${(e: KeyboardEvent) => {\n                        if (e.key === 'Enter') this.setActiveAccount(account);\n                      }}\n                    >\n                      <mgt-person\n                        .personDetails=${details ? JSON.parse(details) : null}\n                        .fallbackDetails=${{ displayName: account.name, mail: account.mail }}\n                        .view=${PersonViewType.twolines}\n                        class=\"account\"\n                      ></mgt-person>\n                    </li>`;\n                })}\n            </ul>\n          </div>\n       `;\n      }\n    }\n  }\n\n  private readonly handleAccountListKeyDown = (event: KeyboardEvent) => {\n    const list: HTMLUListElement = this.renderRoot.querySelector('ul.account-list');\n    let item: HTMLLIElement;\n    const listItems: HTMLCollection = list?.children;\n    // Default all tabindex values in li nodes to -1\n    for (const element of listItems) {\n      const el = element as HTMLLIElement;\n      el.setAttribute('tabindex', '-1');\n      el.blur();\n    }\n\n    const childElementCount = list.childElementCount;\n    const keyName = event.key;\n    if (keyName === 'ArrowDown') {\n      this._arrowKeyLocation = (this._arrowKeyLocation + 1 + childElementCount) % childElementCount;\n    } else if (keyName === 'ArrowUp') {\n      this._arrowKeyLocation = (this._arrowKeyLocation - 1 + childElementCount) % childElementCount;\n    } else if (keyName === 'Tab' || keyName === 'Escape') {\n      this._arrowKeyLocation = -1;\n      list.blur();\n      if (keyName === 'Escape') {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      return;\n    }\n\n    if (this._arrowKeyLocation > -1) {\n      item = listItems[this._arrowKeyLocation] as HTMLLIElement;\n      item.setAttribute('tabindex', '1');\n      item.focus();\n    }\n  };\n\n  /**\n   * Set one of the non-active accounts as the active account\n   *\n   * @param {IProviderAccount} account\n   * @memberof MgtLogin\n   */\n  private setActiveAccount(account: IProviderAccount) {\n    Providers.globalProvider.setActiveAccount(account);\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected clearState() {\n    this.userDetails = null;\n    this._image = null;\n  }\n\n  /**\n   * Render the button content when the user is not signed in.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderSignedOutButtonContent(): TemplateResult {\n    const template = this.renderTemplate('signed-out-button-content', null);\n    return (\n      template ||\n      html`\n        <span>${this.strings.signInLinkSubtitle}</span>`\n    );\n  }\n\n  /**\n   * Show the flyout and its content.\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected showFlyout(): void {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.open();\n    }\n  }\n\n  /**\n   * Dismiss the flyout.\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected hideFlyout(): void {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.close();\n    }\n  }\n\n  /**\n   * Handles the click on the button in the flyout.\n   *\n   * @private\n   * @memberof MgtLogin\n   */\n  private readonly onClick = (): void => {\n    if (this.userDetails && this._isFlyoutOpen) {\n      this.hideFlyout();\n    } else if (this.userDetails) {\n      this.showFlyout();\n    } else {\n      void this.login();\n    }\n  };\n}\n"]}