{"version":3,"file":"fluent-icons.js","sourceRoot":"src/","sources":["styles/fluent-icons.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,MAAM,WAAW,GAA2B;IAC1C,UAAU,EAAE,MAAM;IAClB,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,MAAM;IACb,GAAG,EAAE,KAAK;IACV,OAAO,EAAE,QAAQ;IACjB,WAAW,EAAE,KAAK;IAClB,QAAQ,EAAE,KAAK;IACf,KAAK,EAAE,MAAM;IACb,SAAS,EAAE,KAAK;IAChB,OAAO,EAAE,KAAK;IACd,MAAM,EAAE,OAAO;IACf,IAAI,EAAE,OAAO;IACb,GAAG,EAAE,KAAK;IACV,OAAO,EAAE,SAAS;IAClB,GAAG,EAAE,QAAQ;IACb,KAAK,EAAE,OAAO;IACd,KAAK,EAAE,OAAO;IACd,KAAK,EAAE,OAAO;IACd,GAAG,EAAE,MAAM;IACX,IAAI,EAAE,KAAK;IACX,GAAG,EAAE,KAAK;IACV,KAAK,EAAE,aAAa;IACpB,eAAe,EAAE,aAAa;IAC9B,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE,KAAK;IACb,KAAK,EAAE,aAAa;CACrB,CAAC;AAEF,MAAM,OAAO,GAAG,qFAAqF,CAAC;AAOtG;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,IAAY,EAAE,IAAc,EAAE,SAAwB,EAAE,EAAE;IAC3F,MAAM,QAAQ,GAAW,WAAW,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC;IAC5D,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,QAAQ,IAAI,SAAS,EAAE,CAAC;AAClE,CAAC,CAAC;AAEF;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,6BAA6B,GAAG,CAAC,IAAY,EAAE,IAAc,EAAE,SAAwB,EAAE,EAAE;IACtG,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC;IAC9E,IAAI,KAAK,EAAE;QACT,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,IAAI,SAAS,EAAE,CAAC;KAC7D;SAAM,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,EAAE;QAC3C,IAAI,GAAG,OAAO,CAAC;QACf,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,IAAI,SAAS,EAAE,CAAC;KAC7D;SAAM;QACL,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CAAC","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nconst fileTypeMap: Record<string, string> = {\n  PowerPoint: 'pptx',\n  Word: 'docx',\n  Excel: 'xlsx',\n  Pdf: 'pdf',\n  OneNote: 'onetoc',\n  OneNotePage: 'one',\n  InfoPath: 'xsn',\n  Visio: 'vstx',\n  Publisher: 'pub',\n  Project: 'mpp',\n  Access: 'accdb',\n  Mail: 'email',\n  Csv: 'csv',\n  Archive: 'archive',\n  Xps: 'vector',\n  Audio: 'audio',\n  Video: 'video',\n  Image: 'photo',\n  Web: 'html',\n  Text: 'txt',\n  Xml: 'xml',\n  Story: 'genericfile',\n  ExternalContent: 'genericfile',\n  Folder: 'folder',\n  Spsite: 'spo',\n  Other: 'genericfile'\n};\n\nconst baseUri = 'https://spoprod-a.akamaihd.net/files/fabric-cdn-prod_20201008.001/assets/item-types';\n\n/**\n * Available icon sizes\n */\nexport type IconSize = 16 | 20 | 24 | 32 | 40 | 48 | 64 | 96;\n\n/**\n * Helper to provide fluent icon image urls\n *\n * @param type\n * @param size\n * @param extension\n * @returns\n */\nexport const getFileTypeIconUri = (type: string, size: IconSize, extension: 'png' | 'svg') => {\n  const fileType: string = fileTypeMap[type] || 'genericfile';\n  return `${baseUri}/${size.toString()}/${fileType}.${extension}`;\n};\n\n/**\n * Helper to provide fluent icon image urls with the correct size\n *\n * @param type\n * @param size\n * @param extension\n * @returns\n */\nexport const getFileTypeIconUriByExtension = (type: string, size: IconSize, extension: 'png' | 'svg') => {\n  const found = Object.keys(fileTypeMap).find(key => fileTypeMap[key] === type);\n  if (found) {\n    return `${baseUri}/${size.toString()}/${type}.${extension}`;\n  } else if (type === 'jpg' || type === 'png') {\n    type = 'photo';\n    return `${baseUri}/${size.toString()}/${type}.${extension}`;\n  } else {\n    return null;\n  }\n};\n"]}