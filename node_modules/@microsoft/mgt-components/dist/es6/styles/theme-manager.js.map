{"version":3,"file":"theme-manager.js","sourceRoot":"src/","sources":["styles/theme-manager.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  accentBaseColor,\n  accentFillActive,\n  accentFillFocus,\n  accentFillHover,\n  accentFillRest,\n  accentForegroundActive,\n  accentForegroundFocus,\n  accentForegroundHover,\n  accentForegroundRest,\n  accentStrokeControlActive,\n  accentStrokeControlFocus,\n  accentStrokeControlHover,\n  accentStrokeControlRest,\n  baseLayerLuminance,\n  foregroundOnAccentActive,\n  foregroundOnAccentFocus,\n  foregroundOnAccentHover,\n  foregroundOnAccentRest,\n  neutralBaseColor,\n  StandardLuminance,\n  SwatchRGB\n} from '@fluentui/web-components';\nimport { DesignToken } from '@microsoft/fast-foundation';\n// @microsoft/fast-colors is a transitive dependency of @fluentui/web-components, no need to explicitly add it to package.json\nimport { parseColorHexRGB } from '@microsoft/fast-colors';\n\n/**\n * Available predefined themes\n */\ntype Theme = 'light' | 'dark' | 'default' | 'contrast';\n\nconst secondaryTextDefault = '#717171';\nconst secondaryTextColor = DesignToken.create<string>('secondary-text-color').withDefault(secondaryTextDefault);\nconst secondaryTextHoverDefault = '#1a1a1a';\nconst secondaryTextHoverColor =\n  DesignToken.create<string>('secondary-text-hover-color').withDefault(secondaryTextHoverDefault);\n\n/**\n * Helper function to apply fluent ui theme to an element\n *\n * @export\n * @param {Theme} theme - theme name, if an unknown theme is provided, the light theme will be applied\n * @param {HTMLElement} [element=document.body]\n */\nexport const applyTheme = (theme: Theme, element: HTMLElement = document.body): void => {\n  const settings = getThemeSettings(theme);\n  applyColorScheme(settings, element);\n};\n\n/**\n * Simple data holder for theme settings\n */\ninterface ColorScheme {\n  /**\n   * Hex color string for accent base color\n   *\n   * @type {string}\n   */\n  accentBaseColor: string;\n  /**\n   * Hex color string for neutral base color\n   *\n   * @type {string}\n   */\n  neutralBaseColor: string;\n  /**\n   * Base layer luminance for the theme\n   * in the range of 0 to 1\n   *\n   * @type {number}\n   */\n  baseLayerLuminance: number;\n\n  /**\n   * Optional function to override design tokens\n   */\n  designTokenOverrides?: (element: HTMLElement) => void;\n}\n\n/**\n * Helper function to apply fluent ui color scheme to an element\n *\n * @param {ColorScheme} settings\n * @param {HTMLElement} [element=document.body]\n */\nconst applyColorScheme = (settings: ColorScheme, element: HTMLElement = document.body): void => {\n  accentBaseColor.setValueFor(element, SwatchRGB.from(parseColorHexRGB(settings.accentBaseColor)));\n  neutralBaseColor.setValueFor(element, SwatchRGB.from(parseColorHexRGB(settings.neutralBaseColor)));\n  baseLayerLuminance.setValueFor(element, settings.baseLayerLuminance);\n  settings.designTokenOverrides?.(element);\n};\n\n/**\n * Helper function to translate theme name to theme settings\n *\n * @param {Theme} theme\n * @return {*}  {ThemeSettings}\n */\nconst getThemeSettings = (theme: Theme): ColorScheme => {\n  switch (theme) {\n    case 'contrast':\n      return {\n        accentBaseColor: '#7f85f5',\n        neutralBaseColor: '#adadad',\n        baseLayerLuminance: StandardLuminance.DarkMode\n      };\n    case 'default': // this is the Teams light theme\n      return {\n        accentBaseColor: '#5b5fc7',\n        neutralBaseColor: '#616161',\n        baseLayerLuminance: StandardLuminance.LightMode\n      };\n    case 'dark': // Both MGT default dark and Teams Dark theme\n      return {\n        accentBaseColor: '#479ef5',\n        neutralBaseColor: '#adadad',\n        baseLayerLuminance: StandardLuminance.DarkMode,\n        designTokenOverrides: element => {\n          accentFillRest.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#115ea3')));\n          accentFillHover.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#0f6cbd')));\n          accentFillActive.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#0c3b5e')));\n          accentFillFocus.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#0f548c')));\n          accentForegroundRest.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#479EF5')));\n          accentForegroundHover.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#62abf5')));\n          accentForegroundActive.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#2886de')));\n          accentForegroundFocus.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#479ef5')));\n          accentStrokeControlRest.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#115ea3')));\n          accentStrokeControlHover.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#0f6cbd')));\n          accentStrokeControlActive.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#0c3b5e')));\n          accentStrokeControlFocus.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#0f548c')));\n          foregroundOnAccentActive.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#ffffff')));\n          foregroundOnAccentRest.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#ffffff')));\n          foregroundOnAccentHover.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#ffffff')));\n          foregroundOnAccentFocus.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#ffffff')));\n          secondaryTextColor.setValueFor(element, '#8e8e8e');\n          secondaryTextHoverColor.setValueFor(element, '#ffffff');\n        }\n      };\n    case 'light':\n    default:\n      return {\n        accentBaseColor: '#0f6cbd',\n        neutralBaseColor: '#616161',\n        baseLayerLuminance: StandardLuminance.LightMode,\n        designTokenOverrides: element => {\n          secondaryTextColor.setValueFor(element, secondaryTextDefault);\n          secondaryTextHoverColor.setValueFor(element, secondaryTextHoverDefault);\n        }\n      };\n  }\n};\n"]}