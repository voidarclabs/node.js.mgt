{"version":3,"file":"TeamsHelper.js","sourceRoot":"src/","sources":["utils/TeamsHelper.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAmCH;;;;;GAKG;AACH,MAAM,OAAO,WAAW;IACtB;;;;;;;;OAQG;IACI,MAAM,KAAK,iBAAiB;QACjC,OAAO,IAAI,CAAC,kBAAkB,IAAK,MAAsB,CAAC,cAAc,CAAC;IAC3E,CAAC;IACM,MAAM,KAAK,iBAAiB,CAAC,KAAe;QACjD,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IAClC,CAAC;IAED;;;;;;;OAOG;IACI,MAAM,KAAK,WAAW;QAC3B,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC3B,OAAO,KAAK,CAAC;SACd;QACD,IAAI,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,IAAK,MAAsB,CAAC,eAAe,EAAE;YAC5E,yBAAyB;YACzB,OAAO,IAAI,CAAC;SACb;aAAM,IAAI,MAAM,CAAC,IAAI,KAAK,yBAAyB,IAAI,MAAM,CAAC,IAAI,KAAK,qBAAqB,EAAE;YAC7F,8BAA8B;YAC9B,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;;;;;;OAOG;IACI,MAAM,CAAC,eAAe,CAAC,QAAgB,EAAE,UAAuD;QACrG,MAAM,KAAK,GAAa,IAAI,CAAC,iBAAiB,CAAC;QAC/C,KAAK,CAAC,UAAU,EAAE,CAAC;QACnB,KAAK,CAAC,eAAe,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IAC9C,CAAC;CAGF","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport interface loginContext {\n  loginHint: string;\n}\n\nexport interface TeamsLib {\n  initialize(): void;\n  executeDeepLink(deeplink: string, onComplete?: (status: boolean, reason?: string) => void): void;\n  authentication: {\n    authenticate(authConfig: {\n      failureCallback: (reason) => void;\n      successCallback: (result) => void;\n      url: string;\n    }): void;\n    getAuthToken(authCallback: { failureCallback: (reason) => void; successCallback: (result) => void }): void;\n    notifySuccess(message?: string): void;\n    notifyFailure(message: string): void;\n  };\n  getContext(callback?: (context: loginContext) => void): Promise<loginContext>;\n}\n\n/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\ntype TeamsWindow = Window &\n  typeof globalThis & {\n    microsoftTeams: TeamsLib;\n    nativeInterface: unknown;\n  };\n\n/**\n * A helper class for interacting with the Teams Client SDK.\n *\n * @export\n * @class TeamsHelper\n */\nexport class TeamsHelper {\n  /**\n   * Optional entry point to the teams library\n   * If this value is not set, the provider will attempt to use\n   * the microsoftTeams global variable.\n   *\n   * @static\n   * @type {TeamsLib}\n   * @memberof TeamsHelper\n   */\n  public static get microsoftTeamsLib(): TeamsLib {\n    return this._microsoftTeamsLib || (window as TeamsWindow).microsoftTeams;\n  }\n  public static set microsoftTeamsLib(value: TeamsLib) {\n    this._microsoftTeamsLib = value;\n  }\n\n  /**\n   * Gets whether the Teams provider can be used in the current context\n   * (Whether the app is running in Microsoft Teams)\n   *\n   * @readonly\n   * @static\n   * @memberof TeamsHelper\n   */\n  public static get isAvailable(): boolean {\n    if (!this.microsoftTeamsLib) {\n      return false;\n    }\n    if (window.parent === window.self && (window as TeamsWindow).nativeInterface) {\n      // In Teams mobile client\n      return true;\n    } else if (window.name === 'embedded-page-container' || window.name === 'extension-tab-frame') {\n      // In Teams web/desktop client\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Execute a deeplink against the Teams lib.\n   *\n   * @static\n   * @param {string} deeplink\n   * @param {(status: boolean, reason?: string) => void} [onComplete]\n   * @memberof TeamsHelper\n   */\n  public static executeDeepLink(deeplink: string, onComplete?: (status: boolean, reason?: string) => void): void {\n    const teams: TeamsLib = this.microsoftTeamsLib;\n    teams.initialize();\n    teams.executeDeepLink(deeplink, onComplete);\n  }\n\n  private static _microsoftTeamsLib: TeamsLib;\n}\n"]}