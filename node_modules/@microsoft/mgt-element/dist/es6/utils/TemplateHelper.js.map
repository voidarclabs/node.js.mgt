{"version":3,"file":"TemplateHelper.js","sourceRoot":"src/","sources":["utils/TemplateHelper.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\ntype ContextualTemplateElement = HTMLTemplateElement & {\n  /**\n   * The data context of the parent template\n   */\n  $parentTemplateContext?: object;\n};\n\n/**\n * Helper class for Template Instantiation\n *\n * @export\n * @class TemplateHelper\n */\nexport class TemplateHelper {\n  /**\n   * Render a template into a HTMLElement with the appropriate data context\n   *\n   * Ex:\n   * ```\n   * <template>\n   *  <div>{{myObj.someStr}}</div>\n   *  <div data-for=\"key in myObj.list\">\n   *    <div>{{key.anotherStr}}</div>\n   *  </div>\n   * </template>\n   * ```\n   *\n   * @param root the root element to parent the rendered content\n   * @param template the template to render\n   * @param context the data context to be applied\n   */\n  public static renderTemplate(root: HTMLElement, template: ContextualTemplateElement, context: object) {\n    // inherit context from parent template\n    if (template.$parentTemplateContext) {\n      context = { ...context, $parent: template.$parentTemplateContext };\n    }\n\n    let rendered: Node;\n\n    if (template.content?.childNodes.length) {\n      const templateContent = template.content.cloneNode(true);\n      rendered = this.renderNode(templateContent, root, context);\n    } else if (template.childNodes.length) {\n      const div = document.createElement('div');\n\n      for (const node of template.childNodes) {\n        div.appendChild(this.simpleCloneNode(node));\n      }\n      rendered = this.renderNode(div, root, context);\n    }\n\n    if (rendered) {\n      root.appendChild(rendered);\n    }\n  }\n\n  /**\n   * Set an alternative binding syntax. Default is {{ <value> }}\n   *\n   * @static\n   * @param {string} startStr start of binding syntax\n   * @param {string} endStr end of binding syntax\n   * @memberof TemplateHelper\n   */\n  public static setBindingSyntax(startStr: string, endStr: string) {\n    this._startExpression = startStr;\n    this._endExpression = endStr;\n\n    const start = this.escapeRegex(this._startExpression);\n    const end = this.escapeRegex(this._endExpression);\n\n    this._expression = new RegExp(`${start}\\\\s*([$\\\\w\\\\.,'\"\\\\s()\\\\[\\\\]]+)\\\\s*${end}`, 'g');\n  }\n\n  /**\n   * Global context containing data or functions available to\n   * all templates for binding\n   *\n   * @readonly\n   * @static\n   * @memberof TemplateHelper\n   */\n  public static get globalContext() {\n    return this._globalContext;\n  }\n\n  private static readonly _globalContext = {};\n\n  private static get expression() {\n    if (!this._expression) {\n      this.setBindingSyntax('{{', '}}');\n    }\n\n    return this._expression;\n  }\n\n  private static _startExpression: string;\n  private static _endExpression: string;\n  private static _expression: RegExp;\n\n  private static escapeRegex(string: string) {\n    return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  // simple implementation of deep cloneNode\n  // required for nested templates in polyfilled browsers\n  private static simpleCloneNode(node: ChildNode) {\n    if (!node) {\n      return null;\n    }\n\n    const clone = node.cloneNode(false);\n\n    for (const child of node.childNodes) {\n      const childClone = this.simpleCloneNode(child);\n      if (childClone) {\n        clone.appendChild(childClone);\n      }\n    }\n\n    return clone;\n  }\n\n  private static expandExpressionsAsString(str: string, context: object) {\n    return str.replace(this.expression, (match: string, p1: string) => {\n      const value = this.evalInContext(p1 || this.trimExpression(match), context);\n      if (value) {\n        if (typeof value === 'object') {\n          return JSON.stringify(value);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-base-to-string\n          return value.toString();\n        }\n      }\n      return '';\n    });\n  }\n\n  private static renderNode(node: Node, root: HTMLElement, context: object) {\n    if (node.nodeName === '#text') {\n      node.textContent = this.expandExpressionsAsString(node.textContent, context);\n      return node;\n    } else if (node.nodeName === 'TEMPLATE') {\n      (node as ContextualTemplateElement).$parentTemplateContext = context;\n      return node;\n    }\n\n    const nodeElement = node as HTMLElement;\n\n    // replace attribute values\n    if (nodeElement.attributes) {\n      for (const attribute of nodeElement.attributes) {\n        if (attribute.name === 'data-props') {\n          const propsValue = this.trimExpression(attribute.value);\n          for (const prop of propsValue.split(',')) {\n            const keyValue = prop.trim().split(':');\n            if (keyValue.length === 2) {\n              const key = keyValue[0].trim();\n              const value = this.evalInContext(keyValue[1].trim(), context);\n\n              if (key.startsWith('@')) {\n                // event\n                if (typeof value === 'function') {\n                  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                  nodeElement.addEventListener(key.substring(1), e => value(e, context, root));\n                }\n              } else {\n                nodeElement[key] = value;\n              }\n            }\n          }\n        } else {\n          nodeElement.setAttribute(attribute.name, this.expandExpressionsAsString(attribute.value, context));\n        }\n      }\n    }\n\n    // don't process nodes that will loop yet, but\n    // keep a reference of them\n    const loopChildren: HTMLElement[] = [];\n\n    // list of children to remove (ex, when data-if == false)\n    const removeChildren = [];\n    let previousChildWasIfAndTrue = false;\n\n    for (const childNode of node.childNodes) {\n      const childElement = childNode as HTMLElement;\n      let previousChildWasIfAndTrueSet = false;\n\n      if (childElement.dataset) {\n        let childWillBeRemoved = false;\n\n        if (childElement.dataset.if) {\n          const expression = childElement.dataset.if;\n          if (!this.evalBoolInContext(this.trimExpression(expression), context)) {\n            removeChildren.push(childElement);\n            childWillBeRemoved = true;\n          } else {\n            childElement.removeAttribute('data-if');\n            previousChildWasIfAndTrue = true;\n            previousChildWasIfAndTrueSet = true;\n          }\n        } else if (typeof childElement.dataset.else !== 'undefined') {\n          if (previousChildWasIfAndTrue) {\n            removeChildren.push(childElement);\n            childWillBeRemoved = true;\n          } else {\n            childElement.removeAttribute('data-else');\n          }\n        }\n\n        if (childElement.dataset.for && !childWillBeRemoved) {\n          loopChildren.push(childElement);\n        } else if (!childWillBeRemoved) {\n          this.renderNode(childNode, root, context);\n        }\n      } else {\n        this.renderNode(childNode, root, context);\n      }\n\n      // clear the flag if the current node wasn't data-if\n      // or if it was data-if but it wasn't true\n      if (!previousChildWasIfAndTrueSet && childNode.nodeName !== '#text') {\n        previousChildWasIfAndTrue = false;\n      }\n    }\n\n    // now handle nodes that need to be removed\n    for (const child of removeChildren) {\n      nodeElement.removeChild(child);\n    }\n\n    // now handle nodes that should loop\n    for (const childElement of loopChildren) {\n      const loopExpression = childElement.dataset.for;\n      const loopTokens = this.trimExpression(loopExpression).split(/\\s(in|of)\\s/i);\n\n      if (loopTokens.length === 3) {\n        // don't really care what's in the middle at this point\n        const itemName = loopTokens[0].trim();\n        const listKey = loopTokens[2].trim();\n\n        const list = this.evalInContext(listKey, context);\n        if (Array.isArray(list)) {\n          // first remove the child\n          // we will need to make copy of the child for\n          // each element in the list\n          childElement.removeAttribute('data-for');\n\n          for (let j = 0; j < list.length; j++) {\n            const newContext = {\n              $index: j,\n              ...context\n            };\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            newContext[itemName] = list[j];\n\n            const clone = childElement.cloneNode(true);\n            this.renderNode(clone, root, newContext);\n            nodeElement.insertBefore(clone, childElement);\n          }\n        }\n        nodeElement.removeChild(childElement);\n      }\n    }\n\n    return node;\n  }\n\n  private static evalBoolInContext(expression: string, context: object): boolean {\n    context = { ...context, ...this.globalContext };\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-implied-eval\n    return new Function('with(this) { return !!(' + expression + ')}').call(context);\n  }\n\n  private static evalInContext(expression: string, context: object): unknown {\n    context = { ...context, ...this.globalContext };\n    // eslint-disable-next-line @typescript-eslint/no-implied-eval\n    const func = new Function('with(this) { return ' + expression + ';}');\n    let result: unknown;\n    try {\n      result = func.call(context);\n    } catch (e) {\n      /* empty */\n    }\n    return result;\n  }\n\n  private static trimExpression(expression: string) {\n    expression = expression.trim();\n\n    if (expression.startsWith(this._startExpression) && expression.endsWith(this._endExpression)) {\n      expression = expression.substr(\n        this._startExpression.length,\n        expression.length - this._startExpression.length - this._endExpression.length\n      );\n      expression = expression.trim();\n    }\n\n    return expression;\n  }\n}\n"]}