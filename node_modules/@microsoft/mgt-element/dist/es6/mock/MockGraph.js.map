{"version":3,"file":"MockGraph.js","sourceRoot":"src/","sources":["mock/MockGraph.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;;;;;;;AAEH,OAAO,EACL,qBAAqB,EACrB,MAAM,EACN,kBAAkB,EAElB,YAAY,EACZ,mBAAmB,EACnB,gBAAgB,EACjB,MAAM,mCAAmC,CAAC;AAE3C,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AACjC,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AAGxD,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD;;;;;;GAMG;AACH,MAAM,OAAO,SAAU,SAAQ,KAAK;IAClC;;;;;;;OAOG;IACI,MAAM,CAAO,MAAM,CAAC,QAAsB;;YAC/C,MAAM,UAAU,GAAiB;gBAC/B,IAAI,qBAAqB,CAAC,QAAQ,CAAC;gBACnC,IAAI,YAAY,CAAC,IAAI,mBAAmB,EAAE,CAAC;gBAC3C,IAAI,gBAAgB,EAAE;gBACtB,IAAI,cAAc,EAAE;gBACpB,IAAI,kBAAkB,EAAE;aACzB,CAAC;YAEF,OAAO,IAAI,SAAS,CAClB,MAAM,CAAC,kBAAkB,CAAC;gBACxB,UAAU,EAAE,eAAe,CAAC,GAAG,UAAU,CAAC;gBAC1C,WAAW,EAAE,IAAI,GAAG,CAAS,CAAC,IAAI,GAAG,CAAC,MAAM,cAAc,CAAC,UAAU,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;aACpF,CAAC,CACH,CAAC;QACJ,CAAC;KAAA;IAED;;;;;;OAMG;IACH,6DAA6D;IACtD,YAAY,CAAC,SAA2B;QAC7C,mGAAmG;QACnG,uGAAuG;QACvG,OAAO,IAAI,CAAC;IACd,CAAC;CACF","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  AuthenticationHandler,\n  Client,\n  HTTPMessageHandler,\n  Middleware,\n  RetryHandler,\n  RetryHandlerOptions,\n  TelemetryHandler\n} from '@microsoft/microsoft-graph-client';\nimport { MgtBaseComponent } from '../components/baseComponent';\nimport { Graph } from '../Graph';\nimport { chainMiddleware } from '../utils/GraphHelpers';\n\nimport { MockProvider } from './MockProvider';\nimport { MockMiddleware } from './MockMiddleware';\n\n/**\n * MockGraph Instance\n *\n * @export\n * @class MockGraph\n * @extends {Graph}\n */\nexport class MockGraph extends Graph {\n  /**\n   * Creates a new MockGraph instance. Use this static method instead of the constructor.\n   *\n   * @static\n   * @param {MockProvider} provider\n   * @return {*}  {Promise<MockGraph>}\n   * @memberof MockGraph\n   */\n  public static async create(provider: MockProvider): Promise<MockGraph> {\n    const middleware: Middleware[] = [\n      new AuthenticationHandler(provider),\n      new RetryHandler(new RetryHandlerOptions()),\n      new TelemetryHandler(),\n      new MockMiddleware(),\n      new HTTPMessageHandler()\n    ];\n\n    return new MockGraph(\n      Client.initWithMiddleware({\n        middleware: chainMiddleware(...middleware),\n        customHosts: new Set<string>([new URL(await MockMiddleware.getBaseUrl()).hostname])\n      })\n    );\n  }\n\n  /**\n   * Returns an instance of the Graph in the context of the provided component.\n   *\n   * @param {MgtBaseComponent} component\n   * @returns\n   * @memberof Graph\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public forComponent(component: MgtBaseComponent): MockGraph {\n    // The purpose of the forComponent pattern is to update the headers of any outgoing Graph requests.\n    // The MockGraph isn't making real Graph requests, so we can simply no-op and return the same instance.\n    return this;\n  }\n}\n"]}