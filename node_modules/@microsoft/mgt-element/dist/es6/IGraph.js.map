{"version":3,"file":"IGraph.js","sourceRoot":"src/","sources":["IGraph.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AA2EH;;;GAGG;AACH,MAAM,CAAC,MAAM,gCAAgC,GAAkB,6BAA6B,CAAC;AAE7F;;GAEG;AACH,MAAM,CAAC,MAAM,yBAAyB,GAAuB,IAAI,GAAG,CAAgB;IAClF,gCAAgC;IAChC,4BAA4B;IAC5B,gCAAgC;IAChC,4BAA4B;IAC5B,yCAAyC;IACzC,oCAAoC;CACrC,CAAC,CAAC","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { Client, GraphRequest } from '@microsoft/microsoft-graph-client';\nimport { IBatch } from './IBatch';\n\n/**\n * The common functions of the Graph\n *\n * @export\n * @interface IGraph\n */\nexport interface IGraph {\n  /**\n   * the internal client used to make graph calls\n   *\n   * @type {Client}\n   * @memberof IGraph\n   */\n  readonly client: Client;\n\n  /**\n   * the component name appended to Graph request headers\n   *\n   * @type {string}\n   * @memberof IGraph\n   */\n  readonly componentName: string;\n\n  /**\n   * the version of the graph to query\n   *\n   * @type {string}\n   * @memberof IGraph\n   */\n  readonly version: string;\n\n  /**\n   * returns a new instance of the Graph using the same\n   * client within the context of the provider.\n   *\n   * @param {Element} component\n   * @returns {IGraph}\n   * @memberof IGraph\n   */\n  forComponent(component: Element): IGraph;\n\n  /**\n   * use this method to make calls directly to the Graph.\n   *\n   * @param {string} path\n   * @returns {GraphRequest}\n   * @memberof IGraph\n   */\n  api(path: string): GraphRequest;\n\n  /**\n   * creates a new batch request\n   *\n   * @returns {Batch}\n   * @memberof IGraph\n   */\n  createBatch<T = any>(): IBatch<T>;\n}\n\n/**\n * GraphEndpoint is a valid URL that is used to access the Graph.\n */\nexport type GraphEndpoint =\n  | 'https://graph.microsoft.com'\n  | 'https://graph.microsoft.us'\n  | 'https://dod-graph.microsoft.us'\n  | 'https://graph.microsoft.de'\n  | 'https://microsoftgraph.chinacloudapi.cn'\n  | 'https://canary.graph.microsoft.com';\n\n/**\n * MICROSOFT_GRAPH_DEFAULT_ENDPOINT is the default Graph endpoint that is silently set on\n * the providers as the baseURL.\n */\nexport const MICROSOFT_GRAPH_DEFAULT_ENDPOINT: GraphEndpoint = 'https://graph.microsoft.com';\n\n/**\n * MICROSOFT_GRAPH_ENDPOINTS is a set of all the valid Graph URL endpoints.\n */\nexport const MICROSOFT_GRAPH_ENDPOINTS: Set<GraphEndpoint> = new Set<GraphEndpoint>([\n  MICROSOFT_GRAPH_DEFAULT_ENDPOINT,\n  'https://graph.microsoft.us',\n  'https://dod-graph.microsoft.us',\n  'https://graph.microsoft.de',\n  'https://microsoftgraph.chinacloudapi.cn',\n  'https://canary.graph.microsoft.com'\n]);\n"]}