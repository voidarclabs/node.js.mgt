{"version":3,"file":"customElementHelper.js","sourceRoot":"src/","sources":["components/customElementHelper.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,MAAM,mBAAmB;IAAzB;QAIU,oBAAe,GAAG,EAAE,CAAC;IA4D/B,CAAC;IA/DC,IAAY,aAAa;QACvB,OAAO,KAAK,CAAC;IACf,CAAC;IAGD;;;;;;OAMG;IACI,kBAAkB,CAAC,cAAsB;QAC9C,IAAI,cAAc,IAAI,CAAC,IAAI,CAAC,eAAe;YAAE,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACnF,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;;OAMG;IACH,IAAW,MAAM;QACf,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;IACrG,CAAC;IAED;;;;;;OAMG;IACH,IAAW,cAAc;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED;;;;;;OAMG;IACH,IAAW,eAAe;QACxB,OAAO,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACvC,CAAC;IAED;;;;;;;OAOG;IACI,SAAS,CAAC,OAAe;QAC9B,OAAO,IAAI,CAAC,eAAe;YACzB,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;YAC5F,CAAC,CAAC,OAAO,CAAC;IACd,CAAC;CACF;AAED;;;;GAIG;AACH,MAAM,mBAAmB,GAAG,IAAI,mBAAmB,EAAE,CAAC;AACtD,OAAO,EAAE,mBAAmB,EAAE,CAAC","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nclass CustomElementHelper {\n  private get defaultPrefix() {\n    return 'mgt';\n  }\n  private _disambiguation = '';\n\n  /**\n   * Adds a disambiguation segment to the custom elements registered with the browser\n   *\n   * @param {string} disambiguation\n   * @return {CustomElementHelper} the current object\n   * @memberof CustomElementHelper\n   */\n  public withDisambiguation(disambiguation: string) {\n    if (disambiguation && !this._disambiguation) this._disambiguation = disambiguation;\n    return this;\n  }\n\n  /**\n   * Provides the prefix to be used for mgt web component tags\n   *\n   * @readonly\n   * @type {string}\n   * @memberof CustomElementHelper\n   */\n  public get prefix(): string {\n    return this._disambiguation ? `${this.defaultPrefix}-${this._disambiguation}` : this.defaultPrefix;\n  }\n\n  /**\n   * Returns the current value for the disambiguation\n   *\n   * @readonly\n   * @type {string}\n   * @memberof CustomElementHelper\n   */\n  public get disambiguation(): string {\n    return this._disambiguation;\n  }\n\n  /**\n   * Returns true if a value has been provided for the disambiguation\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberof CustomElementHelper\n   */\n  public get isDisambiguated(): boolean {\n    return Boolean(this._disambiguation);\n  }\n\n  /**\n   * Removes disambiguation from the provided tagName.\n   * Intended for use when providing tag names in analytics headers passed by the Graph client\n   *\n   * @param {string} tagName\n   * @return {*}  {string}\n   * @memberof CustomElementHelper\n   */\n  public normalize(tagName: string): string {\n    return this.isDisambiguated\n      ? tagName.toUpperCase().replace(this.prefix.toUpperCase(), this.defaultPrefix.toUpperCase())\n      : tagName;\n  }\n}\n\n/**\n * Helper object to provide the desired prefix for mgt web component tags\n *\n * @type CustomElementHelper\n */\nconst customElementHelper = new CustomElementHelper();\nexport { customElementHelper };\n"]}